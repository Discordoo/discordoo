{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Discordoo Documentation # Hi there! This is the Discordoo documentation. Here you will learn all the basics and internals of Discordoo. Where to start? # If you are a beginner, go to the Base guide tab. This is the most friendly place where you can learn how to work with Discordoo. Or you can go to the Api tab, it contains a precise description for everything in Discordoo, but it wasn't intended as a good place to start. Important notice # This documentation is intended to be read by people, who know TypeScript and Node.js on beginner's level. We will not help you if you don't know how to use Node.js or write basic TypeScript code.","title":"Hello"},{"location":"#discordoo-documentation","text":"Hi there! This is the Discordoo documentation. Here you will learn all the basics and internals of Discordoo.","title":"Discordoo Documentation"},{"location":"#where-to-start","text":"If you are a beginner, go to the Base guide tab. This is the most friendly place where you can learn how to work with Discordoo. Or you can go to the Api tab, it contains a precise description for everything in Discordoo, but it wasn't intended as a good place to start.","title":"Where to start?"},{"location":"#important-notice","text":"This documentation is intended to be read by people, who know TypeScript and Node.js on beginner's level. We will not help you if you don't know how to use Node.js or write basic TypeScript code.","title":"Important notice"},{"location":"advanced-guide/","text":"Discordoo guide for advanced developers # Hi there! This part of our guide is intended for developers who want to get more advanced in the development of bots using Discordoo. More complex things are described here, such as sharding, using and writing your own providers and modules for Discordoo, and so on. Please # This part of the guide is not for beginners. If you are a beginner, please read the base guide before.","title":"Discordoo guide for advanced developers"},{"location":"advanced-guide/#discordoo-guide-for-advanced-developers","text":"Hi there! This part of our guide is intended for developers who want to get more advanced in the development of bots using Discordoo. More complex things are described here, such as sharding, using and writing your own providers and modules for Discordoo, and so on.","title":"Discordoo guide for advanced developers"},{"location":"advanced-guide/#please","text":"This part of the guide is not for beginners. If you are a beginner, please read the base guide before.","title":"Please"},{"location":"advanced-guide/internal-utilities/snowflakes/","text":"Discordoo Snowflakes # DiscordooSnowflake is a custom twitter snowflake. Why we use snowflakes # We decided to use snowflake as a way to identify sharding instances and as a way to identify interprocess messages. Every time one sharding instance sends a message to the sharding manager or vice versa, a DiscordooSnowflake is created. Since interprocess interaction is reduced only to sending and receiving events, we can't just send a message and get a response. We must somehow understand that this response was exactly to our request. That's why each message is assigned a unique identifier in the form of DiscordooSnowflake. With this unique identifier, we can understand that the response was exactly for us. Analyzing Snowflake # If we have a snowflake 1128425170719486862453931925225603077 we can represent it as binary: 128 86 54 22 000000001101100101010011101010000000011011 00000000000000000000000000001011 00000000000000000000000001100011 0000000000000000000101 number of ms since Discordoo epoch worker id shard id increment After converting to binary, we can allocate individual blocks to find out the information that we used to generate this snowflake. We can get timestamp (generation time) from snowflake const EPOCH = 1609459200000 // 2021-01-01T00:00:00.000Z const timestamp = (BigInt(snowflake) >> 86n) + BigInt(EPOCH) // 1624043753498n Or internal worker id (usually, this is the ID of the process that created the snowflake) const workerID = (BigInt(snowflake) & 0x3FFFFFFFC0000000000000n) >> 54n // 11n Or shard id (process, worker or cluster ID, not WebSocketClient (discord shard) id) const shardID = (BigInt(snowflake) & 0x3FFFFFFFC00000n) >> 22n // 99n And the last, we can get the snowflake increment (number that increases by 1 for each generation of snowflake on the same process) const increment = BigInt(snowflake) & 0x3FFFFFn // 5n","title":"Discordoo Snowflakes"},{"location":"advanced-guide/internal-utilities/snowflakes/#discordoo-snowflakes","text":"DiscordooSnowflake is a custom twitter snowflake.","title":"Discordoo Snowflakes"},{"location":"advanced-guide/internal-utilities/snowflakes/#why-we-use-snowflakes","text":"We decided to use snowflake as a way to identify sharding instances and as a way to identify interprocess messages. Every time one sharding instance sends a message to the sharding manager or vice versa, a DiscordooSnowflake is created. Since interprocess interaction is reduced only to sending and receiving events, we can't just send a message and get a response. We must somehow understand that this response was exactly to our request. That's why each message is assigned a unique identifier in the form of DiscordooSnowflake. With this unique identifier, we can understand that the response was exactly for us.","title":"Why we use snowflakes"},{"location":"advanced-guide/internal-utilities/snowflakes/#analyzing-snowflake","text":"If we have a snowflake 1128425170719486862453931925225603077 we can represent it as binary: 128 86 54 22 000000001101100101010011101010000000011011 00000000000000000000000000001011 00000000000000000000000001100011 0000000000000000000101 number of ms since Discordoo epoch worker id shard id increment After converting to binary, we can allocate individual blocks to find out the information that we used to generate this snowflake. We can get timestamp (generation time) from snowflake const EPOCH = 1609459200000 // 2021-01-01T00:00:00.000Z const timestamp = (BigInt(snowflake) >> 86n) + BigInt(EPOCH) // 1624043753498n Or internal worker id (usually, this is the ID of the process that created the snowflake) const workerID = (BigInt(snowflake) & 0x3FFFFFFFC0000000000000n) >> 54n // 11n Or shard id (process, worker or cluster ID, not WebSocketClient (discord shard) id) const shardID = (BigInt(snowflake) & 0x3FFFFFFFC00000n) >> 22n // 99n And the last, we can get the snowflake increment (number that increases by 1 for each generation of snowflake on the same process) const increment = BigInt(snowflake) & 0x3FFFFFn // 5n","title":"Analyzing Snowflake"},{"location":"advanced-guide/sharding/","text":"Getting started with sharding # Sharding is required for bots with more than 2500 servers. Creating sharding manager # Sharding instances (processes, workers or clusters) are managed by ShardingManager. So we have to create it. Create a separate file for the sharding manager. Make sure that this file is not required in any way in the sharding instances, otherwise you will get an error about the recursive creation of the sharding manager. Import sharding manager and start it: TS import { ShardingManager } from 'discordoo/sharding' const manager = new ShardingManager({ file: 'C:/path/to/your/old/starting/file.js', shards: 2, mode: 'processes', // you can find other modes in our api documentation processes: { // every mode has its own options shardsPerProcess: 1 // how many discord's shards to run in each sharding instance } }) manager.start() .then(() => 'spawned!')","title":"Getting started with sharding"},{"location":"advanced-guide/sharding/#getting-started-with-sharding","text":"Sharding is required for bots with more than 2500 servers.","title":"Getting started with sharding"},{"location":"advanced-guide/sharding/#creating-sharding-manager","text":"Sharding instances (processes, workers or clusters) are managed by ShardingManager. So we have to create it. Create a separate file for the sharding manager. Make sure that this file is not required in any way in the sharding instances, otherwise you will get an error about the recursive creation of the sharding manager. Import sharding manager and start it: TS import { ShardingManager } from 'discordoo/sharding' const manager = new ShardingManager({ file: 'C:/path/to/your/old/starting/file.js', shards: 2, mode: 'processes', // you can find other modes in our api documentation processes: { // every mode has its own options shardsPerProcess: 1 // how many discord's shards to run in each sharding instance } }) manager.start() .then(() => 'spawned!')","title":"Creating sharding manager"},{"location":"advanced-guide/sharding/internals/","text":"Sharding internals # Our sharding uses node-ipc module for interprocess communication. Every sharding instance (process, worker or cluster) has a unique DiscordooSnowflake. It's like Discord or Twitter snowflake, only modified to suit our needs. What happens when the sharding instance are spawned # 1. An internal IPC Client is created in the process of the sharding manager. 2. The Discordoo Snowflake is passed to the sharding instance process, which will be used to identify this instance. 3. An internal IPC Server is created in the process of sharding instance, it uses Discordoo Snowflake as an address, a path to itself. 4. The IPC Client starts sending an IpcHelloPacket to the address that was passed to the sharding instance process until it receives a response. If 30 seconds have passed, but no response has been received, the sharding instance process will be forcibly destroyed. 5. If the IPC Server has received an IpcHelloPacket , it should send an IpcIdentifyPacket . Thus, it informs the IPC Client that it is up and running. The IpcHelloPacket contains information about how many shards need to be launched, and interval to send heartbeat. 6. When the IPC Client receives the IpcIdentifyPacket , it will start waiting for the IpcHeartbeatPacket from the sharding instance. Heartbeat is a system in which the IPC Server must send requests to the IPC Client every few seconds, and the Client must respond. This way they understand that all processes are running and working. 7. In case of loss of connection with the IPC Client, the IPC Server will command the local client (bot) to self-destruct. In case of loss of connection with the IPC Server, the IPC Client will command the ShardingManager to restart this sharding instance. How ShardingManager and sharding instances communicating # All communication comes down to a kind of ping-pong. They use a special standardized message type -- IpcPacket , which is very similar to WebSocket messages. op d t a numeric value, each of the numbers is assigned its own type of event. mixed JSON data. when op is 0 (dispatch), here is the string value of the sent event.","title":"Sharding internals"},{"location":"advanced-guide/sharding/internals/#sharding-internals","text":"Our sharding uses node-ipc module for interprocess communication. Every sharding instance (process, worker or cluster) has a unique DiscordooSnowflake. It's like Discord or Twitter snowflake, only modified to suit our needs.","title":"Sharding internals"},{"location":"advanced-guide/sharding/internals/#what-happens-when-the-sharding-instance-are-spawned","text":"1. An internal IPC Client is created in the process of the sharding manager. 2. The Discordoo Snowflake is passed to the sharding instance process, which will be used to identify this instance. 3. An internal IPC Server is created in the process of sharding instance, it uses Discordoo Snowflake as an address, a path to itself. 4. The IPC Client starts sending an IpcHelloPacket to the address that was passed to the sharding instance process until it receives a response. If 30 seconds have passed, but no response has been received, the sharding instance process will be forcibly destroyed. 5. If the IPC Server has received an IpcHelloPacket , it should send an IpcIdentifyPacket . Thus, it informs the IPC Client that it is up and running. The IpcHelloPacket contains information about how many shards need to be launched, and interval to send heartbeat. 6. When the IPC Client receives the IpcIdentifyPacket , it will start waiting for the IpcHeartbeatPacket from the sharding instance. Heartbeat is a system in which the IPC Server must send requests to the IPC Client every few seconds, and the Client must respond. This way they understand that all processes are running and working. 7. In case of loss of connection with the IPC Client, the IPC Server will command the local client (bot) to self-destruct. In case of loss of connection with the IPC Server, the IPC Client will command the ShardingManager to restart this sharding instance.","title":"What happens when the sharding instance are spawned"},{"location":"advanced-guide/sharding/internals/#how-shardingmanager-and-sharding-instances-communicating","text":"All communication comes down to a kind of ping-pong. They use a special standardized message type -- IpcPacket , which is very similar to WebSocket messages. op d t a numeric value, each of the numbers is assigned its own type of event. mixed JSON data. when op is 0 (dispatch), here is the string value of the sent event.","title":"How ShardingManager and sharding instances communicating"},{"location":"advanced-guide/sharding/machines/","text":"Inter-machines sharding # In the case of very large bots, it is not enough to shard only on one server. Therefore, Discordoo has a mechanism for distributing sharding instances between different servers. WARNING # THIS IS NOT IMPLEMENTED FUNCTIONALITY. Preparing your servers # You should prepare your servers to receive sharding instances. To do this, you need to open the port on which Discordoo's ShardingManager will wait for commands from the main ShardingManager. Default port is 8379. Getting started # On each server, you must install Discordoo and create a ShardingManager in standby mode: TS import { ShardingManager } from 'discordoo/sharding' import { ShardingManagerModes } from 'discordoo/core' const manager = new ShardingManager({ file: 'C:/path/to/your/client/file.js', mode: ShardingManagerModes.MACHINES, machines: { me: 'child', ipc: { networkHost: 'your server IP', // IP of the server on which this sharding manager is running //networkPort: 9999, // override default port if you want }, /*tls: { // (this cert used in the array of trusted connections on the main ShardingManager server) public: string // path to server tls cert private: string // path to server tls private key dhparam?: string // path to server dhparam requestCert?: boolean // whether main sharding manager should pass tls cert to this child rejectUnauthorized?: boolean // reject unauthorized connections trustedConnections?: string[] // array of paths to trusted client certificates },*/ }, }) manager.start() On the main server you should create main ShardingManager and specify machines: TS import { ShardingManager } from 'discordoo/sharding' import { ShardingManagerModes, ChildShardingModes } from 'discordoo/core' const manager = new ShardingManager({ mode: ShardingManagerModes.MACHINES, machines: { me: 'parent', points: [ // array of contact points to your servers { port: 8379, // optional override port host: '10.0.18.1', // remote server ip (required!) udp: 'udp4', // optional UDP instead TCP childManagerOptions: { // options of the sharding manager that will be sent to the remote machine mode: ChildShardingModes.PROCESSES, shards: { from: 0, to: 127 }, }, tls: { // (this cert used in array of trusted connections on the child sharding manager server) public: '../tls/client.pub', // main ShardingManager tls cert private: '../tls/client.key', // main ShardingMangaer tls private key rejectUnauthorized: true, trustedConnections: [ '../tls/10-0-18-1.pub', '../tls/FE80::0202:B3FF:FE1E:8329.pub' ] // trusted servers tls certs }, }, { host: 'FE80::0202:B3FF:FE1E:8329', // ipv6 also supported childManagerOptions: { mode: ChildShardingModes.WORKERS, shards: { from: 128, to: 255 }, }, tls: { public: '../tls/server.pub', private: '../tls/server.key', rejectUnauthorized: true, trustedConnections: [ '../tls/10-0-18-1.pub', '../tls/FE80::0202:B3FF:FE1E:8329.pub' ] }, } ] } }) manager.start() That's all!","title":"Inter-machines sharding"},{"location":"advanced-guide/sharding/machines/#inter-machines-sharding","text":"In the case of very large bots, it is not enough to shard only on one server. Therefore, Discordoo has a mechanism for distributing sharding instances between different servers.","title":"Inter-machines sharding"},{"location":"advanced-guide/sharding/machines/#warning","text":"THIS IS NOT IMPLEMENTED FUNCTIONALITY.","title":"WARNING"},{"location":"advanced-guide/sharding/machines/#preparing-your-servers","text":"You should prepare your servers to receive sharding instances. To do this, you need to open the port on which Discordoo's ShardingManager will wait for commands from the main ShardingManager. Default port is 8379.","title":"Preparing your servers"},{"location":"advanced-guide/sharding/machines/#getting-started","text":"On each server, you must install Discordoo and create a ShardingManager in standby mode: TS import { ShardingManager } from 'discordoo/sharding' import { ShardingManagerModes } from 'discordoo/core' const manager = new ShardingManager({ file: 'C:/path/to/your/client/file.js', mode: ShardingManagerModes.MACHINES, machines: { me: 'child', ipc: { networkHost: 'your server IP', // IP of the server on which this sharding manager is running //networkPort: 9999, // override default port if you want }, /*tls: { // (this cert used in the array of trusted connections on the main ShardingManager server) public: string // path to server tls cert private: string // path to server tls private key dhparam?: string // path to server dhparam requestCert?: boolean // whether main sharding manager should pass tls cert to this child rejectUnauthorized?: boolean // reject unauthorized connections trustedConnections?: string[] // array of paths to trusted client certificates },*/ }, }) manager.start() On the main server you should create main ShardingManager and specify machines: TS import { ShardingManager } from 'discordoo/sharding' import { ShardingManagerModes, ChildShardingModes } from 'discordoo/core' const manager = new ShardingManager({ mode: ShardingManagerModes.MACHINES, machines: { me: 'parent', points: [ // array of contact points to your servers { port: 8379, // optional override port host: '10.0.18.1', // remote server ip (required!) udp: 'udp4', // optional UDP instead TCP childManagerOptions: { // options of the sharding manager that will be sent to the remote machine mode: ChildShardingModes.PROCESSES, shards: { from: 0, to: 127 }, }, tls: { // (this cert used in array of trusted connections on the child sharding manager server) public: '../tls/client.pub', // main ShardingManager tls cert private: '../tls/client.key', // main ShardingMangaer tls private key rejectUnauthorized: true, trustedConnections: [ '../tls/10-0-18-1.pub', '../tls/FE80::0202:B3FF:FE1E:8329.pub' ] // trusted servers tls certs }, }, { host: 'FE80::0202:B3FF:FE1E:8329', // ipv6 also supported childManagerOptions: { mode: ChildShardingModes.WORKERS, shards: { from: 128, to: 255 }, }, tls: { public: '../tls/server.pub', private: '../tls/server.key', rejectUnauthorized: true, trustedConnections: [ '../tls/10-0-18-1.pub', '../tls/FE80::0202:B3FF:FE1E:8329.pub' ] }, } ] } }) manager.start() That's all!","title":"Getting started"},{"location":"api/","text":"Discordoo / Modules Discordoo API docs # Hello! Welcome to the Discordoo API documentation. It contains a precise description for everything in Discordoo. However, this page is not the best place to start. Instead, you should read our guide. Happy coding!","title":"Index"},{"location":"api/#discordoo-api-docs","text":"Hello! Welcome to the Discordoo API documentation. It contains a precise description for everything in Discordoo. However, this page is not the best place to start. Instead, you should read our guide. Happy coding!","title":"Discordoo API docs"},{"location":"api/modules/","text":"Discordoo / Modules Discordoo # Table of contents # Modules # cache collection core gateway sharding utils wrapper","title":"Modules"},{"location":"api/modules/#discordoo","text":"","title":"Discordoo"},{"location":"api/modules/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/#modules","text":"cache collection core gateway sharding utils wrapper","title":"Modules"},{"location":"api/classes/cache.defaultcacheprovider/","text":"Discordoo / Modules / cache / DefaultCacheProvider Class: DefaultCacheProvider<K, V> # cache .DefaultCacheProvider Type parameters # Name K V Implements # CacheProvider < K , V > Table of contents # Constructors # constructor Properties # client keyspaces Methods # delete get has set size Constructors # constructor # \u2022 new DefaultCacheProvider < K , V >( client ) Type parameters # Name K V Parameters # Name Type client Client < DefaultClientStack > Defined in # src/cache/DefaultCacheProvider.ts:11 Properties # client # \u2022 client : Client < DefaultClientStack > Defined in # src/cache/DefaultCacheProvider.ts:11 keyspaces # \u2022 Private keyspaces : Collection < string , Collection < K , V >> Defined in # src/cache/DefaultCacheProvider.ts:10 Methods # delete # \u25b8 delete ( keyspace , key , options? ): Promise < boolean > Delete a key from cache Parameters # Name Type keyspace string key K options CacheProviderDeleteOptions Returns # Promise < boolean > Implementation of # CacheProvider . delete Defined in # src/cache/DefaultCacheProvider.ts:18 get # \u25b8 get ( keyspace , key , options? ): Promise < null | V > Get value from key Parameters # Name Type keyspace string key K options CacheProviderGetOptions Returns # Promise < null | V > Implementation of # CacheProvider . get Defined in # src/cache/DefaultCacheProvider.ts:26 has # \u25b8 has ( keyspace , key , options? ): Promise < boolean > Check if key exists in cache Parameters # Name Type keyspace string key K options CacheProviderHasOptions Returns # Promise < boolean > Implementation of # CacheProvider . has Defined in # src/cache/DefaultCacheProvider.ts:34 set # \u25b8 set ( keyspace , key , value , options? ): Promise < DefaultCacheProvider < K , V >> Set a key to given value Parameters # Name Type keyspace string key K value V options CacheProviderSetOptions Returns # Promise < DefaultCacheProvider < K , V >> Implementation of # CacheProvider . set Defined in # src/cache/DefaultCacheProvider.ts:42 size # \u25b8 size ( keyspace? , options? ): Promise < number > Get size of cache in keyspace or in all cache Parameters # Name Type keyspace? string options CacheProviderSizeOptions Returns # Promise < number > Implementation of # CacheProvider . size Defined in # src/cache/DefaultCacheProvider.ts:50","title":"DefaultCacheProvider"},{"location":"api/classes/cache.defaultcacheprovider/#class-defaultcacheproviderk-v","text":"cache .DefaultCacheProvider","title":"Class: DefaultCacheProvider&lt;K, V>"},{"location":"api/classes/cache.defaultcacheprovider/#type-parameters","text":"Name K V","title":"Type parameters"},{"location":"api/classes/cache.defaultcacheprovider/#implements","text":"CacheProvider < K , V >","title":"Implements"},{"location":"api/classes/cache.defaultcacheprovider/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/cache.defaultcacheprovider/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/cache.defaultcacheprovider/#properties","text":"client keyspaces","title":"Properties"},{"location":"api/classes/cache.defaultcacheprovider/#methods","text":"delete get has set size","title":"Methods"},{"location":"api/classes/cache.defaultcacheprovider/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/cache.defaultcacheprovider/#constructor","text":"\u2022 new DefaultCacheProvider < K , V >( client )","title":"constructor"},{"location":"api/classes/cache.defaultcacheprovider/#properties_1","text":"","title":"Properties"},{"location":"api/classes/cache.defaultcacheprovider/#client","text":"\u2022 client : Client < DefaultClientStack >","title":"client"},{"location":"api/classes/cache.defaultcacheprovider/#keyspaces","text":"\u2022 Private keyspaces : Collection < string , Collection < K , V >>","title":"keyspaces"},{"location":"api/classes/cache.defaultcacheprovider/#methods_1","text":"","title":"Methods"},{"location":"api/classes/cache.defaultcacheprovider/#delete","text":"\u25b8 delete ( keyspace , key , options? ): Promise < boolean > Delete a key from cache","title":"delete"},{"location":"api/classes/cache.defaultcacheprovider/#get","text":"\u25b8 get ( keyspace , key , options? ): Promise < null | V > Get value from key","title":"get"},{"location":"api/classes/cache.defaultcacheprovider/#has","text":"\u25b8 has ( keyspace , key , options? ): Promise < boolean > Check if key exists in cache","title":"has"},{"location":"api/classes/cache.defaultcacheprovider/#set","text":"\u25b8 set ( keyspace , key , value , options? ): Promise < DefaultCacheProvider < K , V >> Set a key to given value","title":"set"},{"location":"api/classes/cache.defaultcacheprovider/#size","text":"\u25b8 size ( keyspace? , options? ): Promise < number > Get size of cache in keyspace or in all cache","title":"size"},{"location":"api/classes/collection.collection-1/","text":"Discordoo / Modules / collection / Collection Class: Collection<K, V> # collection .Collection An utility data structure used within the library Type parameters # Name Type K any V any Hierarchy # Map < K , V > \u21b3 Collection Table of contents # Constructors # constructor Accessors # empty Methods # clone concat equal every filter find first firstKey forEach intoChunks last lastKey map random some Constructors # constructor # \u2022 new Collection < K , V >( entries? ) Type parameters # Name Type K any V any Parameters # Name Type entries? null | readonly readonly [ K , V ][] Inherited from # Map<K, V>.constructor Defined in # node_modules/typescript/lib/lib.es2015.collection.d.ts:32 \u2022 new Collection < K , V >( iterable ) Type parameters # Name Type K any V any Parameters # Name Type iterable Iterable <readonly [ K , V ]> Inherited from # Map<K, V>.constructor Defined in # node_modules/typescript/lib/lib.es2015.iterable.d.ts:159 Accessors # empty # \u2022 get empty (): boolean The collection is empty or not. Returns # boolean Defined in # src/collection/Collection.ts:23 Methods # clone # \u25b8 clone (): Collection < K , V > Creates a new collection based on this one. Returns # Collection < K , V > Defined in # src/collection/Collection.ts:143 concat # \u25b8 concat ( collections ): Collection < K , V > Merges the specified collections into one and returns a new collection. Parameters # Name Type Description collections Collection < K , V >[] collections to merge Returns # Collection < K , V > Defined in # src/collection/Collection.ts:177 equal # \u25b8 equal ( collection , options? ): boolean Checks if two collections are equal. Parameters # Name Type Description collection Collection < K , V > collection to compare to options CollectionEqualOptions options to use Returns # boolean Defined in # src/collection/Collection.ts:152 every # \u25b8 every ( predicate ): boolean Checks if all values satisfy the condition. Parameters # Name Type Description predicate Predicate < K , V , Collection < K , V >, boolean > function to use Returns # boolean Defined in # src/collection/Collection.ts:211 filter # \u25b8 filter < T >( filter , options? ): T extends any [] ? [ K , V ][] : T Filters out the elements which don't meet requirements. Type parameters # Name T Parameters # Name Type Description filter Predicate < K , V , Collection < K , V >, unknown > function to use options? CollectionFilterOptions filter options Returns # T extends any [] ? [ K , V ][] : T Defined in # src/collection/Collection.ts:87 find # \u25b8 find ( predicate ): null | V Searches to the element in collection and returns it Parameters # Name Type Description predicate Predicate < K , V , Collection < K , V >, boolean > function to use Returns # null | V Defined in # src/collection/Collection.ts:124 first # \u25b8 first (): undefined | V Returns first N collection values. Returns # undefined | V Defined in # src/collection/Collection.ts:224 \u25b8 first ( amount ): V [] Parameters # Name Type amount number Returns # V [] Defined in # src/collection/Collection.ts:225 firstKey # \u25b8 firstKey (): undefined | K Returns first N collection keys. Returns # undefined | K Defined in # src/collection/Collection.ts:241 \u25b8 firstKey ( amount ): K [] Parameters # Name Type amount number Returns # K [] Defined in # src/collection/Collection.ts:242 forEach # \u25b8 forEach ( predicate ): void Executes a function on each of elements of map. Parameters # Name Type Description predicate Predicate < K , V , Collection < K , V >, unknown > function to use Returns # void Overrides # Map.forEach Defined in # src/collection/Collection.ts:136 intoChunks # \u25b8 intoChunks ( size? ): Collection < K , V >[] Returns a collection chunked into several collections. Parameters # Name Type Description size? number chunk size Returns # Collection < K , V >[] Defined in # src/collection/Collection.ts:307 last # \u25b8 last (): undefined | V Returns last N collection values. Returns # undefined | V Defined in # src/collection/Collection.ts:258 \u25b8 last ( amount ): V [] Parameters # Name Type amount number Returns # V [] Defined in # src/collection/Collection.ts:259 lastKey # \u25b8 lastKey (): undefined | K Returns last N collection keys. Returns # undefined | K Defined in # src/collection/Collection.ts:275 \u25b8 lastKey ( amount ): K [] Parameters # Name Type amount number Returns # K [] Defined in # src/collection/Collection.ts:276 map # \u25b8 map < T >( predicate ): T [] Maps each item to another value into an array Type parameters # Name Type T unknown Parameters # Name Type Description predicate Predicate < K , V , Collection < K , V >, T > function to use Returns # T [] Defined in # src/collection/Collection.ts:293 random # \u25b8 random (): V Gets a random element from collection (returns non-unique results if the unique option is not specified). Returns # V Defined in # src/collection/Collection.ts:30 \u25b8 random ( amount , options? ): V [] Parameters # Name Type amount number options? CollectionRandomOptions Returns # V [] Defined in # src/collection/Collection.ts:31 \u25b8 random ( amount? , options? ): V | V [] Parameters # Name Type amount? number options? CollectionRandomOptions Returns # V | V [] Defined in # src/collection/Collection.ts:32 some # \u25b8 some ( predicate ): boolean Checks if any of values satisfies the condition. Parameters # Name Type Description predicate Predicate < K , V , Collection < K , V >, boolean > function to use Returns # boolean Defined in # src/collection/Collection.ts:197","title":"Collection"},{"location":"api/classes/collection.collection-1/#class-collectionk-v","text":"collection .Collection An utility data structure used within the library","title":"Class: Collection&lt;K, V>"},{"location":"api/classes/collection.collection-1/#type-parameters","text":"Name Type K any V any","title":"Type parameters"},{"location":"api/classes/collection.collection-1/#hierarchy","text":"Map < K , V > \u21b3 Collection","title":"Hierarchy"},{"location":"api/classes/collection.collection-1/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/collection.collection-1/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/collection.collection-1/#accessors","text":"empty","title":"Accessors"},{"location":"api/classes/collection.collection-1/#methods","text":"clone concat equal every filter find first firstKey forEach intoChunks last lastKey map random some","title":"Methods"},{"location":"api/classes/collection.collection-1/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/collection.collection-1/#constructor","text":"\u2022 new Collection < K , V >( entries? )","title":"constructor"},{"location":"api/classes/collection.collection-1/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/collection.collection-1/#empty","text":"\u2022 get empty (): boolean The collection is empty or not.","title":"empty"},{"location":"api/classes/collection.collection-1/#methods_1","text":"","title":"Methods"},{"location":"api/classes/collection.collection-1/#clone","text":"\u25b8 clone (): Collection < K , V > Creates a new collection based on this one.","title":"clone"},{"location":"api/classes/collection.collection-1/#concat","text":"\u25b8 concat ( collections ): Collection < K , V > Merges the specified collections into one and returns a new collection.","title":"concat"},{"location":"api/classes/collection.collection-1/#equal","text":"\u25b8 equal ( collection , options? ): boolean Checks if two collections are equal.","title":"equal"},{"location":"api/classes/collection.collection-1/#every","text":"\u25b8 every ( predicate ): boolean Checks if all values satisfy the condition.","title":"every"},{"location":"api/classes/collection.collection-1/#filter","text":"\u25b8 filter < T >( filter , options? ): T extends any [] ? [ K , V ][] : T Filters out the elements which don't meet requirements.","title":"filter"},{"location":"api/classes/collection.collection-1/#find","text":"\u25b8 find ( predicate ): null | V Searches to the element in collection and returns it","title":"find"},{"location":"api/classes/collection.collection-1/#first","text":"\u25b8 first (): undefined | V Returns first N collection values.","title":"first"},{"location":"api/classes/collection.collection-1/#firstkey","text":"\u25b8 firstKey (): undefined | K Returns first N collection keys.","title":"firstKey"},{"location":"api/classes/collection.collection-1/#foreach","text":"\u25b8 forEach ( predicate ): void Executes a function on each of elements of map.","title":"forEach"},{"location":"api/classes/collection.collection-1/#intochunks","text":"\u25b8 intoChunks ( size? ): Collection < K , V >[] Returns a collection chunked into several collections.","title":"intoChunks"},{"location":"api/classes/collection.collection-1/#last","text":"\u25b8 last (): undefined | V Returns last N collection values.","title":"last"},{"location":"api/classes/collection.collection-1/#lastkey","text":"\u25b8 lastKey (): undefined | K Returns last N collection keys.","title":"lastKey"},{"location":"api/classes/collection.collection-1/#map","text":"\u25b8 map < T >( predicate ): T [] Maps each item to another value into an array","title":"map"},{"location":"api/classes/collection.collection-1/#random","text":"\u25b8 random (): V Gets a random element from collection (returns non-unique results if the unique option is not specified).","title":"random"},{"location":"api/classes/collection.collection-1/#some","text":"\u25b8 some ( predicate ): boolean Checks if any of values satisfies the condition.","title":"some"},{"location":"api/classes/core.client/","text":"Discordoo / Modules / core / Client Class: Client<ClientStack> # core .Client Entry point for all of Discordoo. Manages modules and events Type parameters # Name Type ClientStack extends DefaultClientStack DefaultClientStack Hierarchy # TypedEmitter < ListenerSignature < ClientStack [ \"events\" ]>> \u21b3 Client Table of contents # Constructors # constructor Properties # internals options token Methods # start useCacheProvider useGatewayProvider useRESTProvider Constructors # constructor # \u2022 new Client < ClientStack >( token , options? ) Type parameters # Name Type ClientStack extends DefaultClientStack DefaultClientStack Parameters # Name Type token string options ClientOptions < any > Overrides # TypedEmitter<ListenerSignature<ClientStack['events']\\>\\>.constructor Defined in # src/core/Client.ts:24 Properties # internals # \u2022 internals : ClientInternals < ClientStack > Internal things used by this client Defined in # src/core/Client.ts:21 options # \u2022 options : ClientOptions < any > Options passed to this client Defined in # src/core/Client.ts:24 token # \u2022 token : string Token used by this client Defined in # src/core/Client.ts:18 Methods # start # \u25b8 start (): Promise < void > Returns # Promise < void > Defined in # src/core/Client.ts:109 useCacheProvider # \u25b8 useCacheProvider ( provider , ... options ): void Set the CacheProvider to be used by this client Parameters # Name Type Description provider ProviderConstructor < ClientStack [ \"cache\" ]> class that implements CacheProvider ...options any [] any options to custom cache provider Returns # void Defined in # src/core/Client.ts:96 useGatewayProvider # \u25b8 useGatewayProvider ( provider , ... options ): void Set the GatewayProvider to be used by this client Parameters # Name Type Description provider ProviderConstructor < ClientStack [ \"gateway\" ]> class that implements GatewayProvider ...options any [] any options to custom gateway provider Returns # void Defined in # src/core/Client.ts:105 useRESTProvider # \u25b8 useRESTProvider ( provider , ... options ): void Set the {@link RESTProvider} to be used by this client Parameters # Name Type Description provider ProviderConstructor < ClientStack [ \"rest\" ]> function, that returns desired RESTProvider ...options any [] any options to custom cache provider Returns # void Defined in # src/core/Client.ts:87","title":"Client"},{"location":"api/classes/core.client/#class-clientclientstack","text":"core .Client Entry point for all of Discordoo. Manages modules and events","title":"Class: Client&lt;ClientStack>"},{"location":"api/classes/core.client/#type-parameters","text":"Name Type ClientStack extends DefaultClientStack DefaultClientStack","title":"Type parameters"},{"location":"api/classes/core.client/#hierarchy","text":"TypedEmitter < ListenerSignature < ClientStack [ \"events\" ]>> \u21b3 Client","title":"Hierarchy"},{"location":"api/classes/core.client/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/core.client/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/core.client/#properties","text":"internals options token","title":"Properties"},{"location":"api/classes/core.client/#methods","text":"start useCacheProvider useGatewayProvider useRESTProvider","title":"Methods"},{"location":"api/classes/core.client/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/core.client/#constructor","text":"\u2022 new Client < ClientStack >( token , options? )","title":"constructor"},{"location":"api/classes/core.client/#properties_1","text":"","title":"Properties"},{"location":"api/classes/core.client/#internals","text":"\u2022 internals : ClientInternals < ClientStack > Internal things used by this client","title":"internals"},{"location":"api/classes/core.client/#options","text":"\u2022 options : ClientOptions < any > Options passed to this client","title":"options"},{"location":"api/classes/core.client/#token","text":"\u2022 token : string Token used by this client","title":"token"},{"location":"api/classes/core.client/#methods_1","text":"","title":"Methods"},{"location":"api/classes/core.client/#start","text":"\u25b8 start (): Promise < void >","title":"start"},{"location":"api/classes/core.client/#usecacheprovider","text":"\u25b8 useCacheProvider ( provider , ... options ): void Set the CacheProvider to be used by this client","title":"useCacheProvider"},{"location":"api/classes/core.client/#usegatewayprovider","text":"\u25b8 useGatewayProvider ( provider , ... options ): void Set the GatewayProvider to be used by this client","title":"useGatewayProvider"},{"location":"api/classes/core.client/#userestprovider","text":"\u25b8 useRESTProvider ( provider , ... options ): void Set the {@link RESTProvider} to be used by this client","title":"useRESTProvider"},{"location":"api/classes/gateway.defaultgatewayprovider/","text":"Discordoo / Modules / gateway / DefaultGatewayProvider Class: DefaultGatewayProvider # gateway .DefaultGatewayProvider Implements # GatewayProvider Table of contents # Constructors # constructor Properties # client manager options Methods # connect disconnect Constructors # constructor # \u2022 new DefaultGatewayProvider ( client , options ) Parameters # Name Type client Client < DefaultClientStack > options PartialGatewayOptions Defined in # src/gateway/DefaultGatewayProvider.ts:9 Properties # client # \u2022 client : Client < DefaultClientStack > Defined in # src/gateway/DefaultGatewayProvider.ts:8 manager # \u2022 manager : WebSocketManager Defined in # src/gateway/DefaultGatewayProvider.ts:7 options # \u2022 options : PartialGatewayOptions Defined in # src/gateway/DefaultGatewayProvider.ts:9 Methods # connect # \u25b8 connect ( options? ): Promise < unknown > Parameters # Name Type options? GatewayConnectOptions Returns # Promise < unknown > Implementation of # GatewayProvider . connect Defined in # src/gateway/DefaultGatewayProvider.ts:18 disconnect # \u25b8 disconnect (): Promise < unknown > Returns # Promise < unknown > Implementation of # GatewayProvider . disconnect Defined in # src/gateway/DefaultGatewayProvider.ts:22","title":"DefaultGatewayProvider"},{"location":"api/classes/gateway.defaultgatewayprovider/#class-defaultgatewayprovider","text":"gateway .DefaultGatewayProvider","title":"Class: DefaultGatewayProvider"},{"location":"api/classes/gateway.defaultgatewayprovider/#implements","text":"GatewayProvider","title":"Implements"},{"location":"api/classes/gateway.defaultgatewayprovider/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/gateway.defaultgatewayprovider/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/gateway.defaultgatewayprovider/#properties","text":"client manager options","title":"Properties"},{"location":"api/classes/gateway.defaultgatewayprovider/#methods","text":"connect disconnect","title":"Methods"},{"location":"api/classes/gateway.defaultgatewayprovider/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/gateway.defaultgatewayprovider/#constructor","text":"\u2022 new DefaultGatewayProvider ( client , options )","title":"constructor"},{"location":"api/classes/gateway.defaultgatewayprovider/#properties_1","text":"","title":"Properties"},{"location":"api/classes/gateway.defaultgatewayprovider/#client","text":"\u2022 client : Client < DefaultClientStack >","title":"client"},{"location":"api/classes/gateway.defaultgatewayprovider/#manager","text":"\u2022 manager : WebSocketManager","title":"manager"},{"location":"api/classes/gateway.defaultgatewayprovider/#options","text":"\u2022 options : PartialGatewayOptions","title":"options"},{"location":"api/classes/gateway.defaultgatewayprovider/#methods_1","text":"","title":"Methods"},{"location":"api/classes/gateway.defaultgatewayprovider/#connect","text":"\u25b8 connect ( options? ): Promise < unknown >","title":"connect"},{"location":"api/classes/gateway.defaultgatewayprovider/#disconnect","text":"\u25b8 disconnect (): Promise < unknown >","title":"disconnect"},{"location":"api/classes/gateway.websocketclient/","text":"Discordoo / Modules / gateway / WebSocketClient Class: WebSocketClient # gateway .WebSocketClient Hierarchy # TypedEmitter < WebSocketClientEvents > \u21b3 WebSocketClient Table of contents # Constructors # constructor Properties # _handshakeTimeout _heartbeatInterval closeSequence expectedGuilds id inflate lastPingTimestamp manager missedHeartbeats options ping sequence sessionID socket status Accessors # ready Methods # cleanup connect destroy handshakeTimeout heartbeat heartbeatInterval identify onClose onError onMessage onOpen onPacket socketSend Constructors # constructor # \u2022 new WebSocketClient ( manager , id ) Parameters # Name Type manager WebSocketManager id number Overrides # TypedEmitter<WebSocketClientEventsI\\>.constructor Defined in # src/gateway/WebSocketClient.ts:47 Properties # _handshakeTimeout # \u2022 Private Optional _handshakeTimeout : Timeout Defined in # src/gateway/WebSocketClient.ts:35 _heartbeatInterval # \u2022 Private Optional _heartbeatInterval : Timeout Defined in # src/gateway/WebSocketClient.ts:34 closeSequence # \u2022 closeSequence : number = -1 Defined in # src/gateway/WebSocketClient.ts:43 expectedGuilds # \u2022 expectedGuilds : Set < any > Defined in # src/gateway/WebSocketClient.ts:44 id # \u2022 id : number Defined in # src/gateway/WebSocketClient.ts:39 inflate # \u2022 Private Optional inflate : Inflate Defined in # src/gateway/WebSocketClient.ts:33 lastPingTimestamp # \u2022 lastPingTimestamp : number Defined in # src/gateway/WebSocketClient.ts:47 manager # \u2022 manager : WebSocketManager Defined in # src/gateway/WebSocketClient.ts:37 missedHeartbeats # \u2022 missedHeartbeats : number = 0 Defined in # src/gateway/WebSocketClient.ts:45 options # \u2022 Private Readonly options : GatewayOptions Defined in # src/gateway/WebSocketClient.ts:32 ping # \u2022 ping : number = -1 Defined in # src/gateway/WebSocketClient.ts:46 sequence # \u2022 sequence : number = -1 Defined in # src/gateway/WebSocketClient.ts:42 sessionID # \u2022 Optional sessionID : string Defined in # src/gateway/WebSocketClient.ts:41 socket # \u2022 Private Optional socket : WebSocket Defined in # src/gateway/WebSocketClient.ts:31 status # \u2022 status : WebSocketClientStates Defined in # src/gateway/WebSocketClient.ts:38 Accessors # ready # \u2022 get ready (): boolean Returns # boolean Defined in # src/gateway/WebSocketClient.ts:289 Methods # cleanup # \u25b8 Private cleanup (): void Returns # void Defined in # src/gateway/WebSocketClient.ts:293 connect # \u25b8 connect (): Promise < void > Returns # Promise < void > Defined in # src/gateway/WebSocketClient.ts:59 destroy # \u25b8 destroy ( options? ): void Parameters # Name Type options WebSocketClientDestroyOptions Returns # void Defined in # src/gateway/WebSocketClient.ts:245 handshakeTimeout # \u25b8 handshakeTimeout ( create? ): void this method operates with handshake timeout: when handshake did not occur at the specified time, reconnects client Parameters # Name Type Default value create boolean true Returns # void Defined in # src/gateway/WebSocketClient.ts:164 heartbeat # \u25b8 heartbeat ( shouldIgnoreAck? ): void Parameters # Name Type shouldIgnoreAck boolean Returns # void Defined in # src/gateway/WebSocketClient.ts:186 heartbeatInterval # \u25b8 heartbeatInterval ( ms ): void this method operates with heartbeat interval: it can delete interval, or create new one Parameters # Name Type ms number Returns # void Defined in # src/gateway/WebSocketClient.ts:175 identify # \u25b8 identify (): void Returns # void Defined in # src/gateway/WebSocketClient.ts:153 onClose # \u25b8 Private onClose ( event ): void Parameters # Name Type event CloseEvent Returns # void Defined in # src/gateway/WebSocketClient.ts:230 onError # \u25b8 Private onError ( event ): void Parameters # Name Type event ErrorEvent Returns # void Defined in # src/gateway/WebSocketClient.ts:240 onMessage # \u25b8 Private onMessage ( event ): void Parameters # Name Type event MessageEvent Returns # void Defined in # src/gateway/WebSocketClient.ts:220 onOpen # \u25b8 Private onOpen ( event ): void Parameters # Name Type event OpenEvent Returns # void Defined in # src/gateway/WebSocketClient.ts:235 onPacket # \u25b8 Private onPacket ( payload ): void Parameters # Name Type payload WebSocketPacket Returns # void Defined in # src/gateway/WebSocketClient.ts:226 socketSend # \u25b8 socketSend ( data ): void Parameters # Name Type data WebSocketSendPayload Returns # void Defined in # src/gateway/WebSocketClient.ts:210","title":"WebSocketClient"},{"location":"api/classes/gateway.websocketclient/#class-websocketclient","text":"gateway .WebSocketClient","title":"Class: WebSocketClient"},{"location":"api/classes/gateway.websocketclient/#hierarchy","text":"TypedEmitter < WebSocketClientEvents > \u21b3 WebSocketClient","title":"Hierarchy"},{"location":"api/classes/gateway.websocketclient/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/gateway.websocketclient/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/gateway.websocketclient/#properties","text":"_handshakeTimeout _heartbeatInterval closeSequence expectedGuilds id inflate lastPingTimestamp manager missedHeartbeats options ping sequence sessionID socket status","title":"Properties"},{"location":"api/classes/gateway.websocketclient/#accessors","text":"ready","title":"Accessors"},{"location":"api/classes/gateway.websocketclient/#methods","text":"cleanup connect destroy handshakeTimeout heartbeat heartbeatInterval identify onClose onError onMessage onOpen onPacket socketSend","title":"Methods"},{"location":"api/classes/gateway.websocketclient/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/gateway.websocketclient/#constructor","text":"\u2022 new WebSocketClient ( manager , id )","title":"constructor"},{"location":"api/classes/gateway.websocketclient/#properties_1","text":"","title":"Properties"},{"location":"api/classes/gateway.websocketclient/#_handshaketimeout","text":"\u2022 Private Optional _handshakeTimeout : Timeout","title":"_handshakeTimeout"},{"location":"api/classes/gateway.websocketclient/#_heartbeatinterval","text":"\u2022 Private Optional _heartbeatInterval : Timeout","title":"_heartbeatInterval"},{"location":"api/classes/gateway.websocketclient/#closesequence","text":"\u2022 closeSequence : number = -1","title":"closeSequence"},{"location":"api/classes/gateway.websocketclient/#expectedguilds","text":"\u2022 expectedGuilds : Set < any >","title":"expectedGuilds"},{"location":"api/classes/gateway.websocketclient/#id","text":"\u2022 id : number","title":"id"},{"location":"api/classes/gateway.websocketclient/#inflate","text":"\u2022 Private Optional inflate : Inflate","title":"inflate"},{"location":"api/classes/gateway.websocketclient/#lastpingtimestamp","text":"\u2022 lastPingTimestamp : number","title":"lastPingTimestamp"},{"location":"api/classes/gateway.websocketclient/#manager","text":"\u2022 manager : WebSocketManager","title":"manager"},{"location":"api/classes/gateway.websocketclient/#missedheartbeats","text":"\u2022 missedHeartbeats : number = 0","title":"missedHeartbeats"},{"location":"api/classes/gateway.websocketclient/#options","text":"\u2022 Private Readonly options : GatewayOptions","title":"options"},{"location":"api/classes/gateway.websocketclient/#ping","text":"\u2022 ping : number = -1","title":"ping"},{"location":"api/classes/gateway.websocketclient/#sequence","text":"\u2022 sequence : number = -1","title":"sequence"},{"location":"api/classes/gateway.websocketclient/#sessionid","text":"\u2022 Optional sessionID : string","title":"sessionID"},{"location":"api/classes/gateway.websocketclient/#socket","text":"\u2022 Private Optional socket : WebSocket","title":"socket"},{"location":"api/classes/gateway.websocketclient/#status","text":"\u2022 status : WebSocketClientStates","title":"status"},{"location":"api/classes/gateway.websocketclient/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/gateway.websocketclient/#ready","text":"\u2022 get ready (): boolean","title":"ready"},{"location":"api/classes/gateway.websocketclient/#methods_1","text":"","title":"Methods"},{"location":"api/classes/gateway.websocketclient/#cleanup","text":"\u25b8 Private cleanup (): void","title":"cleanup"},{"location":"api/classes/gateway.websocketclient/#connect","text":"\u25b8 connect (): Promise < void >","title":"connect"},{"location":"api/classes/gateway.websocketclient/#destroy","text":"\u25b8 destroy ( options? ): void","title":"destroy"},{"location":"api/classes/gateway.websocketclient/#handshaketimeout","text":"\u25b8 handshakeTimeout ( create? ): void this method operates with handshake timeout: when handshake did not occur at the specified time, reconnects client","title":"handshakeTimeout"},{"location":"api/classes/gateway.websocketclient/#heartbeat","text":"\u25b8 heartbeat ( shouldIgnoreAck? ): void","title":"heartbeat"},{"location":"api/classes/gateway.websocketclient/#heartbeatinterval","text":"\u25b8 heartbeatInterval ( ms ): void this method operates with heartbeat interval: it can delete interval, or create new one","title":"heartbeatInterval"},{"location":"api/classes/gateway.websocketclient/#identify","text":"\u25b8 identify (): void","title":"identify"},{"location":"api/classes/gateway.websocketclient/#onclose","text":"\u25b8 Private onClose ( event ): void","title":"onClose"},{"location":"api/classes/gateway.websocketclient/#onerror","text":"\u25b8 Private onError ( event ): void","title":"onError"},{"location":"api/classes/gateway.websocketclient/#onmessage","text":"\u25b8 Private onMessage ( event ): void","title":"onMessage"},{"location":"api/classes/gateway.websocketclient/#onopen","text":"\u25b8 Private onOpen ( event ): void","title":"onOpen"},{"location":"api/classes/gateway.websocketclient/#onpacket","text":"\u25b8 Private onPacket ( payload ): void","title":"onPacket"},{"location":"api/classes/gateway.websocketclient/#socketsend","text":"\u25b8 socketSend ( data ): void","title":"socketSend"},{"location":"api/classes/gateway.websocketmanager/","text":"Discordoo / Modules / gateway / WebSocketManager Class: WebSocketManager # gateway .WebSocketManager Hierarchy # TypedEmitter < WebSocketManagerEvents > \u21b3 WebSocketManager Table of contents # Constructors # constructor Properties # gateway options queueInterval shardQueue shards status totalShards Methods # connect createShards destroy Constructors # constructor # \u2022 new WebSocketManager ( options ) Parameters # Name Type options PartialGatewayOptions Overrides # TypedEmitter<WebSocketManagerEvents\\>.constructor Defined in # src/gateway/WebSocketManager.ts:23 Properties # gateway # \u2022 Private Optional gateway : APIGatewayBotInfo Defined in # src/gateway/WebSocketManager.ts:16 options # \u2022 Readonly options : GatewayOptions Defined in # src/gateway/WebSocketManager.ts:15 queueInterval # \u2022 Private Optional queueInterval : Timeout Defined in # src/gateway/WebSocketManager.ts:18 shardQueue # \u2022 Private shardQueue : Set < WebSocketClient > Defined in # src/gateway/WebSocketManager.ts:20 shards # \u2022 shards : Collection < number , WebSocketClient > Defined in # src/gateway/WebSocketManager.ts:23 status # \u2022 Private status : WebSocketManagerStates Defined in # src/gateway/WebSocketManager.ts:17 totalShards # \u2022 totalShards : number = 1 Defined in # src/gateway/WebSocketManager.ts:22 Methods # connect # \u25b8 connect ( options? ): Promise < any > Parameters # Name Type options? GatewayConnectOptions Returns # Promise < any > Defined in # src/gateway/WebSocketManager.ts:32 createShards # \u25b8 Private createShards (): any Returns # any Defined in # src/gateway/WebSocketManager.ts:71 destroy # \u25b8 destroy (): void Returns # void Defined in # src/gateway/WebSocketManager.ts:66","title":"WebSocketManager"},{"location":"api/classes/gateway.websocketmanager/#class-websocketmanager","text":"gateway .WebSocketManager","title":"Class: WebSocketManager"},{"location":"api/classes/gateway.websocketmanager/#hierarchy","text":"TypedEmitter < WebSocketManagerEvents > \u21b3 WebSocketManager","title":"Hierarchy"},{"location":"api/classes/gateway.websocketmanager/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/gateway.websocketmanager/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/gateway.websocketmanager/#properties","text":"gateway options queueInterval shardQueue shards status totalShards","title":"Properties"},{"location":"api/classes/gateway.websocketmanager/#methods","text":"connect createShards destroy","title":"Methods"},{"location":"api/classes/gateway.websocketmanager/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/gateway.websocketmanager/#constructor","text":"\u2022 new WebSocketManager ( options )","title":"constructor"},{"location":"api/classes/gateway.websocketmanager/#properties_1","text":"","title":"Properties"},{"location":"api/classes/gateway.websocketmanager/#gateway","text":"\u2022 Private Optional gateway : APIGatewayBotInfo","title":"gateway"},{"location":"api/classes/gateway.websocketmanager/#options","text":"\u2022 Readonly options : GatewayOptions","title":"options"},{"location":"api/classes/gateway.websocketmanager/#queueinterval","text":"\u2022 Private Optional queueInterval : Timeout","title":"queueInterval"},{"location":"api/classes/gateway.websocketmanager/#shardqueue","text":"\u2022 Private shardQueue : Set < WebSocketClient >","title":"shardQueue"},{"location":"api/classes/gateway.websocketmanager/#shards","text":"\u2022 shards : Collection < number , WebSocketClient >","title":"shards"},{"location":"api/classes/gateway.websocketmanager/#status","text":"\u2022 Private status : WebSocketManagerStates","title":"status"},{"location":"api/classes/gateway.websocketmanager/#totalshards","text":"\u2022 totalShards : number = 1","title":"totalShards"},{"location":"api/classes/gateway.websocketmanager/#methods_1","text":"","title":"Methods"},{"location":"api/classes/gateway.websocketmanager/#connect","text":"\u25b8 connect ( options? ): Promise < any >","title":"connect"},{"location":"api/classes/gateway.websocketmanager/#createshards","text":"\u25b8 Private createShards (): any","title":"createShards"},{"location":"api/classes/gateway.websocketmanager/#destroy","text":"\u25b8 destroy (): void","title":"destroy"},{"location":"api/classes/sharding.ipcclient/","text":"Discordoo / Modules / sharding / IpcClient Class: IpcClient # sharding .IpcClient Hierarchy # TypedEmitter \u21b3 IpcClient Table of contents # Constructors # constructor Properties # bucket eventsHandler helloInterval id ipc managerId shardIpcId shardSocket shards totalShards Methods # connect generate hello onPacket send sendHeartbeat Constructors # constructor # \u2022 new IpcClient ( options ) Parameters # Name Type options IpcClientOptions Overrides # TypedEmitter.constructor Defined in # src/sharding/ipc/IpcClient.ts:20 Properties # bucket # \u2022 Private bucket : Collection < string , any > Defined in # src/sharding/ipc/IpcClient.ts:10 eventsHandler # \u2022 Private Readonly eventsHandler : any Defined in # src/sharding/ipc/IpcClient.ts:13 helloInterval # \u2022 Private Optional helloInterval : Timeout Defined in # src/sharding/ipc/IpcClient.ts:15 id # \u2022 id : number Defined in # src/sharding/ipc/IpcClient.ts:19 ipc # \u2022 ipc : IPC Defined in # src/sharding/ipc/IpcClient.ts:17 managerId # \u2022 Private Readonly managerId : string Defined in # src/sharding/ipc/IpcClient.ts:14 shardIpcId # \u2022 Private Readonly shardIpcId : string Defined in # src/sharding/ipc/IpcClient.ts:12 shardSocket # \u2022 Private shardSocket : any Defined in # src/sharding/ipc/IpcClient.ts:11 shards # \u2022 shards : number [] Defined in # src/sharding/ipc/IpcClient.ts:18 totalShards # \u2022 totalShards : number Defined in # src/sharding/ipc/IpcClient.ts:20 Methods # connect # \u25b8 connect (): Promise < unknown > Returns # Promise < unknown > Defined in # src/sharding/ipc/IpcClient.ts:39 generate # \u25b8 Private generate (): string Returns # string Defined in # src/sharding/ipc/IpcClient.ts:140 hello # \u25b8 Private hello ( connection ): void Parameters # Name Type connection any Returns # void Defined in # src/sharding/ipc/IpcClient.ts:91 onPacket # \u25b8 Private onPacket ( packet ): void Parameters # Name Type packet IpcPacket Returns # void Defined in # src/sharding/ipc/IpcClient.ts:73 send # \u25b8 send ( data , options? ): Promise < unknown > Parameters # Name Type data IpcPacket options IpcClientSendOptions Returns # Promise < unknown > Defined in # src/sharding/ipc/IpcClient.ts:118 sendHeartbeat # \u25b8 Private sendHeartbeat (): void Returns # void Defined in # src/sharding/ipc/IpcClient.ts:106","title":"IpcClient"},{"location":"api/classes/sharding.ipcclient/#class-ipcclient","text":"sharding .IpcClient","title":"Class: IpcClient"},{"location":"api/classes/sharding.ipcclient/#hierarchy","text":"TypedEmitter \u21b3 IpcClient","title":"Hierarchy"},{"location":"api/classes/sharding.ipcclient/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/sharding.ipcclient/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/sharding.ipcclient/#properties","text":"bucket eventsHandler helloInterval id ipc managerId shardIpcId shardSocket shards totalShards","title":"Properties"},{"location":"api/classes/sharding.ipcclient/#methods","text":"connect generate hello onPacket send sendHeartbeat","title":"Methods"},{"location":"api/classes/sharding.ipcclient/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/sharding.ipcclient/#constructor","text":"\u2022 new IpcClient ( options )","title":"constructor"},{"location":"api/classes/sharding.ipcclient/#properties_1","text":"","title":"Properties"},{"location":"api/classes/sharding.ipcclient/#bucket","text":"\u2022 Private bucket : Collection < string , any >","title":"bucket"},{"location":"api/classes/sharding.ipcclient/#eventshandler","text":"\u2022 Private Readonly eventsHandler : any","title":"eventsHandler"},{"location":"api/classes/sharding.ipcclient/#hellointerval","text":"\u2022 Private Optional helloInterval : Timeout","title":"helloInterval"},{"location":"api/classes/sharding.ipcclient/#id","text":"\u2022 id : number","title":"id"},{"location":"api/classes/sharding.ipcclient/#ipc","text":"\u2022 ipc : IPC","title":"ipc"},{"location":"api/classes/sharding.ipcclient/#managerid","text":"\u2022 Private Readonly managerId : string","title":"managerId"},{"location":"api/classes/sharding.ipcclient/#shardipcid","text":"\u2022 Private Readonly shardIpcId : string","title":"shardIpcId"},{"location":"api/classes/sharding.ipcclient/#shardsocket","text":"\u2022 Private shardSocket : any","title":"shardSocket"},{"location":"api/classes/sharding.ipcclient/#shards","text":"\u2022 shards : number []","title":"shards"},{"location":"api/classes/sharding.ipcclient/#totalshards","text":"\u2022 totalShards : number","title":"totalShards"},{"location":"api/classes/sharding.ipcclient/#methods_1","text":"","title":"Methods"},{"location":"api/classes/sharding.ipcclient/#connect","text":"\u25b8 connect (): Promise < unknown >","title":"connect"},{"location":"api/classes/sharding.ipcclient/#generate","text":"\u25b8 Private generate (): string","title":"generate"},{"location":"api/classes/sharding.ipcclient/#hello","text":"\u25b8 Private hello ( connection ): void","title":"hello"},{"location":"api/classes/sharding.ipcclient/#onpacket","text":"\u25b8 Private onPacket ( packet ): void","title":"onPacket"},{"location":"api/classes/sharding.ipcclient/#send","text":"\u25b8 send ( data , options? ): Promise < unknown >","title":"send"},{"location":"api/classes/sharding.ipcclient/#sendheartbeat","text":"\u25b8 Private sendHeartbeat (): void","title":"sendHeartbeat"},{"location":"api/classes/sharding.ipcserver/","text":"Discordoo / Modules / sharding / IpcServer Class: IpcServer # sharding .IpcServer Hierarchy # TypedEmitter \u21b3 IpcServer Table of contents # Constructors # constructor Properties # bucket eventsHandler id ipc managerId managerSocket server shardID shards totalShards Methods # destroy dispatch generate hello identify onPacket send serve Constructors # constructor # \u2022 new IpcServer ( options ) Parameters # Name Type options IpcServerOptions Overrides # TypedEmitter.constructor Defined in # src/sharding/ipc/IpcServer.ts:22 Properties # bucket # \u2022 Private bucket : Collection < string , any > Defined in # src/sharding/ipc/IpcServer.ts:12 eventsHandler # \u2022 Private Readonly eventsHandler : any Defined in # src/sharding/ipc/IpcServer.ts:15 id # \u2022 id : string Defined in # src/sharding/ipc/IpcServer.ts:19 ipc # \u2022 ipc : IPC Defined in # src/sharding/ipc/IpcServer.ts:17 managerId # \u2022 Private Readonly managerId : string Defined in # src/sharding/ipc/IpcServer.ts:14 managerSocket # \u2022 Private managerSocket : any Defined in # src/sharding/ipc/IpcServer.ts:13 server # \u2022 Optional server : Server Defined in # src/sharding/ipc/IpcServer.ts:18 shardID # \u2022 shardID : number Defined in # src/sharding/ipc/IpcServer.ts:20 shards # \u2022 Optional shards : number [] Defined in # src/sharding/ipc/IpcServer.ts:21 totalShards # \u2022 Optional totalShards : number Defined in # src/sharding/ipc/IpcServer.ts:22 Methods # destroy # \u25b8 destroy (): void Returns # void Defined in # src/sharding/ipc/IpcServer.ts:62 dispatch # \u25b8 Private dispatch ( packet ): void Parameters # Name Type packet IpcDispatchPacket Returns # void Defined in # src/sharding/ipc/IpcServer.ts:124 generate # \u25b8 Private generate (): string Returns # string Defined in # src/sharding/ipc/IpcServer.ts:157 hello # \u25b8 Private hello ( packet , socket ): undefined | Promise < unknown > Parameters # Name Type packet IpcHelloPacket socket any Returns # undefined | Promise < unknown > Defined in # src/sharding/ipc/IpcServer.ts:93 identify # \u25b8 Private identify ( packet ): void Parameters # Name Type packet IpcHelloPacket Returns # void Defined in # src/sharding/ipc/IpcServer.ts:112 onPacket # \u25b8 Private onPacket ( packet , socket ): void Parameters # Name Type packet IpcPacket socket any Returns # void Defined in # src/sharding/ipc/IpcServer.ts:70 send # \u25b8 send ( data , options? ): Promise < unknown > Parameters # Name Type data IpcPacket options IpcServerSendOptions Returns # Promise < unknown > Defined in # src/sharding/ipc/IpcServer.ts:133 serve # \u25b8 serve (): Promise < unknown > Returns # Promise < unknown > Defined in # src/sharding/ipc/IpcServer.ts:40","title":"IpcServer"},{"location":"api/classes/sharding.ipcserver/#class-ipcserver","text":"sharding .IpcServer","title":"Class: IpcServer"},{"location":"api/classes/sharding.ipcserver/#hierarchy","text":"TypedEmitter \u21b3 IpcServer","title":"Hierarchy"},{"location":"api/classes/sharding.ipcserver/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/sharding.ipcserver/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/sharding.ipcserver/#properties","text":"bucket eventsHandler id ipc managerId managerSocket server shardID shards totalShards","title":"Properties"},{"location":"api/classes/sharding.ipcserver/#methods","text":"destroy dispatch generate hello identify onPacket send serve","title":"Methods"},{"location":"api/classes/sharding.ipcserver/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/sharding.ipcserver/#constructor","text":"\u2022 new IpcServer ( options )","title":"constructor"},{"location":"api/classes/sharding.ipcserver/#properties_1","text":"","title":"Properties"},{"location":"api/classes/sharding.ipcserver/#bucket","text":"\u2022 Private bucket : Collection < string , any >","title":"bucket"},{"location":"api/classes/sharding.ipcserver/#eventshandler","text":"\u2022 Private Readonly eventsHandler : any","title":"eventsHandler"},{"location":"api/classes/sharding.ipcserver/#id","text":"\u2022 id : string","title":"id"},{"location":"api/classes/sharding.ipcserver/#ipc","text":"\u2022 ipc : IPC","title":"ipc"},{"location":"api/classes/sharding.ipcserver/#managerid","text":"\u2022 Private Readonly managerId : string","title":"managerId"},{"location":"api/classes/sharding.ipcserver/#managersocket","text":"\u2022 Private managerSocket : any","title":"managerSocket"},{"location":"api/classes/sharding.ipcserver/#server","text":"\u2022 Optional server : Server","title":"server"},{"location":"api/classes/sharding.ipcserver/#shardid","text":"\u2022 shardID : number","title":"shardID"},{"location":"api/classes/sharding.ipcserver/#shards","text":"\u2022 Optional shards : number []","title":"shards"},{"location":"api/classes/sharding.ipcserver/#totalshards","text":"\u2022 Optional totalShards : number","title":"totalShards"},{"location":"api/classes/sharding.ipcserver/#methods_1","text":"","title":"Methods"},{"location":"api/classes/sharding.ipcserver/#destroy","text":"\u25b8 destroy (): void","title":"destroy"},{"location":"api/classes/sharding.ipcserver/#dispatch","text":"\u25b8 Private dispatch ( packet ): void","title":"dispatch"},{"location":"api/classes/sharding.ipcserver/#generate","text":"\u25b8 Private generate (): string","title":"generate"},{"location":"api/classes/sharding.ipcserver/#hello","text":"\u25b8 Private hello ( packet , socket ): undefined | Promise < unknown >","title":"hello"},{"location":"api/classes/sharding.ipcserver/#identify","text":"\u25b8 Private identify ( packet ): void","title":"identify"},{"location":"api/classes/sharding.ipcserver/#onpacket","text":"\u25b8 Private onPacket ( packet , socket ): void","title":"onPacket"},{"location":"api/classes/sharding.ipcserver/#send","text":"\u25b8 send ( data , options? ): Promise < unknown >","title":"send"},{"location":"api/classes/sharding.ipcserver/#serve","text":"\u25b8 serve (): Promise < unknown >","title":"serve"},{"location":"api/classes/sharding.shardingclient/","text":"Discordoo / Modules / sharding / ShardingClient Class: ShardingClient # sharding .ShardingClient Hierarchy # TypedEmitter \u21b3 ShardingClient Table of contents # Constructors # constructor Properties # id ipc ipcId mode options rawShard shards totalShards Methods # create Constructors # constructor # \u2022 new ShardingClient ( options ) Parameters # Name Type options ShardingClientOptions Overrides # TypedEmitter.constructor Defined in # src/sharding/ShardingClient.ts:19 Properties # id # \u2022 id : number Defined in # src/sharding/ShardingClient.ts:12 ipc # \u2022 ipc : IpcClient Defined in # src/sharding/ShardingClient.ts:14 ipcId # \u2022 ipcId : string Defined in # src/sharding/ShardingClient.ts:13 mode # \u2022 mode : PartialShardingModes Defined in # src/sharding/ShardingClient.ts:16 options # \u2022 options : ShardingClientOptions Defined in # src/sharding/ShardingClient.ts:17 rawShard # \u2022 Optional rawShard : Worker | Worker | ChildProcess Defined in # src/sharding/ShardingClient.ts:19 shards # \u2022 shards : number [] Defined in # src/sharding/ShardingClient.ts:15 totalShards # \u2022 totalShards : number Defined in # src/sharding/ShardingClient.ts:18 Methods # create # \u25b8 create ( options? ): Promise < unknown > Parameters # Name Type options ShardingClientCreateOptions Returns # Promise < unknown > Defined in # src/sharding/ShardingClient.ts:41","title":"ShardingClient"},{"location":"api/classes/sharding.shardingclient/#class-shardingclient","text":"sharding .ShardingClient","title":"Class: ShardingClient"},{"location":"api/classes/sharding.shardingclient/#hierarchy","text":"TypedEmitter \u21b3 ShardingClient","title":"Hierarchy"},{"location":"api/classes/sharding.shardingclient/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/sharding.shardingclient/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/sharding.shardingclient/#properties","text":"id ipc ipcId mode options rawShard shards totalShards","title":"Properties"},{"location":"api/classes/sharding.shardingclient/#methods","text":"create","title":"Methods"},{"location":"api/classes/sharding.shardingclient/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/sharding.shardingclient/#constructor","text":"\u2022 new ShardingClient ( options )","title":"constructor"},{"location":"api/classes/sharding.shardingclient/#properties_1","text":"","title":"Properties"},{"location":"api/classes/sharding.shardingclient/#id","text":"\u2022 id : number","title":"id"},{"location":"api/classes/sharding.shardingclient/#ipc","text":"\u2022 ipc : IpcClient","title":"ipc"},{"location":"api/classes/sharding.shardingclient/#ipcid","text":"\u2022 ipcId : string","title":"ipcId"},{"location":"api/classes/sharding.shardingclient/#mode","text":"\u2022 mode : PartialShardingModes","title":"mode"},{"location":"api/classes/sharding.shardingclient/#options","text":"\u2022 options : ShardingClientOptions","title":"options"},{"location":"api/classes/sharding.shardingclient/#rawshard","text":"\u2022 Optional rawShard : Worker | Worker | ChildProcess","title":"rawShard"},{"location":"api/classes/sharding.shardingclient/#shards","text":"\u2022 shards : number []","title":"shards"},{"location":"api/classes/sharding.shardingclient/#totalshards","text":"\u2022 totalShards : number","title":"totalShards"},{"location":"api/classes/sharding.shardingclient/#methods_1","text":"","title":"Methods"},{"location":"api/classes/sharding.shardingclient/#create","text":"\u25b8 create ( options? ): Promise < unknown >","title":"create"},{"location":"api/classes/sharding.shardingmanager/","text":"Discordoo / Modules / sharding / ShardingManager Class: ShardingManager # sharding .ShardingManager Hierarchy # TypedEmitter < ShardingManagerEvents > \u21b3 ShardingManager Table of contents # Constructors # constructor Properties # #died _shards id mode options shards type Methods # spawn Constructors # constructor # \u2022 new ShardingManager ( options ) Parameters # Name Type options ShardingManagerOptions Overrides # TypedEmitter<ShardingManagerEvents\\>.constructor Defined in # src/sharding/ShardingManager.ts:27 Properties # #died # \u2022 Private Readonly #died : boolean = false Defined in # src/sharding/ShardingManager.ts:27 _shards # \u2022 Private Readonly _shards : number [] Defined in # src/sharding/ShardingManager.ts:26 id # \u2022 id : string Defined in # src/sharding/ShardingManager.ts:23 mode # \u2022 mode : ShardingModes Defined in # src/sharding/ShardingManager.ts:21 options # \u2022 options : ShardingManagerOptions Defined in # src/sharding/ShardingManager.ts:22 shards # \u2022 shards : Collection < number , ShardingClient > Defined in # src/sharding/ShardingManager.ts:24 type # \u2022 type : ShardingManagerTypes Defined in # src/sharding/ShardingManager.ts:20 Methods # spawn # \u25b8 spawn (): Promise < void > Returns # Promise < void > Defined in # src/sharding/ShardingManager.ts:45","title":"ShardingManager"},{"location":"api/classes/sharding.shardingmanager/#class-shardingmanager","text":"sharding .ShardingManager","title":"Class: ShardingManager"},{"location":"api/classes/sharding.shardingmanager/#hierarchy","text":"TypedEmitter < ShardingManagerEvents > \u21b3 ShardingManager","title":"Hierarchy"},{"location":"api/classes/sharding.shardingmanager/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/sharding.shardingmanager/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/sharding.shardingmanager/#properties","text":"#died _shards id mode options shards type","title":"Properties"},{"location":"api/classes/sharding.shardingmanager/#methods","text":"spawn","title":"Methods"},{"location":"api/classes/sharding.shardingmanager/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/sharding.shardingmanager/#constructor","text":"\u2022 new ShardingManager ( options )","title":"constructor"},{"location":"api/classes/sharding.shardingmanager/#properties_1","text":"","title":"Properties"},{"location":"api/classes/sharding.shardingmanager/#died","text":"\u2022 Private Readonly #died : boolean = false","title":"#died"},{"location":"api/classes/sharding.shardingmanager/#_shards","text":"\u2022 Private Readonly _shards : number []","title":"_shards"},{"location":"api/classes/sharding.shardingmanager/#id","text":"\u2022 id : string","title":"id"},{"location":"api/classes/sharding.shardingmanager/#mode","text":"\u2022 mode : ShardingModes","title":"mode"},{"location":"api/classes/sharding.shardingmanager/#options","text":"\u2022 options : ShardingManagerOptions","title":"options"},{"location":"api/classes/sharding.shardingmanager/#shards","text":"\u2022 shards : Collection < number , ShardingClient >","title":"shards"},{"location":"api/classes/sharding.shardingmanager/#type","text":"\u2022 type : ShardingManagerTypes","title":"type"},{"location":"api/classes/sharding.shardingmanager/#methods_1","text":"","title":"Methods"},{"location":"api/classes/sharding.shardingmanager/#spawn","text":"\u25b8 spawn (): Promise < void >","title":"spawn"},{"location":"api/classes/utils.discordooerror/","text":"Discordoo / Modules / utils / DiscordooError Class: DiscordooError # utils .DiscordooError Custom error class to create human-readable errors Hierarchy # Error \u21b3 DiscordooError Table of contents # Constructors # constructor Properties # name Constructors # constructor # \u2022 new DiscordooError ( source? , ... args ) Parameters # Name Type source? string ...args any [] Overrides # Error.constructor Defined in # src/utils/DiscordooError.ts:5 Properties # name # \u2022 name : string = 'DiscordooError' Overrides # Error.name Defined in # src/utils/DiscordooError.ts:5","title":"DiscordooError"},{"location":"api/classes/utils.discordooerror/#class-discordooerror","text":"utils .DiscordooError Custom error class to create human-readable errors","title":"Class: DiscordooError"},{"location":"api/classes/utils.discordooerror/#hierarchy","text":"Error \u21b3 DiscordooError","title":"Hierarchy"},{"location":"api/classes/utils.discordooerror/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/utils.discordooerror/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/utils.discordooerror/#properties","text":"name","title":"Properties"},{"location":"api/classes/utils.discordooerror/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/utils.discordooerror/#constructor","text":"\u2022 new DiscordooError ( source? , ... args )","title":"constructor"},{"location":"api/classes/utils.discordooerror/#properties_1","text":"","title":"Properties"},{"location":"api/classes/utils.discordooerror/#name","text":"\u2022 name : string = 'DiscordooError'","title":"name"},{"location":"api/classes/utils.discordoosnowflake/","text":"Discordoo / Modules / utils / DiscordooSnowflake Class: DiscordooSnowflake # utils .DiscordooSnowflake DiscordooSnowflake is a custom twitter snowflake used to identify ipc connections and messages. Table of contents # Constructors # constructor Properties # SHARDING_MANAGER_ID Methods # deconstruct generate generatePartial Constructors # constructor # \u2022 new DiscordooSnowflake () Properties # SHARDING_MANAGER_ID # \u25aa Static Readonly SHARDING_MANAGER_ID : 1111111111 Defined in # src/utils/DiscordooSnowflake.ts:12 Methods # deconstruct # \u25b8 Static deconstruct ( snowflake ): DeconstructedDiscordooSnowflake Parameters # Name Type snowflake string Returns # DeconstructedDiscordooSnowflake Defined in # src/utils/DiscordooSnowflake.ts:77 generate # \u25b8 Static generate ( shardID , workerID? , timestamp? ): string Custom twitter snowflake: DiscordooSnowflake. If we have a snowflake '1128425170719486862453931925225603077' we can represent it as binary: 128 86 54 22 000000001101100101010011101010000000011011 00000000000000000000000000001011 00000000000000000000000001100011 0000000000000000000101 number of ms since Discordoo epoch worker id shard id increment getting a timestamp: (BigInt(snowflake) >> 86n) + BigInt(EPOCH) === 1624043753498n getting a worker id: (BigInt(snowflake) & 0x3FFFFFFFC0000000000000n) >> 54n === 11n getting a shard id: (BigInt(snowflake) & 0x3FFFFFFFC00000n) >> 22n === 99n getting a increment: BigInt(snowflake) & 0x3FFFFFn === 5n Why? Discordoo uses DiscordooSnowflake to identify ipc connections and messages. So, if your bot has more than 2,147,483,647 shards, you will unfortunately not be able to use Discordoo. Parameters # Name Type Default value shardID number undefined workerID number 0 timestamp number | Date undefined Returns # string Defined in # src/utils/DiscordooSnowflake.ts:40 generatePartial # \u25b8 Static generatePartial ( timestamp? ): string Parameters # Name Type timestamp number | Date Returns # string Defined in # src/utils/DiscordooSnowflake.ts:69","title":"DiscordooSnowflake"},{"location":"api/classes/utils.discordoosnowflake/#class-discordoosnowflake","text":"utils .DiscordooSnowflake DiscordooSnowflake is a custom twitter snowflake used to identify ipc connections and messages.","title":"Class: DiscordooSnowflake"},{"location":"api/classes/utils.discordoosnowflake/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/utils.discordoosnowflake/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/utils.discordoosnowflake/#properties","text":"SHARDING_MANAGER_ID","title":"Properties"},{"location":"api/classes/utils.discordoosnowflake/#methods","text":"deconstruct generate generatePartial","title":"Methods"},{"location":"api/classes/utils.discordoosnowflake/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/utils.discordoosnowflake/#constructor","text":"\u2022 new DiscordooSnowflake ()","title":"constructor"},{"location":"api/classes/utils.discordoosnowflake/#properties_1","text":"","title":"Properties"},{"location":"api/classes/utils.discordoosnowflake/#sharding_manager_id","text":"\u25aa Static Readonly SHARDING_MANAGER_ID : 1111111111","title":"SHARDING_MANAGER_ID"},{"location":"api/classes/utils.discordoosnowflake/#methods_1","text":"","title":"Methods"},{"location":"api/classes/utils.discordoosnowflake/#deconstruct","text":"\u25b8 Static deconstruct ( snowflake ): DeconstructedDiscordooSnowflake","title":"deconstruct"},{"location":"api/classes/utils.discordoosnowflake/#generate","text":"\u25b8 Static generate ( shardID , workerID? , timestamp? ): string Custom twitter snowflake: DiscordooSnowflake. If we have a snowflake '1128425170719486862453931925225603077' we can represent it as binary: 128 86 54 22 000000001101100101010011101010000000011011 00000000000000000000000000001011 00000000000000000000000001100011 0000000000000000000101 number of ms since Discordoo epoch worker id shard id increment getting a timestamp: (BigInt(snowflake) >> 86n) + BigInt(EPOCH) === 1624043753498n getting a worker id: (BigInt(snowflake) & 0x3FFFFFFFC0000000000000n) >> 54n === 11n getting a shard id: (BigInt(snowflake) & 0x3FFFFFFFC00000n) >> 22n === 99n getting a increment: BigInt(snowflake) & 0x3FFFFFn === 5n Why? Discordoo uses DiscordooSnowflake to identify ipc connections and messages. So, if your bot has more than 2,147,483,647 shards, you will unfortunately not be able to use Discordoo.","title":"generate"},{"location":"api/classes/utils.discordoosnowflake/#generatepartial","text":"\u25b8 Static generatePartial ( timestamp? ): string","title":"generatePartial"},{"location":"api/classes/utils.websocketutils/","text":"Discordoo / Modules / utils / WebSocketUtils Class: WebSocketUtils # utils .WebSocketUtils Table of contents # Constructors # constructor Properties # encoding pack pako Methods # exists unpack Constructors # constructor # \u2022 new WebSocketUtils () Properties # encoding # \u25aa Static encoding : \"json\" | \"etf\" Defined in # src/utils/WebSocketUtils.ts:28 pack # \u25aa Static pack : any Defined in # src/utils/WebSocketUtils.ts:26 pako # \u25aa Static pako : any Defined in # src/utils/WebSocketUtils.ts:30 Methods # exists # \u25b8 Static exists ( packet ): boolean Parameters # Name Type packet any Returns # boolean Defined in # src/utils/WebSocketUtils.ts:44 unpack # \u25b8 Static unpack ( data , type? ): Record < any , any > Parameters # Name Type data any type \"json\" | \"etf\" Returns # Record < any , any > Defined in # src/utils/WebSocketUtils.ts:32","title":"WebSocketUtils"},{"location":"api/classes/utils.websocketutils/#class-websocketutils","text":"utils .WebSocketUtils","title":"Class: WebSocketUtils"},{"location":"api/classes/utils.websocketutils/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/utils.websocketutils/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/utils.websocketutils/#properties","text":"encoding pack pako","title":"Properties"},{"location":"api/classes/utils.websocketutils/#methods","text":"exists unpack","title":"Methods"},{"location":"api/classes/utils.websocketutils/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/utils.websocketutils/#constructor","text":"\u2022 new WebSocketUtils ()","title":"constructor"},{"location":"api/classes/utils.websocketutils/#properties_1","text":"","title":"Properties"},{"location":"api/classes/utils.websocketutils/#encoding","text":"\u25aa Static encoding : \"json\" | \"etf\"","title":"encoding"},{"location":"api/classes/utils.websocketutils/#pack","text":"\u25aa Static pack : any","title":"pack"},{"location":"api/classes/utils.websocketutils/#pako","text":"\u25aa Static pako : any","title":"pako"},{"location":"api/classes/utils.websocketutils/#methods_1","text":"","title":"Methods"},{"location":"api/classes/utils.websocketutils/#exists","text":"\u25b8 Static exists ( packet ): boolean","title":"exists"},{"location":"api/classes/utils.websocketutils/#unpack","text":"\u25b8 Static unpack ( data , type? ): Record < any , any >","title":"unpack"},{"location":"api/classes/wrapper.clientbuilder/","text":"Discordoo / Modules / wrapper / ClientBuilder Class: ClientBuilder<Stack> # wrapper .ClientBuilder Type parameters # Name Type Stack extends DefaultClientStack DefaultClientStack Table of contents # Constructors # constructor Properties # customClient options token Methods # build cacheProvider custom gateway gatewayProvider ipc rest restProvider useProvider Constructors # constructor # \u2022 new ClientBuilder < Stack >( token , options? ) Type parameters # Name Type Stack extends DefaultClientStack DefaultClientStack Parameters # Name Type token string options? CreateAppOptions Defined in # src/wrapper/ClientBuilder.ts:9 Properties # customClient # \u2022 Private Readonly customClient : any Defined in # src/wrapper/ClientBuilder.ts:9 options # \u2022 options : ClientOptions < any > Defined in # src/wrapper/ClientBuilder.ts:7 token # \u2022 token : string Defined in # src/wrapper/ClientBuilder.ts:6 Methods # build # \u25b8 build < T >(): T Type parameters # Name Type T extends Client < DefaultClientStack , T > Client < Stack > Returns # T Defined in # src/wrapper/ClientBuilder.ts:65 cacheProvider # \u25b8 cacheProvider ( provider , ... options ): ClientBuilder < Stack > Parameters # Name Type provider ProviderConstructor < Stack [ \"cache\" ]> ...options any [] Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:44 custom # \u25b8 custom < T >( options ): ClientBuilder < Stack > Type parameters # Name T Parameters # Name Type options undefined | T Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:35 gateway # \u25b8 gateway ( options ): ClientBuilder < Stack > Parameters # Name Type options undefined | Optional < GatewayOptions , \"token\" | \"intents\" | \"properties\" > Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:25 gatewayProvider # \u25b8 gatewayProvider ( provider , ... options ): ClientBuilder < Stack > Parameters # Name Type provider ProviderConstructor < Stack [ \"gateway\" ]> ...options any [] Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:48 ipc # \u25b8 ipc ( options ): ClientBuilder < Stack > Parameters # Name Type options undefined | Optional < IpcServerOptions , \"id\" | \"managerIpcId\" | \"shardId\" > Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:30 rest # \u25b8 rest ( options ): ClientBuilder < Stack > Parameters # Name Type options any Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:20 restProvider # \u25b8 restProvider ( provider , ... options ): ClientBuilder < Stack > Parameters # Name Type provider ProviderConstructor < Stack [ \"rest\" ]> ...options any [] Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:40 useProvider # \u25b8 Private useProvider ( providerSignature , provider , ... options ): ClientBuilder < Stack > Parameters # Name Type providerSignature DiscordooProviders provider any ...options any [] Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:52","title":"ClientBuilder"},{"location":"api/classes/wrapper.clientbuilder/#class-clientbuilderstack","text":"wrapper .ClientBuilder","title":"Class: ClientBuilder&lt;Stack>"},{"location":"api/classes/wrapper.clientbuilder/#type-parameters","text":"Name Type Stack extends DefaultClientStack DefaultClientStack","title":"Type parameters"},{"location":"api/classes/wrapper.clientbuilder/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/wrapper.clientbuilder/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/wrapper.clientbuilder/#properties","text":"customClient options token","title":"Properties"},{"location":"api/classes/wrapper.clientbuilder/#methods","text":"build cacheProvider custom gateway gatewayProvider ipc rest restProvider useProvider","title":"Methods"},{"location":"api/classes/wrapper.clientbuilder/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/wrapper.clientbuilder/#constructor","text":"\u2022 new ClientBuilder < Stack >( token , options? )","title":"constructor"},{"location":"api/classes/wrapper.clientbuilder/#properties_1","text":"","title":"Properties"},{"location":"api/classes/wrapper.clientbuilder/#customclient","text":"\u2022 Private Readonly customClient : any","title":"customClient"},{"location":"api/classes/wrapper.clientbuilder/#options","text":"\u2022 options : ClientOptions < any >","title":"options"},{"location":"api/classes/wrapper.clientbuilder/#token","text":"\u2022 token : string","title":"token"},{"location":"api/classes/wrapper.clientbuilder/#methods_1","text":"","title":"Methods"},{"location":"api/classes/wrapper.clientbuilder/#build","text":"\u25b8 build < T >(): T","title":"build"},{"location":"api/classes/wrapper.clientbuilder/#cacheprovider","text":"\u25b8 cacheProvider ( provider , ... options ): ClientBuilder < Stack >","title":"cacheProvider"},{"location":"api/classes/wrapper.clientbuilder/#custom","text":"\u25b8 custom < T >( options ): ClientBuilder < Stack >","title":"custom"},{"location":"api/classes/wrapper.clientbuilder/#gateway","text":"\u25b8 gateway ( options ): ClientBuilder < Stack >","title":"gateway"},{"location":"api/classes/wrapper.clientbuilder/#gatewayprovider","text":"\u25b8 gatewayProvider ( provider , ... options ): ClientBuilder < Stack >","title":"gatewayProvider"},{"location":"api/classes/wrapper.clientbuilder/#ipc","text":"\u25b8 ipc ( options ): ClientBuilder < Stack >","title":"ipc"},{"location":"api/classes/wrapper.clientbuilder/#rest","text":"\u25b8 rest ( options ): ClientBuilder < Stack >","title":"rest"},{"location":"api/classes/wrapper.clientbuilder/#restprovider","text":"\u25b8 restProvider ( provider , ... options ): ClientBuilder < Stack >","title":"restProvider"},{"location":"api/classes/wrapper.clientbuilder/#useprovider","text":"\u25b8 Private useProvider ( providerSignature , provider , ... options ): ClientBuilder < Stack >","title":"useProvider"},{"location":"api/enums/core.constants.channelscachingpolicy/","text":"Discordoo / Modules / core / Constants / ChannelsCachingPolicy Enumeration: ChannelsCachingPolicy # core . Constants .ChannelsCachingPolicy Channels caching policy Table of contents # Enumeration members # ALL CATEGORY DM NEWS NEWS_THREAD NONE PRIVATE_THREAD PUBLIC_THREAD STAGE_VOICE STORE TEXT VOICE Enumeration members # ALL # \u2022 ALL = \"all\" Cache all channels Defined in # src/core/Constants.ts:63 CATEGORY # \u2022 CATEGORY = \"category\" Cache categories Defined in # src/core/Constants.ts:73 DM # \u2022 DM = \"dm\" Cache dm channels Defined in # src/core/Constants.ts:71 NEWS # \u2022 NEWS = \"news\" Cache news channels (does not includes threads) Defined in # src/core/Constants.ts:75 NEWS_THREAD # \u2022 NEWS_THREAD = \"newsThread\" Cache news threads Defined in # src/core/Constants.ts:79 NONE # \u2022 NONE = \"none\" Dont cache channels Defined in # src/core/Constants.ts:65 PRIVATE_THREAD # \u2022 PRIVATE_THREAD = \"privateThread\" Cache private threads Defined in # src/core/Constants.ts:83 PUBLIC_THREAD # \u2022 PUBLIC_THREAD = \"publicThread\" Cache public threads Defined in # src/core/Constants.ts:81 STAGE_VOICE # \u2022 STAGE_VOICE = \"stageVoice\" Cache stage voices Defined in # src/core/Constants.ts:85 STORE # \u2022 STORE = \"store\" Cache 'store' channels (does not includes threads) Defined in # src/core/Constants.ts:77 TEXT # \u2022 TEXT = \"text\" Cache text channels Defined in # src/core/Constants.ts:67 VOICE # \u2022 VOICE = \"voice\" Cache voice channels (does not includes stages) Defined in # src/core/Constants.ts:69","title":"ChannelsCachingPolicy"},{"location":"api/enums/core.constants.channelscachingpolicy/#enumeration-channelscachingpolicy","text":"core . Constants .ChannelsCachingPolicy Channels caching policy","title":"Enumeration: ChannelsCachingPolicy"},{"location":"api/enums/core.constants.channelscachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.channelscachingpolicy/#enumeration-members","text":"ALL CATEGORY DM NEWS NEWS_THREAD NONE PRIVATE_THREAD PUBLIC_THREAD STAGE_VOICE STORE TEXT VOICE","title":"Enumeration members"},{"location":"api/enums/core.constants.channelscachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.channelscachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache all channels","title":"ALL"},{"location":"api/enums/core.constants.channelscachingpolicy/#category","text":"\u2022 CATEGORY = \"category\" Cache categories","title":"CATEGORY"},{"location":"api/enums/core.constants.channelscachingpolicy/#dm","text":"\u2022 DM = \"dm\" Cache dm channels","title":"DM"},{"location":"api/enums/core.constants.channelscachingpolicy/#news","text":"\u2022 NEWS = \"news\" Cache news channels (does not includes threads)","title":"NEWS"},{"location":"api/enums/core.constants.channelscachingpolicy/#news_thread","text":"\u2022 NEWS_THREAD = \"newsThread\" Cache news threads","title":"NEWS_THREAD"},{"location":"api/enums/core.constants.channelscachingpolicy/#none","text":"\u2022 NONE = \"none\" Dont cache channels","title":"NONE"},{"location":"api/enums/core.constants.channelscachingpolicy/#private_thread","text":"\u2022 PRIVATE_THREAD = \"privateThread\" Cache private threads","title":"PRIVATE_THREAD"},{"location":"api/enums/core.constants.channelscachingpolicy/#public_thread","text":"\u2022 PUBLIC_THREAD = \"publicThread\" Cache public threads","title":"PUBLIC_THREAD"},{"location":"api/enums/core.constants.channelscachingpolicy/#stage_voice","text":"\u2022 STAGE_VOICE = \"stageVoice\" Cache stage voices","title":"STAGE_VOICE"},{"location":"api/enums/core.constants.channelscachingpolicy/#store","text":"\u2022 STORE = \"store\" Cache 'store' channels (does not includes threads)","title":"STORE"},{"location":"api/enums/core.constants.channelscachingpolicy/#text","text":"\u2022 TEXT = \"text\" Cache text channels","title":"TEXT"},{"location":"api/enums/core.constants.channelscachingpolicy/#voice","text":"\u2022 VOICE = \"voice\" Cache voice channels (does not includes stages)","title":"VOICE"},{"location":"api/enums/core.constants.discordooproviders/","text":"Discordoo / Modules / core / Constants / DiscordooProviders Enumeration: DiscordooProviders # core . Constants .DiscordooProviders Providers that can be used in Discordoo Table of contents # Enumeration members # CACHE GATEWAY REST Enumeration members # CACHE # \u2022 CACHE = 2 Defined in # src/core/Constants.ts:132 GATEWAY # \u2022 GATEWAY = 1 Defined in # src/core/Constants.ts:131 REST # \u2022 REST = 0 Defined in # src/core/Constants.ts:130","title":"DiscordooProviders"},{"location":"api/enums/core.constants.discordooproviders/#enumeration-discordooproviders","text":"core . Constants .DiscordooProviders Providers that can be used in Discordoo","title":"Enumeration: DiscordooProviders"},{"location":"api/enums/core.constants.discordooproviders/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.discordooproviders/#enumeration-members","text":"CACHE GATEWAY REST","title":"Enumeration members"},{"location":"api/enums/core.constants.discordooproviders/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.discordooproviders/#cache","text":"\u2022 CACHE = 2","title":"CACHE"},{"location":"api/enums/core.constants.discordooproviders/#gateway","text":"\u2022 GATEWAY = 1","title":"GATEWAY"},{"location":"api/enums/core.constants.discordooproviders/#rest","text":"\u2022 REST = 0","title":"REST"},{"location":"api/enums/core.constants.emojiscachingpolicy/","text":"Discordoo / Modules / core / Constants / EmojisCachingPolicy Enumeration: EmojisCachingPolicy # core . Constants .EmojisCachingPolicy Emojis caching policy Table of contents # Enumeration members # ALL ANIMATED NONE STATIC Enumeration members # ALL # \u2022 ALL = \"all\" Cache all emojis Defined in # src/core/Constants.ts:91 ANIMATED # \u2022 ANIMATED = \"animated\" Cache animated emojis Defined in # src/core/Constants.ts:95 NONE # \u2022 NONE = \"none\" Dont cache emojis Defined in # src/core/Constants.ts:93 STATIC # \u2022 STATIC = \"static\" Cache static emojis (common) Defined in # src/core/Constants.ts:97","title":"EmojisCachingPolicy"},{"location":"api/enums/core.constants.emojiscachingpolicy/#enumeration-emojiscachingpolicy","text":"core . Constants .EmojisCachingPolicy Emojis caching policy","title":"Enumeration: EmojisCachingPolicy"},{"location":"api/enums/core.constants.emojiscachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.emojiscachingpolicy/#enumeration-members","text":"ALL ANIMATED NONE STATIC","title":"Enumeration members"},{"location":"api/enums/core.constants.emojiscachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.emojiscachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache all emojis","title":"ALL"},{"location":"api/enums/core.constants.emojiscachingpolicy/#animated","text":"\u2022 ANIMATED = \"animated\" Cache animated emojis","title":"ANIMATED"},{"location":"api/enums/core.constants.emojiscachingpolicy/#none","text":"\u2022 NONE = \"none\" Dont cache emojis","title":"NONE"},{"location":"api/enums/core.constants.emojiscachingpolicy/#static","text":"\u2022 STATIC = \"static\" Cache static emojis (common)","title":"STATIC"},{"location":"api/enums/core.constants.globalcachingpolicy/","text":"Discordoo / Modules / core / Constants / GlobalCachingPolicy Enumeration: GlobalCachingPolicy # core . Constants .GlobalCachingPolicy Global caching policy used to override any other caching policies Table of contents # Enumeration members # ALL NONE Enumeration members # ALL # \u2022 ALL = \"all\" Cache everything we can Defined in # src/core/Constants.ts:11 NONE # \u2022 NONE = \"none\" Cache absolutely nothing Defined in # src/core/Constants.ts:13","title":"GlobalCachingPolicy"},{"location":"api/enums/core.constants.globalcachingpolicy/#enumeration-globalcachingpolicy","text":"core . Constants .GlobalCachingPolicy Global caching policy used to override any other caching policies","title":"Enumeration: GlobalCachingPolicy"},{"location":"api/enums/core.constants.globalcachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.globalcachingpolicy/#enumeration-members","text":"ALL NONE","title":"Enumeration members"},{"location":"api/enums/core.constants.globalcachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.globalcachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache everything we can","title":"ALL"},{"location":"api/enums/core.constants.globalcachingpolicy/#none","text":"\u2022 NONE = \"none\" Cache absolutely nothing","title":"NONE"},{"location":"api/enums/core.constants.guildscachingpolicy/","text":"Discordoo / Modules / core / Constants / GuildsCachingPolicy Enumeration: GuildsCachingPolicy # core . Constants .GuildsCachingPolicy Guilds caching policy Table of contents # Enumeration members # ALL NONE Enumeration members # ALL # \u2022 ALL = \"all\" Cache all guilds Defined in # src/core/Constants.ts:31 NONE # \u2022 NONE = \"none\" Dont cache guilds Defined in # src/core/Constants.ts:33","title":"GuildsCachingPolicy"},{"location":"api/enums/core.constants.guildscachingpolicy/#enumeration-guildscachingpolicy","text":"core . Constants .GuildsCachingPolicy Guilds caching policy","title":"Enumeration: GuildsCachingPolicy"},{"location":"api/enums/core.constants.guildscachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.guildscachingpolicy/#enumeration-members","text":"ALL NONE","title":"Enumeration members"},{"location":"api/enums/core.constants.guildscachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.guildscachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache all guilds","title":"ALL"},{"location":"api/enums/core.constants.guildscachingpolicy/#none","text":"\u2022 NONE = \"none\" Dont cache guilds","title":"NONE"},{"location":"api/enums/core.constants.ipcevents/","text":"Discordoo / Modules / core / Constants / IpcEvents Enumeration: IpcEvents # core . Constants .IpcEvents Inter-process communication events (t) Table of contents # Enumeration members # DESTROYING MESSAGE PARTIAL_RESTARTING RESTARTING RESTRUCTURING Enumeration members # DESTROYING # \u2022 DESTROYING = \"DESTROYING\" Stop all shards Defined in # src/core/Constants.ts:158 MESSAGE # \u2022 MESSAGE = \"MESSAGE\" Any messages between IPC Server and IPC Client Defined in # src/core/Constants.ts:156 PARTIAL_RESTARTING # \u2022 PARTIAL_RESTARTING = \"PARTIAL_RESTARTING\" Restart specified shards Defined in # src/core/Constants.ts:164 RESTARTING # \u2022 RESTARTING = \"RESTARTING\" Restart all shards Defined in # src/core/Constants.ts:162 RESTRUCTURING # \u2022 RESTRUCTURING = \"RESTRUCTURING\" Set new shards configuration & restart (between machines only) Defined in # src/core/Constants.ts:160","title":"IpcEvents"},{"location":"api/enums/core.constants.ipcevents/#enumeration-ipcevents","text":"core . Constants .IpcEvents Inter-process communication events (t)","title":"Enumeration: IpcEvents"},{"location":"api/enums/core.constants.ipcevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.ipcevents/#enumeration-members","text":"DESTROYING MESSAGE PARTIAL_RESTARTING RESTARTING RESTRUCTURING","title":"Enumeration members"},{"location":"api/enums/core.constants.ipcevents/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.ipcevents/#destroying","text":"\u2022 DESTROYING = \"DESTROYING\" Stop all shards","title":"DESTROYING"},{"location":"api/enums/core.constants.ipcevents/#message","text":"\u2022 MESSAGE = \"MESSAGE\" Any messages between IPC Server and IPC Client","title":"MESSAGE"},{"location":"api/enums/core.constants.ipcevents/#partial_restarting","text":"\u2022 PARTIAL_RESTARTING = \"PARTIAL_RESTARTING\" Restart specified shards","title":"PARTIAL_RESTARTING"},{"location":"api/enums/core.constants.ipcevents/#restarting","text":"\u2022 RESTARTING = \"RESTARTING\" Restart all shards","title":"RESTARTING"},{"location":"api/enums/core.constants.ipcevents/#restructuring","text":"\u2022 RESTRUCTURING = \"RESTRUCTURING\" Set new shards configuration & restart (between machines only)","title":"RESTRUCTURING"},{"location":"api/enums/core.constants.ipcopcodes/","text":"Discordoo / Modules / core / Constants / IpcOPCodes Enumeration: IpcOPCodes # core . Constants .IpcOPCodes Operation Codes used in Inter-process communication messages Table of contents # Enumeration members # DISPATCH ERROR HEARTBEAT HELLO IDENTIFY INVALID_SESSION REQUEST_STATS Enumeration members # DISPATCH # \u2022 DISPATCH = 0 Includes common event (t) (send/receive) Defined in # src/core/Constants.ts:138 ERROR # \u2022 ERROR = 6 Looks like something went wrong (send/receive) Defined in # src/core/Constants.ts:150 HEARTBEAT # \u2022 HEARTBEAT = 2 IPC Server / IPC Client sends this to each other to identify that they are alive (send/receive) Defined in # src/core/Constants.ts:142 HELLO # \u2022 HELLO = 4 IPC Client sends this to IPC Server to explain to him who he is. Contains shards list, heartbeat interval (receive) Defined in # src/core/Constants.ts:146 IDENTIFY # \u2022 IDENTIFY = 1 IPC Server should send this to identify itself in IPC Client (send) Defined in # src/core/Constants.ts:140 INVALID_SESSION # \u2022 INVALID_SESSION = 3 IPC Server sends this to IPC Client when IPC Client id (ddoo snowflake) is invalid (send) Defined in # src/core/Constants.ts:144 REQUEST_STATS # \u2022 REQUEST_STATS = 5 Used to statistics requests (send/receive) Defined in # src/core/Constants.ts:148","title":"IpcOPCodes"},{"location":"api/enums/core.constants.ipcopcodes/#enumeration-ipcopcodes","text":"core . Constants .IpcOPCodes Operation Codes used in Inter-process communication messages","title":"Enumeration: IpcOPCodes"},{"location":"api/enums/core.constants.ipcopcodes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.ipcopcodes/#enumeration-members","text":"DISPATCH ERROR HEARTBEAT HELLO IDENTIFY INVALID_SESSION REQUEST_STATS","title":"Enumeration members"},{"location":"api/enums/core.constants.ipcopcodes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.ipcopcodes/#dispatch","text":"\u2022 DISPATCH = 0 Includes common event (t) (send/receive)","title":"DISPATCH"},{"location":"api/enums/core.constants.ipcopcodes/#error","text":"\u2022 ERROR = 6 Looks like something went wrong (send/receive)","title":"ERROR"},{"location":"api/enums/core.constants.ipcopcodes/#heartbeat","text":"\u2022 HEARTBEAT = 2 IPC Server / IPC Client sends this to each other to identify that they are alive (send/receive)","title":"HEARTBEAT"},{"location":"api/enums/core.constants.ipcopcodes/#hello","text":"\u2022 HELLO = 4 IPC Client sends this to IPC Server to explain to him who he is. Contains shards list, heartbeat interval (receive)","title":"HELLO"},{"location":"api/enums/core.constants.ipcopcodes/#identify","text":"\u2022 IDENTIFY = 1 IPC Server should send this to identify itself in IPC Client (send)","title":"IDENTIFY"},{"location":"api/enums/core.constants.ipcopcodes/#invalid_session","text":"\u2022 INVALID_SESSION = 3 IPC Server sends this to IPC Client when IPC Client id (ddoo snowflake) is invalid (send)","title":"INVALID_SESSION"},{"location":"api/enums/core.constants.ipcopcodes/#request_stats","text":"\u2022 REQUEST_STATS = 5 Used to statistics requests (send/receive)","title":"REQUEST_STATS"},{"location":"api/enums/core.constants.memberscachingpolicy/","text":"Discordoo / Modules / core / Constants / MembersCachingPolicy Enumeration: MembersCachingPolicy # core . Constants .MembersCachingPolicy Members caching policy Table of contents # Enumeration members # ALL DND IDLE NONE OFFLINE ONLINE OWNER PENDING RECENT_MESSAGE VOICE Enumeration members # ALL # \u2022 ALL = \"all\" Cache all members which library received Defined in # src/core/Constants.ts:39 DND # \u2022 DND = \"dnd\" Cache members with dnd status Defined in # src/core/Constants.ts:45 IDLE # \u2022 IDLE = \"idle\" Cache with idle status Defined in # src/core/Constants.ts:47 NONE # \u2022 NONE = \"none\" Dont cache members Defined in # src/core/Constants.ts:41 OFFLINE # \u2022 OFFLINE = \"offline\" Cache offline members Defined in # src/core/Constants.ts:49 ONLINE # \u2022 ONLINE = \"online\" Cache online members Defined in # src/core/Constants.ts:43 OWNER # \u2022 OWNER = \"owner\" Cache guilds owners Defined in # src/core/Constants.ts:51 PENDING # \u2022 PENDING = \"pending\" Cache members which are pending due to discord's welcome screen Defined in # src/core/Constants.ts:53 RECENT_MESSAGE # \u2022 RECENT_MESSAGE = \"recentMessage\" Cache members who recently send a message Defined in # src/core/Constants.ts:57 VOICE # \u2022 VOICE = \"voice\" Cache connected to voice channels members Defined in # src/core/Constants.ts:55","title":"MembersCachingPolicy"},{"location":"api/enums/core.constants.memberscachingpolicy/#enumeration-memberscachingpolicy","text":"core . Constants .MembersCachingPolicy Members caching policy","title":"Enumeration: MembersCachingPolicy"},{"location":"api/enums/core.constants.memberscachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.memberscachingpolicy/#enumeration-members","text":"ALL DND IDLE NONE OFFLINE ONLINE OWNER PENDING RECENT_MESSAGE VOICE","title":"Enumeration members"},{"location":"api/enums/core.constants.memberscachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.memberscachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache all members which library received","title":"ALL"},{"location":"api/enums/core.constants.memberscachingpolicy/#dnd","text":"\u2022 DND = \"dnd\" Cache members with dnd status","title":"DND"},{"location":"api/enums/core.constants.memberscachingpolicy/#idle","text":"\u2022 IDLE = \"idle\" Cache with idle status","title":"IDLE"},{"location":"api/enums/core.constants.memberscachingpolicy/#none","text":"\u2022 NONE = \"none\" Dont cache members","title":"NONE"},{"location":"api/enums/core.constants.memberscachingpolicy/#offline","text":"\u2022 OFFLINE = \"offline\" Cache offline members","title":"OFFLINE"},{"location":"api/enums/core.constants.memberscachingpolicy/#online","text":"\u2022 ONLINE = \"online\" Cache online members","title":"ONLINE"},{"location":"api/enums/core.constants.memberscachingpolicy/#owner","text":"\u2022 OWNER = \"owner\" Cache guilds owners","title":"OWNER"},{"location":"api/enums/core.constants.memberscachingpolicy/#pending","text":"\u2022 PENDING = \"pending\" Cache members which are pending due to discord's welcome screen","title":"PENDING"},{"location":"api/enums/core.constants.memberscachingpolicy/#recent_message","text":"\u2022 RECENT_MESSAGE = \"recentMessage\" Cache members who recently send a message","title":"RECENT_MESSAGE"},{"location":"api/enums/core.constants.memberscachingpolicy/#voice","text":"\u2022 VOICE = \"voice\" Cache connected to voice channels members","title":"VOICE"},{"location":"api/enums/core.constants.messagescachingpolicy/","text":"Discordoo / Modules / core / Constants / MessagesCachingPolicy Enumeration: MessagesCachingPolicy # core . Constants .MessagesCachingPolicy Messages caching policy Table of contents # Enumeration members # ALL BOTS NONE USERS Enumeration members # ALL # \u2022 ALL = \"all\" Cache all messages Defined in # src/core/Constants.ts:19 BOTS # \u2022 BOTS = \"bots\" Cache messages from bots Defined in # src/core/Constants.ts:25 NONE # \u2022 NONE = \"none\" Dont cache messages Defined in # src/core/Constants.ts:21 USERS # \u2022 USERS = \"users\" Cache messages from users Defined in # src/core/Constants.ts:23","title":"MessagesCachingPolicy"},{"location":"api/enums/core.constants.messagescachingpolicy/#enumeration-messagescachingpolicy","text":"core . Constants .MessagesCachingPolicy Messages caching policy","title":"Enumeration: MessagesCachingPolicy"},{"location":"api/enums/core.constants.messagescachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.messagescachingpolicy/#enumeration-members","text":"ALL BOTS NONE USERS","title":"Enumeration members"},{"location":"api/enums/core.constants.messagescachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.messagescachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache all messages","title":"ALL"},{"location":"api/enums/core.constants.messagescachingpolicy/#bots","text":"\u2022 BOTS = \"bots\" Cache messages from bots","title":"BOTS"},{"location":"api/enums/core.constants.messagescachingpolicy/#none","text":"\u2022 NONE = \"none\" Dont cache messages","title":"NONE"},{"location":"api/enums/core.constants.messagescachingpolicy/#users","text":"\u2022 USERS = \"users\" Cache messages from users","title":"USERS"},{"location":"api/enums/core.constants.partialshardingmodes/","text":"Discordoo / Modules / core / Constants / PartialShardingModes Enumeration: PartialShardingModes # core . Constants .PartialShardingModes Table of contents # Enumeration members # CLUSTERS PROCESSES WORKERS Enumeration members # CLUSTERS # \u2022 CLUSTERS = \"clusters\" Spawn sharding instances in different node.js's clusters Defined in # src/core/Constants.ts:186 PROCESSES # \u2022 PROCESSES = \"processes\" Spawn sharding instances in different processes Defined in # src/core/Constants.ts:182 WORKERS # \u2022 WORKERS = \"workers\" Spawn sharding instances in different worker threads Defined in # src/core/Constants.ts:184","title":"PartialShardingModes"},{"location":"api/enums/core.constants.partialshardingmodes/#enumeration-partialshardingmodes","text":"core . Constants .PartialShardingModes","title":"Enumeration: PartialShardingModes"},{"location":"api/enums/core.constants.partialshardingmodes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.partialshardingmodes/#enumeration-members","text":"CLUSTERS PROCESSES WORKERS","title":"Enumeration members"},{"location":"api/enums/core.constants.partialshardingmodes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.partialshardingmodes/#clusters","text":"\u2022 CLUSTERS = \"clusters\" Spawn sharding instances in different node.js's clusters","title":"CLUSTERS"},{"location":"api/enums/core.constants.partialshardingmodes/#processes","text":"\u2022 PROCESSES = \"processes\" Spawn sharding instances in different processes","title":"PROCESSES"},{"location":"api/enums/core.constants.partialshardingmodes/#workers","text":"\u2022 WORKERS = \"workers\" Spawn sharding instances in different worker threads","title":"WORKERS"},{"location":"api/enums/core.constants.presencescachingpolicy/","text":"Discordoo / Modules / core / Constants / PresencesCachingPolicy Enumeration: PresencesCachingPolicy # core . Constants .PresencesCachingPolicy Presences caching policy Table of contents # Enumeration members # ALL NONE Enumeration members # ALL # \u2022 ALL = \"all\" Cache all presences Defined in # src/core/Constants.ts:115 NONE # \u2022 NONE = \"none\" Dont cache presences Defined in # src/core/Constants.ts:117","title":"PresencesCachingPolicy"},{"location":"api/enums/core.constants.presencescachingpolicy/#enumeration-presencescachingpolicy","text":"core . Constants .PresencesCachingPolicy Presences caching policy","title":"Enumeration: PresencesCachingPolicy"},{"location":"api/enums/core.constants.presencescachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.presencescachingpolicy/#enumeration-members","text":"ALL NONE","title":"Enumeration members"},{"location":"api/enums/core.constants.presencescachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.presencescachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache all presences","title":"ALL"},{"location":"api/enums/core.constants.presencescachingpolicy/#none","text":"\u2022 NONE = \"none\" Dont cache presences","title":"NONE"},{"location":"api/enums/core.constants.rolescachingpolicy/","text":"Discordoo / Modules / core / Constants / RolesCachingPolicy Enumeration: RolesCachingPolicy # core . Constants .RolesCachingPolicy Roles caching policy Table of contents # Enumeration members # ALL EVERYONE MANAGED NONE Enumeration members # ALL # \u2022 ALL = \"all\" Cache all roles Defined in # src/core/Constants.ts:103 EVERYONE # \u2022 EVERYONE = \"everyone\" Cache @everyone roles Defined in # src/core/Constants.ts:107 MANAGED # \u2022 MANAGED = \"managed\" Cache roles that managed by integrations Defined in # src/core/Constants.ts:109 NONE # \u2022 NONE = \"none\" Dont cache roles Defined in # src/core/Constants.ts:105","title":"RolesCachingPolicy"},{"location":"api/enums/core.constants.rolescachingpolicy/#enumeration-rolescachingpolicy","text":"core . Constants .RolesCachingPolicy Roles caching policy","title":"Enumeration: RolesCachingPolicy"},{"location":"api/enums/core.constants.rolescachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.rolescachingpolicy/#enumeration-members","text":"ALL EVERYONE MANAGED NONE","title":"Enumeration members"},{"location":"api/enums/core.constants.rolescachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.rolescachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache all roles","title":"ALL"},{"location":"api/enums/core.constants.rolescachingpolicy/#everyone","text":"\u2022 EVERYONE = \"everyone\" Cache @everyone roles","title":"EVERYONE"},{"location":"api/enums/core.constants.rolescachingpolicy/#managed","text":"\u2022 MANAGED = \"managed\" Cache roles that managed by integrations","title":"MANAGED"},{"location":"api/enums/core.constants.rolescachingpolicy/#none","text":"\u2022 NONE = \"none\" Dont cache roles","title":"NONE"},{"location":"api/enums/core.constants.shardingmanagertypes/","text":"Discordoo / Modules / core / Constants / ShardingManagerTypes Enumeration: ShardingManagerTypes # core . Constants .ShardingManagerTypes Table of contents # Enumeration members # CHILD PARENT STANDALONE_CHILD STANDALONE_PARENT Enumeration members # CHILD # \u2022 CHILD = 3 Defined in # src/core/Constants.ts:193 PARENT # \u2022 PARENT = 2 Defined in # src/core/Constants.ts:192 STANDALONE_CHILD # \u2022 STANDALONE_CHILD = 1 Defined in # src/core/Constants.ts:191 STANDALONE_PARENT # \u2022 STANDALONE_PARENT = 0 Defined in # src/core/Constants.ts:190","title":"ShardingManagerTypes"},{"location":"api/enums/core.constants.shardingmanagertypes/#enumeration-shardingmanagertypes","text":"core . Constants .ShardingManagerTypes","title":"Enumeration: ShardingManagerTypes"},{"location":"api/enums/core.constants.shardingmanagertypes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.shardingmanagertypes/#enumeration-members","text":"CHILD PARENT STANDALONE_CHILD STANDALONE_PARENT","title":"Enumeration members"},{"location":"api/enums/core.constants.shardingmanagertypes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.shardingmanagertypes/#child","text":"\u2022 CHILD = 3","title":"CHILD"},{"location":"api/enums/core.constants.shardingmanagertypes/#parent","text":"\u2022 PARENT = 2","title":"PARENT"},{"location":"api/enums/core.constants.shardingmanagertypes/#standalone_child","text":"\u2022 STANDALONE_CHILD = 1","title":"STANDALONE_CHILD"},{"location":"api/enums/core.constants.shardingmanagertypes/#standalone_parent","text":"\u2022 STANDALONE_PARENT = 0","title":"STANDALONE_PARENT"},{"location":"api/enums/core.constants.shardingmodes/","text":"Discordoo / Modules / core / Constants / ShardingModes Enumeration: ShardingModes # core . Constants .ShardingModes Sharding manager modes Table of contents # Enumeration members # CLUSTERS MACHINES PROCESSES WORKERS Enumeration members # CLUSTERS # \u2022 CLUSTERS = \"clusters\" Spawn sharding instances in different node.js's clusters Defined in # src/core/Constants.ts:174 MACHINES # \u2022 MACHINES = \"machines\" Connect to child sharding managers in different machines and pass sharding instructions to them Defined in # src/core/Constants.ts:176 PROCESSES # \u2022 PROCESSES = \"processes\" Spawn sharding instances in different processes Defined in # src/core/Constants.ts:170 WORKERS # \u2022 WORKERS = \"workers\" Spawn sharding instances in different worker threads Defined in # src/core/Constants.ts:172","title":"ShardingModes"},{"location":"api/enums/core.constants.shardingmodes/#enumeration-shardingmodes","text":"core . Constants .ShardingModes Sharding manager modes","title":"Enumeration: ShardingModes"},{"location":"api/enums/core.constants.shardingmodes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.shardingmodes/#enumeration-members","text":"CLUSTERS MACHINES PROCESSES WORKERS","title":"Enumeration members"},{"location":"api/enums/core.constants.shardingmodes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.shardingmodes/#clusters","text":"\u2022 CLUSTERS = \"clusters\" Spawn sharding instances in different node.js's clusters","title":"CLUSTERS"},{"location":"api/enums/core.constants.shardingmodes/#machines","text":"\u2022 MACHINES = \"machines\" Connect to child sharding managers in different machines and pass sharding instructions to them","title":"MACHINES"},{"location":"api/enums/core.constants.shardingmodes/#processes","text":"\u2022 PROCESSES = \"processes\" Spawn sharding instances in different processes","title":"PROCESSES"},{"location":"api/enums/core.constants.shardingmodes/#workers","text":"\u2022 WORKERS = \"workers\" Spawn sharding instances in different worker threads","title":"WORKERS"},{"location":"api/enums/core.constants.userscachingpolicy/","text":"Discordoo / Modules / core / Constants / UsersCachingPolicy Enumeration: UsersCachingPolicy # core . Constants .UsersCachingPolicy Users caching policy Table of contents # Enumeration members # ALL NONE Enumeration members # ALL # \u2022 ALL = \"all\" Cache all users Defined in # src/core/Constants.ts:123 NONE # \u2022 NONE = \"none\" Dont cache users Defined in # src/core/Constants.ts:125","title":"UsersCachingPolicy"},{"location":"api/enums/core.constants.userscachingpolicy/#enumeration-userscachingpolicy","text":"core . Constants .UsersCachingPolicy Users caching policy","title":"Enumeration: UsersCachingPolicy"},{"location":"api/enums/core.constants.userscachingpolicy/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.userscachingpolicy/#enumeration-members","text":"ALL NONE","title":"Enumeration members"},{"location":"api/enums/core.constants.userscachingpolicy/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.userscachingpolicy/#all","text":"\u2022 ALL = \"all\" Cache all users","title":"ALL"},{"location":"api/enums/core.constants.userscachingpolicy/#none","text":"\u2022 NONE = \"none\" Dont cache users","title":"NONE"},{"location":"api/enums/core.constants.websocketclientevents/","text":"Discordoo / Modules / core / Constants / WebSocketClientEvents Enumeration: WebSocketClientEvents # core . Constants .WebSocketClientEvents Table of contents # Enumeration members # DESTROYED INVALID_SESSION READY RECONNECT_ME RESUMED WS_CLOSED WS_CLOSE_ERROR WS_ERROR WS_OPEN WS_OPEN_ERROR WS_SEND_ERROR Enumeration members # DESTROYED # \u2022 DESTROYED = \"destroyed\" Defined in # src/core/Constants.ts:294 INVALID_SESSION # \u2022 INVALID_SESSION = \"invalidSession\" Defined in # src/core/Constants.ts:295 READY # \u2022 READY = \"ready\" Defined in # src/core/Constants.ts:292 RECONNECT_ME # \u2022 RECONNECT_ME = \"RECONNECT_ME\" Defined in # src/core/Constants.ts:290 RESUMED # \u2022 RESUMED = \"resumed\" Defined in # src/core/Constants.ts:293 WS_CLOSED # \u2022 WS_CLOSED = \"WS_CLOSED\" Defined in # src/core/Constants.ts:288 WS_CLOSE_ERROR # \u2022 WS_CLOSE_ERROR = \"WS_CLOSE_ERROR\" Defined in # src/core/Constants.ts:284 WS_ERROR # \u2022 WS_ERROR = \"WS_ERROR\" Defined in # src/core/Constants.ts:286 WS_OPEN # \u2022 WS_OPEN = \"WS_OPEN\" Defined in # src/core/Constants.ts:287 WS_OPEN_ERROR # \u2022 WS_OPEN_ERROR = \"WS_OPEN_ERROR\" Defined in # src/core/Constants.ts:283 WS_SEND_ERROR # \u2022 WS_SEND_ERROR = \"WS_SEND_ERROR\" Defined in # src/core/Constants.ts:282","title":"WebSocketClientEvents"},{"location":"api/enums/core.constants.websocketclientevents/#enumeration-websocketclientevents","text":"core . Constants .WebSocketClientEvents","title":"Enumeration: WebSocketClientEvents"},{"location":"api/enums/core.constants.websocketclientevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketclientevents/#enumeration-members","text":"DESTROYED INVALID_SESSION READY RECONNECT_ME RESUMED WS_CLOSED WS_CLOSE_ERROR WS_ERROR WS_OPEN WS_OPEN_ERROR WS_SEND_ERROR","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketclientevents/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketclientevents/#destroyed","text":"\u2022 DESTROYED = \"destroyed\"","title":"DESTROYED"},{"location":"api/enums/core.constants.websocketclientevents/#invalid_session","text":"\u2022 INVALID_SESSION = \"invalidSession\"","title":"INVALID_SESSION"},{"location":"api/enums/core.constants.websocketclientevents/#ready","text":"\u2022 READY = \"ready\"","title":"READY"},{"location":"api/enums/core.constants.websocketclientevents/#reconnect_me","text":"\u2022 RECONNECT_ME = \"RECONNECT_ME\"","title":"RECONNECT_ME"},{"location":"api/enums/core.constants.websocketclientevents/#resumed","text":"\u2022 RESUMED = \"resumed\"","title":"RESUMED"},{"location":"api/enums/core.constants.websocketclientevents/#ws_closed","text":"\u2022 WS_CLOSED = \"WS_CLOSED\"","title":"WS_CLOSED"},{"location":"api/enums/core.constants.websocketclientevents/#ws_close_error","text":"\u2022 WS_CLOSE_ERROR = \"WS_CLOSE_ERROR\"","title":"WS_CLOSE_ERROR"},{"location":"api/enums/core.constants.websocketclientevents/#ws_error","text":"\u2022 WS_ERROR = \"WS_ERROR\"","title":"WS_ERROR"},{"location":"api/enums/core.constants.websocketclientevents/#ws_open","text":"\u2022 WS_OPEN = \"WS_OPEN\"","title":"WS_OPEN"},{"location":"api/enums/core.constants.websocketclientevents/#ws_open_error","text":"\u2022 WS_OPEN_ERROR = \"WS_OPEN_ERROR\"","title":"WS_OPEN_ERROR"},{"location":"api/enums/core.constants.websocketclientevents/#ws_send_error","text":"\u2022 WS_SEND_ERROR = \"WS_SEND_ERROR\"","title":"WS_SEND_ERROR"},{"location":"api/enums/core.constants.websocketclientstates/","text":"Discordoo / Modules / core / Constants / WebSocketClientStates Enumeration: WebSocketClientStates # core . Constants .WebSocketClientStates Table of contents # Enumeration members # CONNECTED CONNECTING CREATED DISCONNECTED IDENTIFYING READY RECONNECTING RESUMING WAITING_FOR_GUILDS Enumeration members # CONNECTED # \u2022 CONNECTED = 4 Defined in # src/core/Constants.ts:274 CONNECTING # \u2022 CONNECTING = 2 Defined in # src/core/Constants.ts:272 CREATED # \u2022 CREATED = 0 Defined in # src/core/Constants.ts:270 DISCONNECTED # \u2022 DISCONNECTED = 5 Defined in # src/core/Constants.ts:275 IDENTIFYING # \u2022 IDENTIFYING = 7 Defined in # src/core/Constants.ts:277 READY # \u2022 READY = 1 Defined in # src/core/Constants.ts:271 RECONNECTING # \u2022 RECONNECTING = 3 Defined in # src/core/Constants.ts:273 RESUMING # \u2022 RESUMING = 8 Defined in # src/core/Constants.ts:278 WAITING_FOR_GUILDS # \u2022 WAITING_FOR_GUILDS = 6 Defined in # src/core/Constants.ts:276","title":"WebSocketClientStates"},{"location":"api/enums/core.constants.websocketclientstates/#enumeration-websocketclientstates","text":"core . Constants .WebSocketClientStates","title":"Enumeration: WebSocketClientStates"},{"location":"api/enums/core.constants.websocketclientstates/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketclientstates/#enumeration-members","text":"CONNECTED CONNECTING CREATED DISCONNECTED IDENTIFYING READY RECONNECTING RESUMING WAITING_FOR_GUILDS","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketclientstates/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketclientstates/#connected","text":"\u2022 CONNECTED = 4","title":"CONNECTED"},{"location":"api/enums/core.constants.websocketclientstates/#connecting","text":"\u2022 CONNECTING = 2","title":"CONNECTING"},{"location":"api/enums/core.constants.websocketclientstates/#created","text":"\u2022 CREATED = 0","title":"CREATED"},{"location":"api/enums/core.constants.websocketclientstates/#disconnected","text":"\u2022 DISCONNECTED = 5","title":"DISCONNECTED"},{"location":"api/enums/core.constants.websocketclientstates/#identifying","text":"\u2022 IDENTIFYING = 7","title":"IDENTIFYING"},{"location":"api/enums/core.constants.websocketclientstates/#ready","text":"\u2022 READY = 1","title":"READY"},{"location":"api/enums/core.constants.websocketclientstates/#reconnecting","text":"\u2022 RECONNECTING = 3","title":"RECONNECTING"},{"location":"api/enums/core.constants.websocketclientstates/#resuming","text":"\u2022 RESUMING = 8","title":"RESUMING"},{"location":"api/enums/core.constants.websocketclientstates/#waiting_for_guilds","text":"\u2022 WAITING_FOR_GUILDS = 6","title":"WAITING_FOR_GUILDS"},{"location":"api/enums/core.constants.websocketevents/","text":"Discordoo / Modules / core / Constants / WebSocketEvents Enumeration: WebSocketEvents # core . Constants .WebSocketEvents Table of contents # Enumeration members # CHANNEL_CREATE CHANNEL_DELETE CHANNEL_PINS_UPDATE CHANNEL_UPDATE GUILD_BAN_ADD GUILD_BAN_REMOVE GUILD_CREATE GUILD_DELETE GUILD_EMOJIS_UPDATE GUILD_INTEGRATIONS_UPDATE GUILD_MEMBERS_CHUNK GUILD_MEMBER_ADD GUILD_MEMBER_REMOVE GUILD_MEMBER_UPDATE GUILD_ROLE_CREATE GUILD_ROLE_DELETE GUILD_ROLE_UPDATE GUILD_UPDATE INVITE_CREATE INVITE_DELETE MESSAGE_CREATE MESSAGE_DELETE MESSAGE_DELETE_BULK MESSAGE_REACTION_ADD MESSAGE_REACTION_REMOVE MESSAGE_REACTION_REMOVE_ALL MESSAGE_REACTION_REMOVE_EMOJI MESSAGE_UPDATE PRESENCE_UPDATE READY RESUMED TYPING_START USER_UPDATE VOICE_SERVER_UPDATE VOICE_STATE_UPDATE WEBHOOKS_UPDATE Enumeration members # CHANNEL_CREATE # \u2022 CHANNEL_CREATE = \"CHANNEL_CREATE\" Defined in # src/core/Constants.ts:230 CHANNEL_DELETE # \u2022 CHANNEL_DELETE = \"CHANNEL_DELETE\" Defined in # src/core/Constants.ts:231 CHANNEL_PINS_UPDATE # \u2022 CHANNEL_PINS_UPDATE = \"CHANNEL_PINS_UPDATE\" Defined in # src/core/Constants.ts:233 CHANNEL_UPDATE # \u2022 CHANNEL_UPDATE = \"CHANNEL_UPDATE\" Defined in # src/core/Constants.ts:232 GUILD_BAN_ADD # \u2022 GUILD_BAN_ADD = \"GUILD_BAN_ADD\" Defined in # src/core/Constants.ts:227 GUILD_BAN_REMOVE # \u2022 GUILD_BAN_REMOVE = \"GUILD_BAN_REMOVE\" Defined in # src/core/Constants.ts:228 GUILD_CREATE # \u2022 GUILD_CREATE = \"GUILD_CREATE\" Defined in # src/core/Constants.ts:214 GUILD_DELETE # \u2022 GUILD_DELETE = \"GUILD_DELETE\" Defined in # src/core/Constants.ts:215 GUILD_EMOJIS_UPDATE # \u2022 GUILD_EMOJIS_UPDATE = \"GUILD_EMOJIS_UPDATE\" Defined in # src/core/Constants.ts:229 GUILD_INTEGRATIONS_UPDATE # \u2022 GUILD_INTEGRATIONS_UPDATE = \"GUILD_INTEGRATIONS_UPDATE\" Defined in # src/core/Constants.ts:223 GUILD_MEMBERS_CHUNK # \u2022 GUILD_MEMBERS_CHUNK = \"GUILD_MEMBERS_CHUNK\" Defined in # src/core/Constants.ts:222 GUILD_MEMBER_ADD # \u2022 GUILD_MEMBER_ADD = \"GUILD_MEMBER_ADD\" Defined in # src/core/Constants.ts:219 GUILD_MEMBER_REMOVE # \u2022 GUILD_MEMBER_REMOVE = \"GUILD_MEMBER_REMOVE\" Defined in # src/core/Constants.ts:220 GUILD_MEMBER_UPDATE # \u2022 GUILD_MEMBER_UPDATE = \"GUILD_MEMBER_UPDATE\" Defined in # src/core/Constants.ts:221 GUILD_ROLE_CREATE # \u2022 GUILD_ROLE_CREATE = \"GUILD_ROLE_CREATE\" Defined in # src/core/Constants.ts:224 GUILD_ROLE_DELETE # \u2022 GUILD_ROLE_DELETE = \"GUILD_ROLE_DELETE\" Defined in # src/core/Constants.ts:225 GUILD_ROLE_UPDATE # \u2022 GUILD_ROLE_UPDATE = \"GUILD_ROLE_UPDATE\" Defined in # src/core/Constants.ts:226 GUILD_UPDATE # \u2022 GUILD_UPDATE = \"GUILD_UPDATE\" Defined in # src/core/Constants.ts:216 INVITE_CREATE # \u2022 INVITE_CREATE = \"INVITE_CREATE\" Defined in # src/core/Constants.ts:217 INVITE_DELETE # \u2022 INVITE_DELETE = \"INVITE_DELETE\" Defined in # src/core/Constants.ts:218 MESSAGE_CREATE # \u2022 MESSAGE_CREATE = \"MESSAGE_CREATE\" Defined in # src/core/Constants.ts:234 MESSAGE_DELETE # \u2022 MESSAGE_DELETE = \"MESSAGE_DELETE\" Defined in # src/core/Constants.ts:235 MESSAGE_DELETE_BULK # \u2022 MESSAGE_DELETE_BULK = \"MESSAGE_DELETE_BULK\" Defined in # src/core/Constants.ts:237 MESSAGE_REACTION_ADD # \u2022 MESSAGE_REACTION_ADD = \"MESSAGE_REACTION_ADD\" Defined in # src/core/Constants.ts:238 MESSAGE_REACTION_REMOVE # \u2022 MESSAGE_REACTION_REMOVE = \"MESSAGE_REACTION_REMOVE\" Defined in # src/core/Constants.ts:239 MESSAGE_REACTION_REMOVE_ALL # \u2022 MESSAGE_REACTION_REMOVE_ALL = \"MESSAGE_REACTION_REMOVE_ALL\" Defined in # src/core/Constants.ts:240 MESSAGE_REACTION_REMOVE_EMOJI # \u2022 MESSAGE_REACTION_REMOVE_EMOJI = \"MESSAGE_REACTION_REMOVE_EMOJI\" Defined in # src/core/Constants.ts:241 MESSAGE_UPDATE # \u2022 MESSAGE_UPDATE = \"MESSAGE_UPDATE\" Defined in # src/core/Constants.ts:236 PRESENCE_UPDATE # \u2022 PRESENCE_UPDATE = \"PRESENCE_UPDATE\" Defined in # src/core/Constants.ts:243 READY # \u2022 READY = \"READY\" Defined in # src/core/Constants.ts:212 RESUMED # \u2022 RESUMED = \"RESUMED\" Defined in # src/core/Constants.ts:213 TYPING_START # \u2022 TYPING_START = \"TYPING_START\" Defined in # src/core/Constants.ts:244 USER_UPDATE # \u2022 USER_UPDATE = \"USER_UPDATE\" Defined in # src/core/Constants.ts:242 VOICE_SERVER_UPDATE # \u2022 VOICE_SERVER_UPDATE = \"VOICE_SERVER_UPDATE\" Defined in # src/core/Constants.ts:246 VOICE_STATE_UPDATE # \u2022 VOICE_STATE_UPDATE = \"VOICE_STATE_UPDATE\" Defined in # src/core/Constants.ts:245 WEBHOOKS_UPDATE # \u2022 WEBHOOKS_UPDATE = \"WEBHOOKS_UPDATE\" Defined in # src/core/Constants.ts:247","title":"WebSocketEvents"},{"location":"api/enums/core.constants.websocketevents/#enumeration-websocketevents","text":"core . Constants .WebSocketEvents","title":"Enumeration: WebSocketEvents"},{"location":"api/enums/core.constants.websocketevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketevents/#enumeration-members","text":"CHANNEL_CREATE CHANNEL_DELETE CHANNEL_PINS_UPDATE CHANNEL_UPDATE GUILD_BAN_ADD GUILD_BAN_REMOVE GUILD_CREATE GUILD_DELETE GUILD_EMOJIS_UPDATE GUILD_INTEGRATIONS_UPDATE GUILD_MEMBERS_CHUNK GUILD_MEMBER_ADD GUILD_MEMBER_REMOVE GUILD_MEMBER_UPDATE GUILD_ROLE_CREATE GUILD_ROLE_DELETE GUILD_ROLE_UPDATE GUILD_UPDATE INVITE_CREATE INVITE_DELETE MESSAGE_CREATE MESSAGE_DELETE MESSAGE_DELETE_BULK MESSAGE_REACTION_ADD MESSAGE_REACTION_REMOVE MESSAGE_REACTION_REMOVE_ALL MESSAGE_REACTION_REMOVE_EMOJI MESSAGE_UPDATE PRESENCE_UPDATE READY RESUMED TYPING_START USER_UPDATE VOICE_SERVER_UPDATE VOICE_STATE_UPDATE WEBHOOKS_UPDATE","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketevents/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketevents/#channel_create","text":"\u2022 CHANNEL_CREATE = \"CHANNEL_CREATE\"","title":"CHANNEL_CREATE"},{"location":"api/enums/core.constants.websocketevents/#channel_delete","text":"\u2022 CHANNEL_DELETE = \"CHANNEL_DELETE\"","title":"CHANNEL_DELETE"},{"location":"api/enums/core.constants.websocketevents/#channel_pins_update","text":"\u2022 CHANNEL_PINS_UPDATE = \"CHANNEL_PINS_UPDATE\"","title":"CHANNEL_PINS_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#channel_update","text":"\u2022 CHANNEL_UPDATE = \"CHANNEL_UPDATE\"","title":"CHANNEL_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_ban_add","text":"\u2022 GUILD_BAN_ADD = \"GUILD_BAN_ADD\"","title":"GUILD_BAN_ADD"},{"location":"api/enums/core.constants.websocketevents/#guild_ban_remove","text":"\u2022 GUILD_BAN_REMOVE = \"GUILD_BAN_REMOVE\"","title":"GUILD_BAN_REMOVE"},{"location":"api/enums/core.constants.websocketevents/#guild_create","text":"\u2022 GUILD_CREATE = \"GUILD_CREATE\"","title":"GUILD_CREATE"},{"location":"api/enums/core.constants.websocketevents/#guild_delete","text":"\u2022 GUILD_DELETE = \"GUILD_DELETE\"","title":"GUILD_DELETE"},{"location":"api/enums/core.constants.websocketevents/#guild_emojis_update","text":"\u2022 GUILD_EMOJIS_UPDATE = \"GUILD_EMOJIS_UPDATE\"","title":"GUILD_EMOJIS_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_integrations_update","text":"\u2022 GUILD_INTEGRATIONS_UPDATE = \"GUILD_INTEGRATIONS_UPDATE\"","title":"GUILD_INTEGRATIONS_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_members_chunk","text":"\u2022 GUILD_MEMBERS_CHUNK = \"GUILD_MEMBERS_CHUNK\"","title":"GUILD_MEMBERS_CHUNK"},{"location":"api/enums/core.constants.websocketevents/#guild_member_add","text":"\u2022 GUILD_MEMBER_ADD = \"GUILD_MEMBER_ADD\"","title":"GUILD_MEMBER_ADD"},{"location":"api/enums/core.constants.websocketevents/#guild_member_remove","text":"\u2022 GUILD_MEMBER_REMOVE = \"GUILD_MEMBER_REMOVE\"","title":"GUILD_MEMBER_REMOVE"},{"location":"api/enums/core.constants.websocketevents/#guild_member_update","text":"\u2022 GUILD_MEMBER_UPDATE = \"GUILD_MEMBER_UPDATE\"","title":"GUILD_MEMBER_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_role_create","text":"\u2022 GUILD_ROLE_CREATE = \"GUILD_ROLE_CREATE\"","title":"GUILD_ROLE_CREATE"},{"location":"api/enums/core.constants.websocketevents/#guild_role_delete","text":"\u2022 GUILD_ROLE_DELETE = \"GUILD_ROLE_DELETE\"","title":"GUILD_ROLE_DELETE"},{"location":"api/enums/core.constants.websocketevents/#guild_role_update","text":"\u2022 GUILD_ROLE_UPDATE = \"GUILD_ROLE_UPDATE\"","title":"GUILD_ROLE_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_update","text":"\u2022 GUILD_UPDATE = \"GUILD_UPDATE\"","title":"GUILD_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#invite_create","text":"\u2022 INVITE_CREATE = \"INVITE_CREATE\"","title":"INVITE_CREATE"},{"location":"api/enums/core.constants.websocketevents/#invite_delete","text":"\u2022 INVITE_DELETE = \"INVITE_DELETE\"","title":"INVITE_DELETE"},{"location":"api/enums/core.constants.websocketevents/#message_create","text":"\u2022 MESSAGE_CREATE = \"MESSAGE_CREATE\"","title":"MESSAGE_CREATE"},{"location":"api/enums/core.constants.websocketevents/#message_delete","text":"\u2022 MESSAGE_DELETE = \"MESSAGE_DELETE\"","title":"MESSAGE_DELETE"},{"location":"api/enums/core.constants.websocketevents/#message_delete_bulk","text":"\u2022 MESSAGE_DELETE_BULK = \"MESSAGE_DELETE_BULK\"","title":"MESSAGE_DELETE_BULK"},{"location":"api/enums/core.constants.websocketevents/#message_reaction_add","text":"\u2022 MESSAGE_REACTION_ADD = \"MESSAGE_REACTION_ADD\"","title":"MESSAGE_REACTION_ADD"},{"location":"api/enums/core.constants.websocketevents/#message_reaction_remove","text":"\u2022 MESSAGE_REACTION_REMOVE = \"MESSAGE_REACTION_REMOVE\"","title":"MESSAGE_REACTION_REMOVE"},{"location":"api/enums/core.constants.websocketevents/#message_reaction_remove_all","text":"\u2022 MESSAGE_REACTION_REMOVE_ALL = \"MESSAGE_REACTION_REMOVE_ALL\"","title":"MESSAGE_REACTION_REMOVE_ALL"},{"location":"api/enums/core.constants.websocketevents/#message_reaction_remove_emoji","text":"\u2022 MESSAGE_REACTION_REMOVE_EMOJI = \"MESSAGE_REACTION_REMOVE_EMOJI\"","title":"MESSAGE_REACTION_REMOVE_EMOJI"},{"location":"api/enums/core.constants.websocketevents/#message_update","text":"\u2022 MESSAGE_UPDATE = \"MESSAGE_UPDATE\"","title":"MESSAGE_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#presence_update","text":"\u2022 PRESENCE_UPDATE = \"PRESENCE_UPDATE\"","title":"PRESENCE_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#ready","text":"\u2022 READY = \"READY\"","title":"READY"},{"location":"api/enums/core.constants.websocketevents/#resumed","text":"\u2022 RESUMED = \"RESUMED\"","title":"RESUMED"},{"location":"api/enums/core.constants.websocketevents/#typing_start","text":"\u2022 TYPING_START = \"TYPING_START\"","title":"TYPING_START"},{"location":"api/enums/core.constants.websocketevents/#user_update","text":"\u2022 USER_UPDATE = \"USER_UPDATE\"","title":"USER_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#voice_server_update","text":"\u2022 VOICE_SERVER_UPDATE = \"VOICE_SERVER_UPDATE\"","title":"VOICE_SERVER_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#voice_state_update","text":"\u2022 VOICE_STATE_UPDATE = \"VOICE_STATE_UPDATE\"","title":"VOICE_STATE_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#webhooks_update","text":"\u2022 WEBHOOKS_UPDATE = \"WEBHOOKS_UPDATE\"","title":"WEBHOOKS_UPDATE"},{"location":"api/enums/core.constants.websocketmanagerstates/","text":"Discordoo / Modules / core / Constants / WebSocketManagerStates Enumeration: WebSocketManagerStates # core . Constants .WebSocketManagerStates Table of contents # Enumeration members # CONNECTING CREATED DISCONNECTED READY Enumeration members # CONNECTING # \u2022 CONNECTING = 1 Defined in # src/core/Constants.ts:300 CREATED # \u2022 CREATED = 0 Defined in # src/core/Constants.ts:299 DISCONNECTED # \u2022 DISCONNECTED = 3 Defined in # src/core/Constants.ts:302 READY # \u2022 READY = 2 Defined in # src/core/Constants.ts:301","title":"WebSocketManagerStates"},{"location":"api/enums/core.constants.websocketmanagerstates/#enumeration-websocketmanagerstates","text":"core . Constants .WebSocketManagerStates","title":"Enumeration: WebSocketManagerStates"},{"location":"api/enums/core.constants.websocketmanagerstates/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketmanagerstates/#enumeration-members","text":"CONNECTING CREATED DISCONNECTED READY","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketmanagerstates/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketmanagerstates/#connecting","text":"\u2022 CONNECTING = 1","title":"CONNECTING"},{"location":"api/enums/core.constants.websocketmanagerstates/#created","text":"\u2022 CREATED = 0","title":"CREATED"},{"location":"api/enums/core.constants.websocketmanagerstates/#disconnected","text":"\u2022 DISCONNECTED = 3","title":"DISCONNECTED"},{"location":"api/enums/core.constants.websocketmanagerstates/#ready","text":"\u2022 READY = 2","title":"READY"},{"location":"api/enums/core.constants.websocketopcodes/","text":"Discordoo / Modules / core / Constants / WebSocketOPCodes Enumeration: WebSocketOPCodes # core . Constants .WebSocketOPCodes Table of contents # Enumeration members # DISPATCH HEARTBEAT HEARTBEAT_ACK HELLO IDENTIFY INVALID_SESSION RECONNECT REQUEST_GUILD_MEMBERS RESUME STATUS_UPDATE VOICE_GUILD_PING VOICE_STATE_UPDATE Enumeration members # DISPATCH # \u2022 DISPATCH = 0 Defined in # src/core/Constants.ts:197 HEARTBEAT # \u2022 HEARTBEAT = 1 Defined in # src/core/Constants.ts:198 HEARTBEAT_ACK # \u2022 HEARTBEAT_ACK = 11 Defined in # src/core/Constants.ts:208 HELLO # \u2022 HELLO = 10 Defined in # src/core/Constants.ts:207 IDENTIFY # \u2022 IDENTIFY = 2 Defined in # src/core/Constants.ts:199 INVALID_SESSION # \u2022 INVALID_SESSION = 9 Defined in # src/core/Constants.ts:206 RECONNECT # \u2022 RECONNECT = 7 Defined in # src/core/Constants.ts:204 REQUEST_GUILD_MEMBERS # \u2022 REQUEST_GUILD_MEMBERS = 8 Defined in # src/core/Constants.ts:205 RESUME # \u2022 RESUME = 6 Defined in # src/core/Constants.ts:203 STATUS_UPDATE # \u2022 STATUS_UPDATE = 3 Defined in # src/core/Constants.ts:200 VOICE_GUILD_PING # \u2022 VOICE_GUILD_PING = 5 Defined in # src/core/Constants.ts:202 VOICE_STATE_UPDATE # \u2022 VOICE_STATE_UPDATE = 4 Defined in # src/core/Constants.ts:201","title":"WebSocketOPCodes"},{"location":"api/enums/core.constants.websocketopcodes/#enumeration-websocketopcodes","text":"core . Constants .WebSocketOPCodes","title":"Enumeration: WebSocketOPCodes"},{"location":"api/enums/core.constants.websocketopcodes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketopcodes/#enumeration-members","text":"DISPATCH HEARTBEAT HEARTBEAT_ACK HELLO IDENTIFY INVALID_SESSION RECONNECT REQUEST_GUILD_MEMBERS RESUME STATUS_UPDATE VOICE_GUILD_PING VOICE_STATE_UPDATE","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketopcodes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketopcodes/#dispatch","text":"\u2022 DISPATCH = 0","title":"DISPATCH"},{"location":"api/enums/core.constants.websocketopcodes/#heartbeat","text":"\u2022 HEARTBEAT = 1","title":"HEARTBEAT"},{"location":"api/enums/core.constants.websocketopcodes/#heartbeat_ack","text":"\u2022 HEARTBEAT_ACK = 11","title":"HEARTBEAT_ACK"},{"location":"api/enums/core.constants.websocketopcodes/#hello","text":"\u2022 HELLO = 10","title":"HELLO"},{"location":"api/enums/core.constants.websocketopcodes/#identify","text":"\u2022 IDENTIFY = 2","title":"IDENTIFY"},{"location":"api/enums/core.constants.websocketopcodes/#invalid_session","text":"\u2022 INVALID_SESSION = 9","title":"INVALID_SESSION"},{"location":"api/enums/core.constants.websocketopcodes/#reconnect","text":"\u2022 RECONNECT = 7","title":"RECONNECT"},{"location":"api/enums/core.constants.websocketopcodes/#request_guild_members","text":"\u2022 REQUEST_GUILD_MEMBERS = 8","title":"REQUEST_GUILD_MEMBERS"},{"location":"api/enums/core.constants.websocketopcodes/#resume","text":"\u2022 RESUME = 6","title":"RESUME"},{"location":"api/enums/core.constants.websocketopcodes/#status_update","text":"\u2022 STATUS_UPDATE = 3","title":"STATUS_UPDATE"},{"location":"api/enums/core.constants.websocketopcodes/#voice_guild_ping","text":"\u2022 VOICE_GUILD_PING = 5","title":"VOICE_GUILD_PING"},{"location":"api/enums/core.constants.websocketopcodes/#voice_state_update","text":"\u2022 VOICE_STATE_UPDATE = 4","title":"VOICE_STATE_UPDATE"},{"location":"api/enums/core.constants.websocketshardstatus/","text":"Discordoo / Modules / core / Constants / WebSocketShardStatus Enumeration: WebSocketShardStatus # core . Constants .WebSocketShardStatus Table of contents # Enumeration members # CONNECTED CONNECTING CREATED DISCONNECTED IDENTIFYING READY RECONNECTING RESUMING WAITING_FOR_GUILDS Enumeration members # CONNECTED # \u2022 CONNECTED = 4 Defined in # src/core/Constants.ts:262 CONNECTING # \u2022 CONNECTING = 2 Defined in # src/core/Constants.ts:260 CREATED # \u2022 CREATED = 0 Defined in # src/core/Constants.ts:258 DISCONNECTED # \u2022 DISCONNECTED = 5 Defined in # src/core/Constants.ts:263 IDENTIFYING # \u2022 IDENTIFYING = 7 Defined in # src/core/Constants.ts:265 READY # \u2022 READY = 1 Defined in # src/core/Constants.ts:259 RECONNECTING # \u2022 RECONNECTING = 3 Defined in # src/core/Constants.ts:261 RESUMING # \u2022 RESUMING = 8 Defined in # src/core/Constants.ts:266 WAITING_FOR_GUILDS # \u2022 WAITING_FOR_GUILDS = 6 Defined in # src/core/Constants.ts:264","title":"WebSocketShardStatus"},{"location":"api/enums/core.constants.websocketshardstatus/#enumeration-websocketshardstatus","text":"core . Constants .WebSocketShardStatus","title":"Enumeration: WebSocketShardStatus"},{"location":"api/enums/core.constants.websocketshardstatus/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketshardstatus/#enumeration-members","text":"CONNECTED CONNECTING CREATED DISCONNECTED IDENTIFYING READY RECONNECTING RESUMING WAITING_FOR_GUILDS","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketshardstatus/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketshardstatus/#connected","text":"\u2022 CONNECTED = 4","title":"CONNECTED"},{"location":"api/enums/core.constants.websocketshardstatus/#connecting","text":"\u2022 CONNECTING = 2","title":"CONNECTING"},{"location":"api/enums/core.constants.websocketshardstatus/#created","text":"\u2022 CREATED = 0","title":"CREATED"},{"location":"api/enums/core.constants.websocketshardstatus/#disconnected","text":"\u2022 DISCONNECTED = 5","title":"DISCONNECTED"},{"location":"api/enums/core.constants.websocketshardstatus/#identifying","text":"\u2022 IDENTIFYING = 7","title":"IDENTIFYING"},{"location":"api/enums/core.constants.websocketshardstatus/#ready","text":"\u2022 READY = 1","title":"READY"},{"location":"api/enums/core.constants.websocketshardstatus/#reconnecting","text":"\u2022 RECONNECTING = 3","title":"RECONNECTING"},{"location":"api/enums/core.constants.websocketshardstatus/#resuming","text":"\u2022 RESUMING = 8","title":"RESUMING"},{"location":"api/enums/core.constants.websocketshardstatus/#waiting_for_guilds","text":"\u2022 WAITING_FOR_GUILDS = 6","title":"WAITING_FOR_GUILDS"},{"location":"api/enums/core.constants.websocketstates/","text":"Discordoo / Modules / core / Constants / WebSocketStates Enumeration: WebSocketStates # core . Constants .WebSocketStates Table of contents # Enumeration members # CLOSED CLOSING CONNECTING OPEN Enumeration members # CLOSED # \u2022 CLOSED = 3 Defined in # src/core/Constants.ts:254 CLOSING # \u2022 CLOSING = 2 Defined in # src/core/Constants.ts:253 CONNECTING # \u2022 CONNECTING = 0 Defined in # src/core/Constants.ts:251 OPEN # \u2022 OPEN = 1 Defined in # src/core/Constants.ts:252","title":"WebSocketStates"},{"location":"api/enums/core.constants.websocketstates/#enumeration-websocketstates","text":"core . Constants .WebSocketStates","title":"Enumeration: WebSocketStates"},{"location":"api/enums/core.constants.websocketstates/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketstates/#enumeration-members","text":"CLOSED CLOSING CONNECTING OPEN","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketstates/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketstates/#closed","text":"\u2022 CLOSED = 3","title":"CLOSED"},{"location":"api/enums/core.constants.websocketstates/#closing","text":"\u2022 CLOSING = 2","title":"CLOSING"},{"location":"api/enums/core.constants.websocketstates/#connecting","text":"\u2022 CONNECTING = 0","title":"CONNECTING"},{"location":"api/enums/core.constants.websocketstates/#open","text":"\u2022 OPEN = 1","title":"OPEN"},{"location":"api/interfaces/collection.collectionequaloptions/","text":"Discordoo / Modules / collection / CollectionEqualOptions Interface: CollectionEqualOptions # collection .CollectionEqualOptions Table of contents # Properties # deep Properties # deep # \u2022 Optional deep : boolean Defined in # src/collection/interfaces/CollectionEqualOptions.ts:2","title":"CollectionEqualOptions"},{"location":"api/interfaces/collection.collectionequaloptions/#interface-collectionequaloptions","text":"collection .CollectionEqualOptions","title":"Interface: CollectionEqualOptions"},{"location":"api/interfaces/collection.collectionequaloptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/collection.collectionequaloptions/#properties","text":"deep","title":"Properties"},{"location":"api/interfaces/collection.collectionequaloptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/collection.collectionequaloptions/#deep","text":"\u2022 Optional deep : boolean","title":"deep"},{"location":"api/interfaces/collection.collectionfilteroptions/","text":"Discordoo / Modules / collection / CollectionFilterOptions Interface: CollectionFilterOptions # collection .CollectionFilterOptions Table of contents # Properties # return Properties # return # \u2022 Optional return : \"collection\" | \"map\" | \"array\" Defined in # src/collection/interfaces/CollectionFilterOptions.ts:2","title":"CollectionFilterOptions"},{"location":"api/interfaces/collection.collectionfilteroptions/#interface-collectionfilteroptions","text":"collection .CollectionFilterOptions","title":"Interface: CollectionFilterOptions"},{"location":"api/interfaces/collection.collectionfilteroptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/collection.collectionfilteroptions/#properties","text":"return","title":"Properties"},{"location":"api/interfaces/collection.collectionfilteroptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/collection.collectionfilteroptions/#return","text":"\u2022 Optional return : \"collection\" | \"map\" | \"array\"","title":"return"},{"location":"api/interfaces/collection.collectionrandomoptions/","text":"Discordoo / Modules / collection / CollectionRandomOptions Interface: CollectionRandomOptions # collection .CollectionRandomOptions Table of contents # Properties # unique Properties # unique # \u2022 Optional unique : boolean Defined in # src/collection/interfaces/CollectionRandomOptions.ts:2","title":"CollectionRandomOptions"},{"location":"api/interfaces/collection.collectionrandomoptions/#interface-collectionrandomoptions","text":"collection .CollectionRandomOptions","title":"Interface: CollectionRandomOptions"},{"location":"api/interfaces/collection.collectionrandomoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/collection.collectionrandomoptions/#properties","text":"unique","title":"Properties"},{"location":"api/interfaces/collection.collectionrandomoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/collection.collectionrandomoptions/#unique","text":"\u2022 Optional unique : boolean","title":"unique"},{"location":"api/interfaces/core.abstractcacheprovideroptions/","text":"Discordoo / Modules / core / AbstractCacheProviderOptions Interface: AbstractCacheProviderOptions # core .AbstractCacheProviderOptions Hierarchy # AbstractCacheProviderOptions \u21b3 CacheProviderDeleteOptions \u21b3 CacheProviderSizeOptions \u21b3 CacheProviderGetOptions \u21b3 CacheProviderHasOptions \u21b3 CacheProviderSetOptions Table of contents # Properties # shard Properties # shard # \u2022 Optional shard : ShardListResolvable | \"current\" | \"all\" Defined in # src/core/providers/cache/options/AbstractCacheProviderOptions.ts:4","title":"AbstractCacheProviderOptions"},{"location":"api/interfaces/core.abstractcacheprovideroptions/#interface-abstractcacheprovideroptions","text":"core .AbstractCacheProviderOptions","title":"Interface: AbstractCacheProviderOptions"},{"location":"api/interfaces/core.abstractcacheprovideroptions/#hierarchy","text":"AbstractCacheProviderOptions \u21b3 CacheProviderDeleteOptions \u21b3 CacheProviderSizeOptions \u21b3 CacheProviderGetOptions \u21b3 CacheProviderHasOptions \u21b3 CacheProviderSetOptions","title":"Hierarchy"},{"location":"api/interfaces/core.abstractcacheprovideroptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.abstractcacheprovideroptions/#properties","text":"shard","title":"Properties"},{"location":"api/interfaces/core.abstractcacheprovideroptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.abstractcacheprovideroptions/#shard","text":"\u2022 Optional shard : ShardListResolvable | \"current\" | \"all\"","title":"shard"},{"location":"api/interfaces/core.cacheprovider/","text":"Discordoo / Modules / core / CacheProvider Interface: CacheProvider<K, V> # core .CacheProvider Represents a cache provider. Custom caching modules must implement it note Some implementations may use remote cache, e.g. Redis, so all the methods are async Type parameters # Name Type K unknown V unknown Implemented by # DefaultCacheProvider Table of contents # Methods # delete get has set size Methods # delete # \u25b8 delete ( keyspace , key , options? ): Promise < boolean > Delete a key from cache Parameters # Name Type Description keyspace string keyspace in which to delete key K cache to delete options? CacheProviderDeleteOptions deleting options Returns # Promise < boolean > Defined in # src/core/providers/cache/CacheProvider.ts:36 get # \u25b8 get ( keyspace , key , options? ): Promise < null | V > Get value from key Parameters # Name Type Description keyspace string keyspace in which to search key K key to get value options? CacheProviderGetOptions getting options Returns # Promise < null | V > Defined in # src/core/providers/cache/CacheProvider.ts:19 has # \u25b8 has ( keyspace , key , options? ): Promise < boolean > Check if key exists in cache Parameters # Name Type Description keyspace string keyspace in which to search key K key to check options? CacheProviderHasOptions checking options Returns # Promise < boolean > Defined in # src/core/providers/cache/CacheProvider.ts:44 set # \u25b8 set ( keyspace , key , value , options? ): Promise < CacheProvider < K , V >> Set a key to given value Parameters # Name Type Description keyspace string keyspace in which to set key K key to use value V value to set options? CacheProviderSetOptions setting options Returns # Promise < CacheProvider < K , V >> Defined in # src/core/providers/cache/CacheProvider.ts:28 size # \u25b8 size ( keyspace? , options? ): Promise < number > Get size of cache in keyspace or in all cache Parameters # Name Type Description keyspace? string keyspace in which to search options? CacheProviderSizeOptions calculating options Returns # Promise < number > Defined in # src/core/providers/cache/CacheProvider.ts:51","title":"CacheProvider"},{"location":"api/interfaces/core.cacheprovider/#interface-cacheproviderk-v","text":"core .CacheProvider Represents a cache provider. Custom caching modules must implement it note Some implementations may use remote cache, e.g. Redis, so all the methods are async","title":"Interface: CacheProvider&lt;K, V>"},{"location":"api/interfaces/core.cacheprovider/#type-parameters","text":"Name Type K unknown V unknown","title":"Type parameters"},{"location":"api/interfaces/core.cacheprovider/#implemented-by","text":"DefaultCacheProvider","title":"Implemented by"},{"location":"api/interfaces/core.cacheprovider/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.cacheprovider/#methods","text":"delete get has set size","title":"Methods"},{"location":"api/interfaces/core.cacheprovider/#methods_1","text":"","title":"Methods"},{"location":"api/interfaces/core.cacheprovider/#delete","text":"\u25b8 delete ( keyspace , key , options? ): Promise < boolean > Delete a key from cache","title":"delete"},{"location":"api/interfaces/core.cacheprovider/#get","text":"\u25b8 get ( keyspace , key , options? ): Promise < null | V > Get value from key","title":"get"},{"location":"api/interfaces/core.cacheprovider/#has","text":"\u25b8 has ( keyspace , key , options? ): Promise < boolean > Check if key exists in cache","title":"has"},{"location":"api/interfaces/core.cacheprovider/#set","text":"\u25b8 set ( keyspace , key , value , options? ): Promise < CacheProvider < K , V >> Set a key to given value","title":"set"},{"location":"api/interfaces/core.cacheprovider/#size","text":"\u25b8 size ( keyspace? , options? ): Promise < number > Get size of cache in keyspace or in all cache","title":"size"},{"location":"api/interfaces/core.cacheproviderdeleteoptions/","text":"Discordoo / Modules / core / CacheProviderDeleteOptions Interface: CacheProviderDeleteOptions # core .CacheProviderDeleteOptions Hierarchy # AbstractCacheProviderOptions \u21b3 CacheProviderDeleteOptions Table of contents # Properties # shard Properties # shard # \u2022 Optional shard : ShardListResolvable | \"current\" | \"all\" Inherited from # AbstractCacheProviderOptions . shard Defined in # src/core/providers/cache/options/AbstractCacheProviderOptions.ts:4","title":"CacheProviderDeleteOptions"},{"location":"api/interfaces/core.cacheproviderdeleteoptions/#interface-cacheproviderdeleteoptions","text":"core .CacheProviderDeleteOptions","title":"Interface: CacheProviderDeleteOptions"},{"location":"api/interfaces/core.cacheproviderdeleteoptions/#hierarchy","text":"AbstractCacheProviderOptions \u21b3 CacheProviderDeleteOptions","title":"Hierarchy"},{"location":"api/interfaces/core.cacheproviderdeleteoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.cacheproviderdeleteoptions/#properties","text":"shard","title":"Properties"},{"location":"api/interfaces/core.cacheproviderdeleteoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.cacheproviderdeleteoptions/#shard","text":"\u2022 Optional shard : ShardListResolvable | \"current\" | \"all\"","title":"shard"},{"location":"api/interfaces/core.cacheprovidergetoptions/","text":"Discordoo / Modules / core / CacheProviderGetOptions Interface: CacheProviderGetOptions # core .CacheProviderGetOptions Hierarchy # AbstractCacheProviderOptions \u21b3 CacheProviderGetOptions Table of contents # Properties # shard Properties # shard # \u2022 Optional shard : ShardListResolvable | \"current\" | \"all\" Inherited from # AbstractCacheProviderOptions . shard Defined in # src/core/providers/cache/options/AbstractCacheProviderOptions.ts:4","title":"CacheProviderGetOptions"},{"location":"api/interfaces/core.cacheprovidergetoptions/#interface-cacheprovidergetoptions","text":"core .CacheProviderGetOptions","title":"Interface: CacheProviderGetOptions"},{"location":"api/interfaces/core.cacheprovidergetoptions/#hierarchy","text":"AbstractCacheProviderOptions \u21b3 CacheProviderGetOptions","title":"Hierarchy"},{"location":"api/interfaces/core.cacheprovidergetoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.cacheprovidergetoptions/#properties","text":"shard","title":"Properties"},{"location":"api/interfaces/core.cacheprovidergetoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.cacheprovidergetoptions/#shard","text":"\u2022 Optional shard : ShardListResolvable | \"current\" | \"all\"","title":"shard"},{"location":"api/interfaces/core.cacheproviderhasoptions/","text":"Discordoo / Modules / core / CacheProviderHasOptions Interface: CacheProviderHasOptions # core .CacheProviderHasOptions Hierarchy # AbstractCacheProviderOptions \u21b3 CacheProviderHasOptions Table of contents # Properties # shard Properties # shard # \u2022 Optional shard : ShardListResolvable | \"current\" | \"all\" Inherited from # AbstractCacheProviderOptions . shard Defined in # src/core/providers/cache/options/AbstractCacheProviderOptions.ts:4","title":"CacheProviderHasOptions"},{"location":"api/interfaces/core.cacheproviderhasoptions/#interface-cacheproviderhasoptions","text":"core .CacheProviderHasOptions","title":"Interface: CacheProviderHasOptions"},{"location":"api/interfaces/core.cacheproviderhasoptions/#hierarchy","text":"AbstractCacheProviderOptions \u21b3 CacheProviderHasOptions","title":"Hierarchy"},{"location":"api/interfaces/core.cacheproviderhasoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.cacheproviderhasoptions/#properties","text":"shard","title":"Properties"},{"location":"api/interfaces/core.cacheproviderhasoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.cacheproviderhasoptions/#shard","text":"\u2022 Optional shard : ShardListResolvable | \"current\" | \"all\"","title":"shard"},{"location":"api/interfaces/core.cacheprovidersetoptions/","text":"Discordoo / Modules / core / CacheProviderSetOptions Interface: CacheProviderSetOptions # core .CacheProviderSetOptions Hierarchy # AbstractCacheProviderOptions \u21b3 CacheProviderSetOptions Table of contents # Properties # shard Properties # shard # \u2022 Optional shard : ShardListResolvable | \"current\" | \"all\" Inherited from # AbstractCacheProviderOptions . shard Defined in # src/core/providers/cache/options/AbstractCacheProviderOptions.ts:4","title":"CacheProviderSetOptions"},{"location":"api/interfaces/core.cacheprovidersetoptions/#interface-cacheprovidersetoptions","text":"core .CacheProviderSetOptions","title":"Interface: CacheProviderSetOptions"},{"location":"api/interfaces/core.cacheprovidersetoptions/#hierarchy","text":"AbstractCacheProviderOptions \u21b3 CacheProviderSetOptions","title":"Hierarchy"},{"location":"api/interfaces/core.cacheprovidersetoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.cacheprovidersetoptions/#properties","text":"shard","title":"Properties"},{"location":"api/interfaces/core.cacheprovidersetoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.cacheprovidersetoptions/#shard","text":"\u2022 Optional shard : ShardListResolvable | \"current\" | \"all\"","title":"shard"},{"location":"api/interfaces/core.cacheprovidersizeoptions/","text":"Discordoo / Modules / core / CacheProviderSizeOptions Interface: CacheProviderSizeOptions # core .CacheProviderSizeOptions Hierarchy # AbstractCacheProviderOptions \u21b3 CacheProviderSizeOptions Table of contents # Properties # shard Properties # shard # \u2022 Optional shard : ShardListResolvable | \"current\" | \"all\" Inherited from # AbstractCacheProviderOptions . shard Defined in # src/core/providers/cache/options/AbstractCacheProviderOptions.ts:4","title":"CacheProviderSizeOptions"},{"location":"api/interfaces/core.cacheprovidersizeoptions/#interface-cacheprovidersizeoptions","text":"core .CacheProviderSizeOptions","title":"Interface: CacheProviderSizeOptions"},{"location":"api/interfaces/core.cacheprovidersizeoptions/#hierarchy","text":"AbstractCacheProviderOptions \u21b3 CacheProviderSizeOptions","title":"Hierarchy"},{"location":"api/interfaces/core.cacheprovidersizeoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.cacheprovidersizeoptions/#properties","text":"shard","title":"Properties"},{"location":"api/interfaces/core.cacheprovidersizeoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.cacheprovidersizeoptions/#shard","text":"\u2022 Optional shard : ShardListResolvable | \"current\" | \"all\"","title":"shard"},{"location":"api/interfaces/core.clienteventshandlers/","text":"Discordoo / Modules / core / ClientEventsHandlers Interface: ClientEventsHandlers # core .ClientEventsHandlers Client events Table of contents # Properties # ready Properties # ready # \u2022 ready : () => unknown Type declaration # \u25b8 (): unknown Emitted once the client is ready Returns # unknown Defined in # src/core/client/ClientEventsHandlers.ts:5","title":"ClientEventsHandlers"},{"location":"api/interfaces/core.clienteventshandlers/#interface-clienteventshandlers","text":"core .ClientEventsHandlers Client events","title":"Interface: ClientEventsHandlers"},{"location":"api/interfaces/core.clienteventshandlers/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.clienteventshandlers/#properties","text":"ready","title":"Properties"},{"location":"api/interfaces/core.clienteventshandlers/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.clienteventshandlers/#ready","text":"\u2022 ready : () => unknown","title":"ready"},{"location":"api/interfaces/core.clientinternals/","text":"Discordoo / Modules / core / ClientInternals Interface: ClientInternals<ClientStack> # core .ClientInternals Type parameters # Name Type ClientStack extends DefaultClientStack DefaultClientStack Table of contents # Properties # cache env gateway ipc rest Properties # cache # \u2022 cache : ClientStack [ \"cache\" ] CacheProvider used by this client Defined in # src/core/client/ClientInternals.ts:12 env # \u2022 env : ShardingClientEnvironment Sharding Environment Defined in # src/core/client/ClientInternals.ts:18 gateway # \u2022 gateway : ClientStack [ \"gateway\" ] GatewayProvider used by this client Defined in # src/core/client/ClientInternals.ts:15 ipc # \u2022 ipc : ClientStack [ \"ipc\" ] Inter-process communication server used by this client Defined in # src/core/client/ClientInternals.ts:6 rest # \u2022 rest : ClientStack [ \"rest\" ] RESTProvider used by this client Defined in # src/core/client/ClientInternals.ts:9","title":"ClientInternals"},{"location":"api/interfaces/core.clientinternals/#interface-clientinternalsclientstack","text":"core .ClientInternals","title":"Interface: ClientInternals&lt;ClientStack>"},{"location":"api/interfaces/core.clientinternals/#type-parameters","text":"Name Type ClientStack extends DefaultClientStack DefaultClientStack","title":"Type parameters"},{"location":"api/interfaces/core.clientinternals/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.clientinternals/#properties","text":"cache env gateway ipc rest","title":"Properties"},{"location":"api/interfaces/core.clientinternals/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.clientinternals/#cache","text":"\u2022 cache : ClientStack [ \"cache\" ] CacheProvider used by this client","title":"cache"},{"location":"api/interfaces/core.clientinternals/#env","text":"\u2022 env : ShardingClientEnvironment Sharding Environment","title":"env"},{"location":"api/interfaces/core.clientinternals/#gateway","text":"\u2022 gateway : ClientStack [ \"gateway\" ] GatewayProvider used by this client","title":"gateway"},{"location":"api/interfaces/core.clientinternals/#ipc","text":"\u2022 ipc : ClientStack [ \"ipc\" ] Inter-process communication server used by this client","title":"ipc"},{"location":"api/interfaces/core.clientinternals/#rest","text":"\u2022 rest : ClientStack [ \"rest\" ] RESTProvider used by this client","title":"rest"},{"location":"api/interfaces/core.clientoptions/","text":"Discordoo / Modules / core / ClientOptions Interface: ClientOptions<CustomOptions> # core .ClientOptions Type parameters # Name Type CustomOptions any Table of contents # Properties # custom gateway ipc providers rest Properties # custom # \u2022 Optional custom : CustomOptions Defined in # src/core/client/ClientOptions.ts:12 gateway # \u2022 Optional gateway : Optional < GatewayOptions , \"token\" | \"intents\" | \"properties\" > Defined in # src/core/client/ClientOptions.ts:9 ipc # \u2022 Optional ipc : Optional < IpcServerOptions , \"id\" | \"managerIpcId\" | \"shardId\" > Defined in # src/core/client/ClientOptions.ts:11 providers # \u2022 Optional providers : ProviderOption [] Defined in # src/core/client/ClientOptions.ts:8 rest # \u2022 Optional rest : any Defined in # src/core/client/ClientOptions.ts:10","title":"ClientOptions"},{"location":"api/interfaces/core.clientoptions/#interface-clientoptionscustomoptions","text":"core .ClientOptions","title":"Interface: ClientOptions&lt;CustomOptions>"},{"location":"api/interfaces/core.clientoptions/#type-parameters","text":"Name Type CustomOptions any","title":"Type parameters"},{"location":"api/interfaces/core.clientoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.clientoptions/#properties","text":"custom gateway ipc providers rest","title":"Properties"},{"location":"api/interfaces/core.clientoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.clientoptions/#custom","text":"\u2022 Optional custom : CustomOptions","title":"custom"},{"location":"api/interfaces/core.clientoptions/#gateway","text":"\u2022 Optional gateway : Optional < GatewayOptions , \"token\" | \"intents\" | \"properties\" >","title":"gateway"},{"location":"api/interfaces/core.clientoptions/#ipc","text":"\u2022 Optional ipc : Optional < IpcServerOptions , \"id\" | \"managerIpcId\" | \"shardId\" >","title":"ipc"},{"location":"api/interfaces/core.clientoptions/#providers","text":"\u2022 Optional providers : ProviderOption []","title":"providers"},{"location":"api/interfaces/core.clientoptions/#rest","text":"\u2022 Optional rest : any","title":"rest"},{"location":"api/interfaces/core.defaultclientstack/","text":"Discordoo / Modules / core / DefaultClientStack Interface: DefaultClientStack # core .DefaultClientStack Table of contents # Properties # cache events gateway ipc rest Properties # cache # \u2022 cache : CacheProvider < unknown , unknown > Defined in # src/core/client/DefaultClientStack.ts:7 events # \u2022 events : ClientEventsHandlers Defined in # src/core/client/DefaultClientStack.ts:9 gateway # \u2022 gateway : GatewayProvider Defined in # src/core/client/DefaultClientStack.ts:10 ipc # \u2022 ipc : IpcServer Defined in # src/core/client/DefaultClientStack.ts:11 rest # \u2022 rest : any Defined in # src/core/client/DefaultClientStack.ts:8","title":"DefaultClientStack"},{"location":"api/interfaces/core.defaultclientstack/#interface-defaultclientstack","text":"core .DefaultClientStack","title":"Interface: DefaultClientStack"},{"location":"api/interfaces/core.defaultclientstack/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.defaultclientstack/#properties","text":"cache events gateway ipc rest","title":"Properties"},{"location":"api/interfaces/core.defaultclientstack/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.defaultclientstack/#cache","text":"\u2022 cache : CacheProvider < unknown , unknown >","title":"cache"},{"location":"api/interfaces/core.defaultclientstack/#events","text":"\u2022 events : ClientEventsHandlers","title":"events"},{"location":"api/interfaces/core.defaultclientstack/#gateway","text":"\u2022 gateway : GatewayProvider","title":"gateway"},{"location":"api/interfaces/core.defaultclientstack/#ipc","text":"\u2022 ipc : IpcServer","title":"ipc"},{"location":"api/interfaces/core.defaultclientstack/#rest","text":"\u2022 rest : any","title":"rest"},{"location":"api/interfaces/core.gatewayconnectoptions/","text":"Discordoo / Modules / core / GatewayConnectOptions Interface: GatewayConnectOptions # core .GatewayConnectOptions Table of contents # Properties # shards totalShards Properties # shards # \u2022 shards : number [] Defined in # src/core/providers/gateway/options/GatewayConnectOptions.ts:2 totalShards # \u2022 totalShards : number Defined in # src/core/providers/gateway/options/GatewayConnectOptions.ts:3","title":"GatewayConnectOptions"},{"location":"api/interfaces/core.gatewayconnectoptions/#interface-gatewayconnectoptions","text":"core .GatewayConnectOptions","title":"Interface: GatewayConnectOptions"},{"location":"api/interfaces/core.gatewayconnectoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.gatewayconnectoptions/#properties","text":"shards totalShards","title":"Properties"},{"location":"api/interfaces/core.gatewayconnectoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.gatewayconnectoptions/#shards","text":"\u2022 shards : number []","title":"shards"},{"location":"api/interfaces/core.gatewayconnectoptions/#totalshards","text":"\u2022 totalShards : number","title":"totalShards"},{"location":"api/interfaces/core.gatewayprovider/","text":"Discordoo / Modules / core / GatewayProvider Interface: GatewayProvider # core .GatewayProvider Implemented by # DefaultGatewayProvider Table of contents # Methods # connect disconnect Methods # connect # \u25b8 connect ( options? ): Promise < unknown > Parameters # Name Type options? GatewayConnectOptions Returns # Promise < unknown > Defined in # src/core/providers/gateway/GatewayProvider.ts:4 disconnect # \u25b8 disconnect (): Promise < unknown > Returns # Promise < unknown > Defined in # src/core/providers/gateway/GatewayProvider.ts:6","title":"GatewayProvider"},{"location":"api/interfaces/core.gatewayprovider/#interface-gatewayprovider","text":"core .GatewayProvider","title":"Interface: GatewayProvider"},{"location":"api/interfaces/core.gatewayprovider/#implemented-by","text":"DefaultGatewayProvider","title":"Implemented by"},{"location":"api/interfaces/core.gatewayprovider/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.gatewayprovider/#methods","text":"connect disconnect","title":"Methods"},{"location":"api/interfaces/core.gatewayprovider/#methods_1","text":"","title":"Methods"},{"location":"api/interfaces/core.gatewayprovider/#connect","text":"\u25b8 connect ( options? ): Promise < unknown >","title":"connect"},{"location":"api/interfaces/core.gatewayprovider/#disconnect","text":"\u25b8 disconnect (): Promise < unknown >","title":"disconnect"},{"location":"api/interfaces/core.providerconstructor/","text":"Discordoo / Modules / core / ProviderConstructor Interface: ProviderConstructor<Provider> # core .ProviderConstructor Type parameters # Name Provider Table of contents # Constructors # constructor Constructors # constructor # \u2022 new ProviderConstructor ( client , ... options ) Parameters # Name Type client Client < DefaultClientStack > ...options any [] Defined in # src/core/providers/ProviderConstructor.ts:3","title":"ProviderConstructor"},{"location":"api/interfaces/core.providerconstructor/#interface-providerconstructorprovider","text":"core .ProviderConstructor","title":"Interface: ProviderConstructor&lt;Provider>"},{"location":"api/interfaces/core.providerconstructor/#type-parameters","text":"Name Provider","title":"Type parameters"},{"location":"api/interfaces/core.providerconstructor/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.providerconstructor/#constructors","text":"constructor","title":"Constructors"},{"location":"api/interfaces/core.providerconstructor/#constructors_1","text":"","title":"Constructors"},{"location":"api/interfaces/core.providerconstructor/#constructor","text":"\u2022 new ProviderConstructor ( client , ... options )","title":"constructor"},{"location":"api/interfaces/core.provideroption/","text":"Discordoo / Modules / core / ProviderOption Interface: ProviderOption # core .ProviderOption Table of contents # Properties # provide useClass useOptions Properties # provide # \u2022 provide : DiscordooProviders Defined in # src/core/providers/ProviderOption.ts:5 useClass # \u2022 useClass : ProviderConstructor < any > Defined in # src/core/providers/ProviderOption.ts:6 useOptions # \u2022 useOptions : any Defined in # src/core/providers/ProviderOption.ts:7","title":"ProviderOption"},{"location":"api/interfaces/core.provideroption/#interface-provideroption","text":"core .ProviderOption","title":"Interface: ProviderOption"},{"location":"api/interfaces/core.provideroption/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.provideroption/#properties","text":"provide useClass useOptions","title":"Properties"},{"location":"api/interfaces/core.provideroption/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.provideroption/#provide","text":"\u2022 provide : DiscordooProviders","title":"provide"},{"location":"api/interfaces/core.provideroption/#useclass","text":"\u2022 useClass : ProviderConstructor < any >","title":"useClass"},{"location":"api/interfaces/core.provideroption/#useoptions","text":"\u2022 useOptions : any","title":"useOptions"},{"location":"api/interfaces/gateway.gatewayoptions/","text":"Discordoo / Modules / gateway / GatewayOptions Interface: GatewayOptions # gateway .GatewayOptions Table of contents # Properties # compress encoding eventPeaksSmoothingMultiplier intents largeThreshold maxEventsPerSecond maxShards presence properties shards smoothEventsPeaks spawnDelay token totalShards url useReconnectOnly version Properties # compress # \u2022 Optional compress : boolean Whether this connection supports compression of packets. default false Defined in # src/gateway/interfaces/GatewayOptions.ts:22 encoding # \u2022 Optional encoding : \"json\" | \"etf\" Encoding to use in WebSocket connection. Detected automatically (etf when found erlpack, else json), but can be overwritten using this option. default json Defined in # src/gateway/interfaces/GatewayOptions.ts:92 eventPeaksSmoothingMultiplier # \u2022 Optional eventPeaksSmoothingMultiplier : number Use custom multiplier for smoothing events peaks. When multiplier is 2 (default), library will double the number of events allowed per second every smooth: from 100 to 200, from 200 to 400, 800, 1600 etc. When multiplier is 1.5 for example, library will increase the number of events allowed per second by 1.5: from 100 to 150, from 150 to 225, from 225 to 337.5 (338), 507, 760.5 (761) etc. default 2 Defined in # src/gateway/interfaces/GatewayOptions.ts:123 intents # \u2022 intents : number The Gateway Intents you wish to receive see https://discord.com/developers/docs/topics/gateway#gateway-intents default 32509, all intents expect privileged Defined in # src/gateway/interfaces/GatewayOptions.ts:44 largeThreshold # \u2022 Optional largeThreshold : number Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list. default 50 Defined in # src/gateway/interfaces/GatewayOptions.ts:30 maxEventsPerSecond # \u2022 Optional maxEventsPerSecond : number Number of events which library can emit in 1 second. If limit is reached, library will add events to queue and will emit them later. default Infinity Defined in # src/gateway/interfaces/GatewayOptions.ts:131 maxShards # \u2022 Optional maxShards : number Maximum amount of shards that can be spawned by the WebSocketManager . Defined in # src/gateway/interfaces/GatewayOptions.ts:57 presence # \u2022 Optional presence : GatewayPresenceUpdateData Presence structure for initial presence information. see https://discord.com/developers/docs/topics/gateway#update-status Defined in # src/gateway/interfaces/GatewayOptions.ts:37 properties # \u2022 properties : GatewayIdentifyProperties Connection properties. see https://discord.com/developers/docs/topics/gateway#identify-identify-connection-properties Defined in # src/gateway/interfaces/GatewayOptions.ts:15 shards # \u2022 Optional shards : number | number [] | \"auto\" If number is provided - WS will create X shards from 0 to X-1 (3 = 0, 1, 2). If auto is provided, shards amount will be fetched from Discord. If array of numbers is provided, the library will interpret it as IDs of shards to create. default auto Defined in # src/gateway/interfaces/GatewayOptions.ts:53 smoothEventsPeaks # \u2022 Optional smoothEventsPeaks : boolean Smooth events peaks. When we usually receive 100 events per second, and suddenly we got 10000 events per second, library will emit these events gradual: from 100 events/s, to 200, then to 400, 800, 1600 etc. This may be helpful to smooth out the load on the server and on the rate limits. default false Defined in # src/gateway/interfaces/GatewayOptions.ts:112 spawnDelay # \u2022 Optional spawnDelay : number Waiting time between shards launches, in ms. default calculates from 5000 / session_start_limit.max_concurrency Defined in # src/gateway/interfaces/GatewayOptions.ts:84 token # \u2022 token : string Authentication token. Defined in # src/gateway/interfaces/GatewayOptions.ts:9 totalShards # \u2022 Optional totalShards : number Used by the library internals for correct interprocess sharding. Can be used for client clustering. Defined in # src/gateway/interfaces/GatewayOptions.ts:63 url # \u2022 Optional url : string Gateway URL. default wss://gateway.discord.gg/ Defined in # src/gateway/interfaces/GatewayOptions.ts:77 useReconnectOnly # \u2022 Optional useReconnectOnly : boolean Use reconnect instead of resume, because when client resumed Discord will send a ton of missed events in one second and this may lead to violations of the rate limits. see https://discord.com/developers/docs/topics/gateway#resuming default false Defined in # src/gateway/interfaces/GatewayOptions.ts:102 version # \u2022 Optional version : number Version of gateway to use. default 9 Defined in # src/gateway/interfaces/GatewayOptions.ts:70","title":"GatewayOptions"},{"location":"api/interfaces/gateway.gatewayoptions/#interface-gatewayoptions","text":"gateway .GatewayOptions","title":"Interface: GatewayOptions"},{"location":"api/interfaces/gateway.gatewayoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.gatewayoptions/#properties","text":"compress encoding eventPeaksSmoothingMultiplier intents largeThreshold maxEventsPerSecond maxShards presence properties shards smoothEventsPeaks spawnDelay token totalShards url useReconnectOnly version","title":"Properties"},{"location":"api/interfaces/gateway.gatewayoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.gatewayoptions/#compress","text":"\u2022 Optional compress : boolean Whether this connection supports compression of packets. default false","title":"compress"},{"location":"api/interfaces/gateway.gatewayoptions/#encoding","text":"\u2022 Optional encoding : \"json\" | \"etf\" Encoding to use in WebSocket connection. Detected automatically (etf when found erlpack, else json), but can be overwritten using this option. default json","title":"encoding"},{"location":"api/interfaces/gateway.gatewayoptions/#eventpeakssmoothingmultiplier","text":"\u2022 Optional eventPeaksSmoothingMultiplier : number Use custom multiplier for smoothing events peaks. When multiplier is 2 (default), library will double the number of events allowed per second every smooth: from 100 to 200, from 200 to 400, 800, 1600 etc. When multiplier is 1.5 for example, library will increase the number of events allowed per second by 1.5: from 100 to 150, from 150 to 225, from 225 to 337.5 (338), 507, 760.5 (761) etc. default 2","title":"eventPeaksSmoothingMultiplier"},{"location":"api/interfaces/gateway.gatewayoptions/#intents","text":"\u2022 intents : number The Gateway Intents you wish to receive see https://discord.com/developers/docs/topics/gateway#gateway-intents default 32509, all intents expect privileged","title":"intents"},{"location":"api/interfaces/gateway.gatewayoptions/#largethreshold","text":"\u2022 Optional largeThreshold : number Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list. default 50","title":"largeThreshold"},{"location":"api/interfaces/gateway.gatewayoptions/#maxeventspersecond","text":"\u2022 Optional maxEventsPerSecond : number Number of events which library can emit in 1 second. If limit is reached, library will add events to queue and will emit them later. default Infinity","title":"maxEventsPerSecond"},{"location":"api/interfaces/gateway.gatewayoptions/#maxshards","text":"\u2022 Optional maxShards : number Maximum amount of shards that can be spawned by the WebSocketManager .","title":"maxShards"},{"location":"api/interfaces/gateway.gatewayoptions/#presence","text":"\u2022 Optional presence : GatewayPresenceUpdateData Presence structure for initial presence information. see https://discord.com/developers/docs/topics/gateway#update-status","title":"presence"},{"location":"api/interfaces/gateway.gatewayoptions/#properties_2","text":"\u2022 properties : GatewayIdentifyProperties Connection properties. see https://discord.com/developers/docs/topics/gateway#identify-identify-connection-properties","title":"properties"},{"location":"api/interfaces/gateway.gatewayoptions/#shards","text":"\u2022 Optional shards : number | number [] | \"auto\" If number is provided - WS will create X shards from 0 to X-1 (3 = 0, 1, 2). If auto is provided, shards amount will be fetched from Discord. If array of numbers is provided, the library will interpret it as IDs of shards to create. default auto","title":"shards"},{"location":"api/interfaces/gateway.gatewayoptions/#smootheventspeaks","text":"\u2022 Optional smoothEventsPeaks : boolean Smooth events peaks. When we usually receive 100 events per second, and suddenly we got 10000 events per second, library will emit these events gradual: from 100 events/s, to 200, then to 400, 800, 1600 etc. This may be helpful to smooth out the load on the server and on the rate limits. default false","title":"smoothEventsPeaks"},{"location":"api/interfaces/gateway.gatewayoptions/#spawndelay","text":"\u2022 Optional spawnDelay : number Waiting time between shards launches, in ms. default calculates from 5000 / session_start_limit.max_concurrency","title":"spawnDelay"},{"location":"api/interfaces/gateway.gatewayoptions/#token","text":"\u2022 token : string Authentication token.","title":"token"},{"location":"api/interfaces/gateway.gatewayoptions/#totalshards","text":"\u2022 Optional totalShards : number Used by the library internals for correct interprocess sharding. Can be used for client clustering.","title":"totalShards"},{"location":"api/interfaces/gateway.gatewayoptions/#url","text":"\u2022 Optional url : string Gateway URL. default wss://gateway.discord.gg/","title":"url"},{"location":"api/interfaces/gateway.gatewayoptions/#usereconnectonly","text":"\u2022 Optional useReconnectOnly : boolean Use reconnect instead of resume, because when client resumed Discord will send a ton of missed events in one second and this may lead to violations of the rate limits. see https://discord.com/developers/docs/topics/gateway#resuming default false","title":"useReconnectOnly"},{"location":"api/interfaces/gateway.gatewayoptions/#version","text":"\u2022 Optional version : number Version of gateway to use. default 9","title":"version"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/","text":"Discordoo / Modules / gateway / WebSocketClientDestroyOptions Interface: WebSocketClientDestroyOptions # gateway .WebSocketClientDestroyOptions Table of contents # Properties # code reconnect Properties # code # \u2022 Optional code : number Defined in # src/gateway/interfaces/WebSocketClientDestroyOptions.ts:2 reconnect # \u2022 Optional reconnect : boolean Defined in # src/gateway/interfaces/WebSocketClientDestroyOptions.ts:3","title":"WebSocketClientDestroyOptions"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#interface-websocketclientdestroyoptions","text":"gateway .WebSocketClientDestroyOptions","title":"Interface: WebSocketClientDestroyOptions"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#properties","text":"code reconnect","title":"Properties"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#code","text":"\u2022 Optional code : number","title":"code"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#reconnect","text":"\u2022 Optional reconnect : boolean","title":"reconnect"},{"location":"api/interfaces/gateway.websocketclientevents/","text":"Discordoo / Modules / gateway / WebSocketClientEvents Interface: WebSocketClientEvents # gateway .WebSocketClientEvents Table of contents # Properties # RECONNECT_ME WS_CLOSED WS_CLOSE_ERROR WS_ERROR WS_OPEN WS_OPEN_ERROR WS_SEND_ERROR destroyed invalidSession ready resumed Properties # RECONNECT_ME # \u2022 RECONNECT_ME : ( destroyed? : boolean ) => unknown Type declaration # \u25b8 ( destroyed? ): unknown Parameters # Name Type destroyed? boolean Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:13 WS_CLOSED # \u2022 WS_CLOSED : ( code : CloseEvent ) => unknown Type declaration # \u25b8 ( code ): unknown Parameters # Name Type code CloseEvent Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:11 WS_CLOSE_ERROR # \u2022 WS_CLOSE_ERROR : ( error : Error ) => unknown Type declaration # \u25b8 ( error ): unknown Parameters # Name Type error Error Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:7 WS_ERROR # \u2022 WS_ERROR : ( error : ErrorEvent ) => unknown Type declaration # \u25b8 ( error ): unknown Parameters # Name Type error ErrorEvent Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:9 WS_OPEN # \u2022 WS_OPEN : ( event : OpenEvent ) => unknown Type declaration # \u25b8 ( event ): unknown Parameters # Name Type event OpenEvent Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:10 WS_OPEN_ERROR # \u2022 WS_OPEN_ERROR : ( error : Error ) => unknown Type declaration # \u25b8 ( error ): unknown Parameters # Name Type error Error Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:6 WS_SEND_ERROR # \u2022 WS_SEND_ERROR : ( error : Error , data : WebSocketSendPayload ) => unknown Type declaration # \u25b8 ( error , data ): unknown Parameters # Name Type error Error data WebSocketSendPayload Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:5 destroyed # \u2022 destroyed : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:17 invalidSession # \u2022 invalidSession : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:18 ready # \u2022 ready : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:15 resumed # \u2022 resumed : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:16","title":"WebSocketClientEvents"},{"location":"api/interfaces/gateway.websocketclientevents/#interface-websocketclientevents","text":"gateway .WebSocketClientEvents","title":"Interface: WebSocketClientEvents"},{"location":"api/interfaces/gateway.websocketclientevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.websocketclientevents/#properties","text":"RECONNECT_ME WS_CLOSED WS_CLOSE_ERROR WS_ERROR WS_OPEN WS_OPEN_ERROR WS_SEND_ERROR destroyed invalidSession ready resumed","title":"Properties"},{"location":"api/interfaces/gateway.websocketclientevents/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.websocketclientevents/#reconnect_me","text":"\u2022 RECONNECT_ME : ( destroyed? : boolean ) => unknown","title":"RECONNECT_ME"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_closed","text":"\u2022 WS_CLOSED : ( code : CloseEvent ) => unknown","title":"WS_CLOSED"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_close_error","text":"\u2022 WS_CLOSE_ERROR : ( error : Error ) => unknown","title":"WS_CLOSE_ERROR"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_error","text":"\u2022 WS_ERROR : ( error : ErrorEvent ) => unknown","title":"WS_ERROR"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_open","text":"\u2022 WS_OPEN : ( event : OpenEvent ) => unknown","title":"WS_OPEN"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_open_error","text":"\u2022 WS_OPEN_ERROR : ( error : Error ) => unknown","title":"WS_OPEN_ERROR"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_send_error","text":"\u2022 WS_SEND_ERROR : ( error : Error , data : WebSocketSendPayload ) => unknown","title":"WS_SEND_ERROR"},{"location":"api/interfaces/gateway.websocketclientevents/#destroyed","text":"\u2022 destroyed : () => unknown","title":"destroyed"},{"location":"api/interfaces/gateway.websocketclientevents/#invalidsession","text":"\u2022 invalidSession : () => unknown","title":"invalidSession"},{"location":"api/interfaces/gateway.websocketclientevents/#ready","text":"\u2022 ready : () => unknown","title":"ready"},{"location":"api/interfaces/gateway.websocketclientevents/#resumed","text":"\u2022 resumed : () => unknown","title":"resumed"},{"location":"api/interfaces/gateway.websocketmanagerevents/","text":"Discordoo / Modules / gateway / WebSocketManagerEvents Interface: WebSocketManagerEvents # gateway .WebSocketManagerEvents Table of contents # Properties # connected disconnected message shardSpawn Properties # connected # \u2022 connected : ( id : number ) => void Type declaration # \u25b8 ( id ): void Parameters # Name Type id number Returns # void Defined in # src/gateway/interfaces/WebSocketManagerEvents.ts:5 disconnected # \u2022 disconnected : ( id : number ) => void Type declaration # \u25b8 ( id ): void Parameters # Name Type id number Returns # void Defined in # src/gateway/interfaces/WebSocketManagerEvents.ts:6 message # \u2022 message : ( msg : GatewayReceivePayload , id : number ) => void Type declaration # \u25b8 ( msg , id ): void Parameters # Name Type msg GatewayReceivePayload id number Returns # void Defined in # src/gateway/interfaces/WebSocketManagerEvents.ts:4 shardSpawn # \u2022 shardSpawn : ( id : number ) => void Type declaration # \u25b8 ( id ): void Parameters # Name Type id number Returns # void Defined in # src/gateway/interfaces/WebSocketManagerEvents.ts:7","title":"WebSocketManagerEvents"},{"location":"api/interfaces/gateway.websocketmanagerevents/#interface-websocketmanagerevents","text":"gateway .WebSocketManagerEvents","title":"Interface: WebSocketManagerEvents"},{"location":"api/interfaces/gateway.websocketmanagerevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.websocketmanagerevents/#properties","text":"connected disconnected message shardSpawn","title":"Properties"},{"location":"api/interfaces/gateway.websocketmanagerevents/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.websocketmanagerevents/#connected","text":"\u2022 connected : ( id : number ) => void","title":"connected"},{"location":"api/interfaces/gateway.websocketmanagerevents/#disconnected","text":"\u2022 disconnected : ( id : number ) => void","title":"disconnected"},{"location":"api/interfaces/gateway.websocketmanagerevents/#message","text":"\u2022 message : ( msg : GatewayReceivePayload , id : number ) => void","title":"message"},{"location":"api/interfaces/gateway.websocketmanagerevents/#shardspawn","text":"\u2022 shardSpawn : ( id : number ) => void","title":"shardSpawn"},{"location":"api/interfaces/gateway.websocketmanagerlimits/","text":"Discordoo / Modules / gateway / WebSocketManagerLimits Interface: WebSocketManagerLimits # gateway .WebSocketManagerLimits Table of contents # Properties # events Properties # events # \u2022 events : Object Type declaration # Name Type emittedLastSecond number emittedThisSecond number maximumPerSecond number queue any [] Defined in # src/gateway/interfaces/WebSocketManagerLimits.ts:2","title":"WebSocketManagerLimits"},{"location":"api/interfaces/gateway.websocketmanagerlimits/#interface-websocketmanagerlimits","text":"gateway .WebSocketManagerLimits","title":"Interface: WebSocketManagerLimits"},{"location":"api/interfaces/gateway.websocketmanagerlimits/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.websocketmanagerlimits/#properties","text":"events","title":"Properties"},{"location":"api/interfaces/gateway.websocketmanagerlimits/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.websocketmanagerlimits/#events","text":"\u2022 events : Object","title":"events"},{"location":"api/interfaces/gateway.websocketpacket/","text":"Discordoo / Modules / gateway / WebSocketPacket Interface: WebSocketPacket # gateway .WebSocketPacket Table of contents # Properties # d op s t Properties # d # \u2022 d : any Defined in # src/gateway/interfaces/WebSocketPacket.ts:6 op # \u2022 op : WebSocketOPCodes Defined in # src/gateway/interfaces/WebSocketPacket.ts:5 s # \u2022 s : undefined | number Defined in # src/gateway/interfaces/WebSocketPacket.ts:7 t # \u2022 t : GatewayDispatchEvents Defined in # src/gateway/interfaces/WebSocketPacket.ts:8","title":"WebSocketPacket"},{"location":"api/interfaces/gateway.websocketpacket/#interface-websocketpacket","text":"gateway .WebSocketPacket","title":"Interface: WebSocketPacket"},{"location":"api/interfaces/gateway.websocketpacket/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.websocketpacket/#properties","text":"d op s t","title":"Properties"},{"location":"api/interfaces/gateway.websocketpacket/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.websocketpacket/#d","text":"\u2022 d : any","title":"d"},{"location":"api/interfaces/gateway.websocketpacket/#op","text":"\u2022 op : WebSocketOPCodes","title":"op"},{"location":"api/interfaces/gateway.websocketpacket/#s","text":"\u2022 s : undefined | number","title":"s"},{"location":"api/interfaces/gateway.websocketpacket/#t","text":"\u2022 t : GatewayDispatchEvents","title":"t"},{"location":"api/interfaces/sharding.childshardingmanageroptions/","text":"Discordoo / Modules / sharding / ChildShardingManagerOptions Interface: ChildShardingManagerOptions # sharding .ChildShardingManagerOptions Hierarchy # Omit < ShardingManagerOptions , \"machines\" | \"mode\" > \u21b3 ChildShardingManagerOptions Table of contents # Properties # clusters file mode processes shards type workers Properties # clusters # \u2022 Optional clusters : ClustersShardingOptions Inherited from # Omit.clusters Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:17 file # \u2022 file : string Inherited from # Omit.file Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:12 mode # \u2022 mode : PartialShardingModes Defined in # src/sharding/interfaces/manager/options/ChildShardingManagerOptions.ts:5 processes # \u2022 Optional processes : ProcessesShardingOptions Inherited from # Omit.processes Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:15 shards # \u2022 shards : ShardListResolvable Inherited from # Omit.shards Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:11 type # \u2022 Optional type : ShardingManagerTypes Inherited from # Omit.type Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:10 workers # \u2022 Optional workers : WorkersShardingOptions Inherited from # Omit.workers Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:16","title":"ChildShardingManagerOptions"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#interface-childshardingmanageroptions","text":"sharding .ChildShardingManagerOptions","title":"Interface: ChildShardingManagerOptions"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#hierarchy","text":"Omit < ShardingManagerOptions , \"machines\" | \"mode\" > \u21b3 ChildShardingManagerOptions","title":"Hierarchy"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#properties","text":"clusters file mode processes shards type workers","title":"Properties"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#clusters","text":"\u2022 Optional clusters : ClustersShardingOptions","title":"clusters"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#file","text":"\u2022 file : string","title":"file"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#mode","text":"\u2022 mode : PartialShardingModes","title":"mode"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#processes","text":"\u2022 Optional processes : ProcessesShardingOptions","title":"processes"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#shards","text":"\u2022 shards : ShardListResolvable","title":"shards"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#type","text":"\u2022 Optional type : ShardingManagerTypes","title":"type"},{"location":"api/interfaces/sharding.childshardingmanageroptions/#workers","text":"\u2022 Optional workers : WorkersShardingOptions","title":"workers"},{"location":"api/interfaces/sharding.clustersshardingoptions/","text":"Discordoo / Modules / sharding / ClustersShardingOptions Interface: ClustersShardingOptions # sharding .ClustersShardingOptions Table of contents # Properties # env shardsPerCluster Properties # env # \u2022 Optional env : Record < string , string > Defined in # src/sharding/interfaces/manager/options/ClustersShardingOptions.ts:3 shardsPerCluster # \u2022 Optional shardsPerCluster : number Defined in # src/sharding/interfaces/manager/options/ClustersShardingOptions.ts:2","title":"ClustersShardingOptions"},{"location":"api/interfaces/sharding.clustersshardingoptions/#interface-clustersshardingoptions","text":"sharding .ClustersShardingOptions","title":"Interface: ClustersShardingOptions"},{"location":"api/interfaces/sharding.clustersshardingoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.clustersshardingoptions/#properties","text":"env shardsPerCluster","title":"Properties"},{"location":"api/interfaces/sharding.clustersshardingoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.clustersshardingoptions/#env","text":"\u2022 Optional env : Record < string , string >","title":"env"},{"location":"api/interfaces/sharding.clustersshardingoptions/#shardspercluster","text":"\u2022 Optional shardsPerCluster : number","title":"shardsPerCluster"},{"location":"api/interfaces/sharding.ipcclientoptions/","text":"Discordoo / Modules / sharding / IpcClientOptions Interface: IpcClientOptions # sharding .IpcClientOptions Table of contents # Properties # config managerId shardId shardIpcId shards tls totalShards Properties # config # \u2022 Optional config : RawIpcConfig Defined in # src/sharding/interfaces/ipc/IpcClientOptions.ts:6 managerId # \u2022 managerId : string Defined in # src/sharding/interfaces/ipc/IpcClientOptions.ts:9 shardId # \u2022 shardId : number Defined in # src/sharding/interfaces/ipc/IpcClientOptions.ts:7 shardIpcId # \u2022 shardIpcId : string Defined in # src/sharding/interfaces/ipc/IpcClientOptions.ts:8 shards # \u2022 shards : number [] Defined in # src/sharding/interfaces/ipc/IpcClientOptions.ts:10 tls # \u2022 Optional tls : IpcClientTlsOptions Defined in # src/sharding/interfaces/ipc/IpcClientOptions.ts:5 totalShards # \u2022 totalShards : number Defined in # src/sharding/interfaces/ipc/IpcClientOptions.ts:11","title":"IpcClientOptions"},{"location":"api/interfaces/sharding.ipcclientoptions/#interface-ipcclientoptions","text":"sharding .IpcClientOptions","title":"Interface: IpcClientOptions"},{"location":"api/interfaces/sharding.ipcclientoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcclientoptions/#properties","text":"config managerId shardId shardIpcId shards tls totalShards","title":"Properties"},{"location":"api/interfaces/sharding.ipcclientoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcclientoptions/#config","text":"\u2022 Optional config : RawIpcConfig","title":"config"},{"location":"api/interfaces/sharding.ipcclientoptions/#managerid","text":"\u2022 managerId : string","title":"managerId"},{"location":"api/interfaces/sharding.ipcclientoptions/#shardid","text":"\u2022 shardId : number","title":"shardId"},{"location":"api/interfaces/sharding.ipcclientoptions/#shardipcid","text":"\u2022 shardIpcId : string","title":"shardIpcId"},{"location":"api/interfaces/sharding.ipcclientoptions/#shards","text":"\u2022 shards : number []","title":"shards"},{"location":"api/interfaces/sharding.ipcclientoptions/#tls","text":"\u2022 Optional tls : IpcClientTlsOptions","title":"tls"},{"location":"api/interfaces/sharding.ipcclientoptions/#totalshards","text":"\u2022 totalShards : number","title":"totalShards"},{"location":"api/interfaces/sharding.ipcclientsendoptions/","text":"Discordoo / Modules / sharding / IpcClientSendOptions Interface: IpcClientSendOptions # sharding .IpcClientSendOptions Table of contents # Properties # connection waitResponse Properties # connection # \u2022 Optional connection : any Defined in # src/sharding/interfaces/ipc/IpcClientSendOptions.ts:3 waitResponse # \u2022 Optional waitResponse : boolean Defined in # src/sharding/interfaces/ipc/IpcClientSendOptions.ts:2","title":"IpcClientSendOptions"},{"location":"api/interfaces/sharding.ipcclientsendoptions/#interface-ipcclientsendoptions","text":"sharding .IpcClientSendOptions","title":"Interface: IpcClientSendOptions"},{"location":"api/interfaces/sharding.ipcclientsendoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcclientsendoptions/#properties","text":"connection waitResponse","title":"Properties"},{"location":"api/interfaces/sharding.ipcclientsendoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcclientsendoptions/#connection","text":"\u2022 Optional connection : any","title":"connection"},{"location":"api/interfaces/sharding.ipcclientsendoptions/#waitresponse","text":"\u2022 Optional waitResponse : boolean","title":"waitResponse"},{"location":"api/interfaces/sharding.ipcpacket/","text":"Discordoo / Modules / sharding / IpcPacket Interface: IpcPacket # sharding .IpcPacket Hierarchy # IpcPacket \u21b3 IpcHelloPacket \u21b3 IpcIdentifyPacket \u21b3 IpcHeartbeatPacket \u21b3 IpcDispatchPacket Table of contents # Properties # d op t Properties # d # \u2022 d : any Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:5 op # \u2022 op : IpcOPCodes Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:4 t # \u2022 Optional t : IpcEvents Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:6","title":"IpcPacket"},{"location":"api/interfaces/sharding.ipcpacket/#interface-ipcpacket","text":"sharding .IpcPacket","title":"Interface: IpcPacket"},{"location":"api/interfaces/sharding.ipcpacket/#hierarchy","text":"IpcPacket \u21b3 IpcHelloPacket \u21b3 IpcIdentifyPacket \u21b3 IpcHeartbeatPacket \u21b3 IpcDispatchPacket","title":"Hierarchy"},{"location":"api/interfaces/sharding.ipcpacket/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcpacket/#properties","text":"d op t","title":"Properties"},{"location":"api/interfaces/sharding.ipcpacket/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcpacket/#d","text":"\u2022 d : any","title":"d"},{"location":"api/interfaces/sharding.ipcpacket/#op","text":"\u2022 op : IpcOPCodes","title":"op"},{"location":"api/interfaces/sharding.ipcpacket/#t","text":"\u2022 Optional t : IpcEvents","title":"t"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/","text":"Discordoo / Modules / sharding / IpcPackets / IpcDispatchPacket Interface: IpcDispatchPacket # sharding . IpcPackets .IpcDispatchPacket Hierarchy # IpcPacket \u21b3 IpcDispatchPacket Table of contents # Properties # d op t Properties # d # \u2022 d : any Overrides # IpcPacket . d Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:33 op # \u2022 op : DISPATCH Overrides # IpcPacket . op Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:32 t # \u2022 t : IpcEvents Overrides # IpcPacket . t Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:34","title":"IpcDispatchPacket"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/#interface-ipcdispatchpacket","text":"sharding . IpcPackets .IpcDispatchPacket","title":"Interface: IpcDispatchPacket"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/#hierarchy","text":"IpcPacket \u21b3 IpcDispatchPacket","title":"Hierarchy"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/#properties","text":"d op t","title":"Properties"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/#d","text":"\u2022 d : any","title":"d"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/#op","text":"\u2022 op : DISPATCH","title":"op"},{"location":"api/interfaces/sharding.ipcpackets.ipcdispatchpacket/#t","text":"\u2022 t : IpcEvents","title":"t"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/","text":"Discordoo / Modules / sharding / IpcPackets / IpcHeartbeatPacket Interface: IpcHeartbeatPacket # sharding . IpcPackets .IpcHeartbeatPacket Hierarchy # IpcPacket \u21b3 IpcHeartbeatPacket Table of contents # Properties # d op t Properties # d # \u2022 d : Object Type declaration # Name Type event_id string id string Overrides # IpcPacket . d Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:25 op # \u2022 op : HEARTBEAT Overrides # IpcPacket . op Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:24 t # \u2022 Optional t : IpcEvents Inherited from # IpcPacket . t Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:6","title":"IpcHeartbeatPacket"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/#interface-ipcheartbeatpacket","text":"sharding . IpcPackets .IpcHeartbeatPacket","title":"Interface: IpcHeartbeatPacket"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/#hierarchy","text":"IpcPacket \u21b3 IpcHeartbeatPacket","title":"Hierarchy"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/#properties","text":"d op t","title":"Properties"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/#d","text":"\u2022 d : Object","title":"d"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/#op","text":"\u2022 op : HEARTBEAT","title":"op"},{"location":"api/interfaces/sharding.ipcpackets.ipcheartbeatpacket/#t","text":"\u2022 Optional t : IpcEvents","title":"t"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/","text":"Discordoo / Modules / sharding / IpcPackets / IpcHelloPacket Interface: IpcHelloPacket # sharding . IpcPackets .IpcHelloPacket Hierarchy # IpcPacket \u21b3 IpcHelloPacket Table of contents # Properties # d op t Properties # d # \u2022 d : Object Type declaration # Name Type event_id string heartbeat_interval number id string shards number [] total_shards number Overrides # IpcPacket . d Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:6 op # \u2022 op : HELLO Overrides # IpcPacket . op Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:5 t # \u2022 Optional t : IpcEvents Inherited from # IpcPacket . t Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:6","title":"IpcHelloPacket"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/#interface-ipchellopacket","text":"sharding . IpcPackets .IpcHelloPacket","title":"Interface: IpcHelloPacket"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/#hierarchy","text":"IpcPacket \u21b3 IpcHelloPacket","title":"Hierarchy"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/#properties","text":"d op t","title":"Properties"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/#d","text":"\u2022 d : Object","title":"d"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/#op","text":"\u2022 op : HELLO","title":"op"},{"location":"api/interfaces/sharding.ipcpackets.ipchellopacket/#t","text":"\u2022 Optional t : IpcEvents","title":"t"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/","text":"Discordoo / Modules / sharding / IpcPackets / IpcIdentifyPacket Interface: IpcIdentifyPacket # sharding . IpcPackets .IpcIdentifyPacket Hierarchy # IpcPacket \u21b3 IpcIdentifyPacket Table of contents # Properties # d op t Properties # d # \u2022 d : Object Type declaration # Name Type event_id string id string Overrides # IpcPacket . d Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:17 op # \u2022 op : IDENTIFY Overrides # IpcPacket . op Defined in # src/sharding/interfaces/ipc/IpcPackets.ts:16 t # \u2022 Optional t : IpcEvents Inherited from # IpcPacket . t Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:6","title":"IpcIdentifyPacket"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/#interface-ipcidentifypacket","text":"sharding . IpcPackets .IpcIdentifyPacket","title":"Interface: IpcIdentifyPacket"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/#hierarchy","text":"IpcPacket \u21b3 IpcIdentifyPacket","title":"Hierarchy"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/#properties","text":"d op t","title":"Properties"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/#d","text":"\u2022 d : Object","title":"d"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/#op","text":"\u2022 op : IDENTIFY","title":"op"},{"location":"api/interfaces/sharding.ipcpackets.ipcidentifypacket/#t","text":"\u2022 Optional t : IpcEvents","title":"t"},{"location":"api/interfaces/sharding.ipcserveroptions/","text":"Discordoo / Modules / sharding / IpcServerOptions Interface: IpcServerOptions # sharding .IpcServerOptions Table of contents # Properties # config id managerIpcId shardId tls Properties # config # \u2022 Optional config : RawIpcConfig Defined in # src/sharding/interfaces/ipc/IpcServerOptions.ts:6 id # \u2022 id : string Defined in # src/sharding/interfaces/ipc/IpcServerOptions.ts:9 managerIpcId # \u2022 managerIpcId : string Defined in # src/sharding/interfaces/ipc/IpcServerOptions.ts:7 shardId # \u2022 shardId : number Defined in # src/sharding/interfaces/ipc/IpcServerOptions.ts:8 tls # \u2022 Optional tls : IpcServerTlsOptions Defined in # src/sharding/interfaces/ipc/IpcServerOptions.ts:5","title":"IpcServerOptions"},{"location":"api/interfaces/sharding.ipcserveroptions/#interface-ipcserveroptions","text":"sharding .IpcServerOptions","title":"Interface: IpcServerOptions"},{"location":"api/interfaces/sharding.ipcserveroptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcserveroptions/#properties","text":"config id managerIpcId shardId tls","title":"Properties"},{"location":"api/interfaces/sharding.ipcserveroptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcserveroptions/#config","text":"\u2022 Optional config : RawIpcConfig","title":"config"},{"location":"api/interfaces/sharding.ipcserveroptions/#id","text":"\u2022 id : string","title":"id"},{"location":"api/interfaces/sharding.ipcserveroptions/#manageripcid","text":"\u2022 managerIpcId : string","title":"managerIpcId"},{"location":"api/interfaces/sharding.ipcserveroptions/#shardid","text":"\u2022 shardId : number","title":"shardId"},{"location":"api/interfaces/sharding.ipcserveroptions/#tls","text":"\u2022 Optional tls : IpcServerTlsOptions","title":"tls"},{"location":"api/interfaces/sharding.ipcserversendoptions/","text":"Discordoo / Modules / sharding / IpcServerSendOptions Interface: IpcServerSendOptions # sharding .IpcServerSendOptions Table of contents # Properties # socket waitResponse Properties # socket # \u2022 Optional socket : any Defined in # src/sharding/interfaces/ipc/IpcServerSendOptions.ts:2 waitResponse # \u2022 Optional waitResponse : boolean Defined in # src/sharding/interfaces/ipc/IpcServerSendOptions.ts:3","title":"IpcServerSendOptions"},{"location":"api/interfaces/sharding.ipcserversendoptions/#interface-ipcserversendoptions","text":"sharding .IpcServerSendOptions","title":"Interface: IpcServerSendOptions"},{"location":"api/interfaces/sharding.ipcserversendoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcserversendoptions/#properties","text":"socket waitResponse","title":"Properties"},{"location":"api/interfaces/sharding.ipcserversendoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcserversendoptions/#socket","text":"\u2022 Optional socket : any","title":"socket"},{"location":"api/interfaces/sharding.ipcserversendoptions/#waitresponse","text":"\u2022 Optional waitResponse : boolean","title":"waitResponse"},{"location":"api/interfaces/sharding.ipctlsoptions/","text":"Discordoo / Modules / sharding / IpcTlsOptions Interface: IpcTlsOptions # sharding .IpcTlsOptions Table of contents # Properties # dhparam private public rejectUnauthorized requestCert trustedConnections Properties # dhparam # \u2022 Optional dhparam : string Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:4 private # \u2022 Optional private : string Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:3 public # \u2022 Optional public : string Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:2 rejectUnauthorized # \u2022 Optional rejectUnauthorized : boolean Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:6 requestCert # \u2022 Optional requestCert : boolean Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:5 trustedConnections # \u2022 Optional trustedConnections : string [] Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:7","title":"IpcTlsOptions"},{"location":"api/interfaces/sharding.ipctlsoptions/#interface-ipctlsoptions","text":"sharding .IpcTlsOptions","title":"Interface: IpcTlsOptions"},{"location":"api/interfaces/sharding.ipctlsoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipctlsoptions/#properties","text":"dhparam private public rejectUnauthorized requestCert trustedConnections","title":"Properties"},{"location":"api/interfaces/sharding.ipctlsoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipctlsoptions/#dhparam","text":"\u2022 Optional dhparam : string","title":"dhparam"},{"location":"api/interfaces/sharding.ipctlsoptions/#private","text":"\u2022 Optional private : string","title":"private"},{"location":"api/interfaces/sharding.ipctlsoptions/#public","text":"\u2022 Optional public : string","title":"public"},{"location":"api/interfaces/sharding.ipctlsoptions/#rejectunauthorized","text":"\u2022 Optional rejectUnauthorized : boolean","title":"rejectUnauthorized"},{"location":"api/interfaces/sharding.ipctlsoptions/#requestcert","text":"\u2022 Optional requestCert : boolean","title":"requestCert"},{"location":"api/interfaces/sharding.ipctlsoptions/#trustedconnections","text":"\u2022 Optional trustedConnections : string []","title":"trustedConnections"},{"location":"api/interfaces/sharding.machinesshardingoptions/","text":"Discordoo / Modules / sharding / MachinesShardingOptions Interface: MachinesShardingOptions # sharding .MachinesShardingOptions Table of contents # Properties # me points tls Properties # me # \u2022 me : \"parent\" | \"child\" Defined in # src/sharding/interfaces/manager/options/MachinesShardingOptions.ts:5 points # \u2022 Optional points : ShardingMachineOptions [] Defined in # src/sharding/interfaces/manager/options/MachinesShardingOptions.ts:6 tls # \u2022 Optional tls : IpcTlsOptions Defined in # src/sharding/interfaces/manager/options/MachinesShardingOptions.ts:7","title":"MachinesShardingOptions"},{"location":"api/interfaces/sharding.machinesshardingoptions/#interface-machinesshardingoptions","text":"sharding .MachinesShardingOptions","title":"Interface: MachinesShardingOptions"},{"location":"api/interfaces/sharding.machinesshardingoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.machinesshardingoptions/#properties","text":"me points tls","title":"Properties"},{"location":"api/interfaces/sharding.machinesshardingoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.machinesshardingoptions/#me","text":"\u2022 me : \"parent\" | \"child\"","title":"me"},{"location":"api/interfaces/sharding.machinesshardingoptions/#points","text":"\u2022 Optional points : ShardingMachineOptions []","title":"points"},{"location":"api/interfaces/sharding.machinesshardingoptions/#tls","text":"\u2022 Optional tls : IpcTlsOptions","title":"tls"},{"location":"api/interfaces/sharding.processesshardingoptions/","text":"Discordoo / Modules / sharding / ProcessesShardingOptions Interface: ProcessesShardingOptions # sharding .ProcessesShardingOptions Table of contents # Properties # env forkOptions shardsPerProcess Properties # env # \u2022 Optional env : Record < string , string > Defined in # src/sharding/interfaces/manager/options/ProcessesShardingOptions.ts:5 forkOptions # \u2022 Optional forkOptions : Omit < ForkOptions , \"env\" > Defined in # src/sharding/interfaces/manager/options/ProcessesShardingOptions.ts:6 shardsPerProcess # \u2022 Optional shardsPerProcess : number Defined in # src/sharding/interfaces/manager/options/ProcessesShardingOptions.ts:4","title":"ProcessesShardingOptions"},{"location":"api/interfaces/sharding.processesshardingoptions/#interface-processesshardingoptions","text":"sharding .ProcessesShardingOptions","title":"Interface: ProcessesShardingOptions"},{"location":"api/interfaces/sharding.processesshardingoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.processesshardingoptions/#properties","text":"env forkOptions shardsPerProcess","title":"Properties"},{"location":"api/interfaces/sharding.processesshardingoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.processesshardingoptions/#env","text":"\u2022 Optional env : Record < string , string >","title":"env"},{"location":"api/interfaces/sharding.processesshardingoptions/#forkoptions","text":"\u2022 Optional forkOptions : Omit < ForkOptions , \"env\" >","title":"forkOptions"},{"location":"api/interfaces/sharding.processesshardingoptions/#shardsperprocess","text":"\u2022 Optional shardsPerProcess : number","title":"shardsPerProcess"},{"location":"api/interfaces/sharding.shardingclientcreateoptions/","text":"Discordoo / Modules / sharding / ShardingClientCreateOptions Interface: ShardingClientCreateOptions # sharding .ShardingClientCreateOptions Table of contents # Properties # timeout Properties # timeout # \u2022 Optional timeout : number Defined in # src/sharding/interfaces/client/ShardingClientCreateOptions.ts:2","title":"ShardingClientCreateOptions"},{"location":"api/interfaces/sharding.shardingclientcreateoptions/#interface-shardingclientcreateoptions","text":"sharding .ShardingClientCreateOptions","title":"Interface: ShardingClientCreateOptions"},{"location":"api/interfaces/sharding.shardingclientcreateoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingclientcreateoptions/#properties","text":"timeout","title":"Properties"},{"location":"api/interfaces/sharding.shardingclientcreateoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingclientcreateoptions/#timeout","text":"\u2022 Optional timeout : number","title":"timeout"},{"location":"api/interfaces/sharding.shardingclientenvironment/","text":"Discordoo / Modules / sharding / ShardingClientEnvironment Interface: ShardingClientEnvironment # sharding .ShardingClientEnvironment Table of contents # Properties # SHARDING_MANAGER_IPC_IDENTIFIER SHARD_ID SHARD_IPC_IDENTIFIER Properties # SHARDING_MANAGER_IPC_IDENTIFIER # \u2022 SHARDING_MANAGER_IPC_IDENTIFIER : string Defined in # src/sharding/interfaces/client/ShardingClientEnvironment.ts:2 SHARD_ID # \u2022 SHARD_ID : number Defined in # src/sharding/interfaces/client/ShardingClientEnvironment.ts:4 SHARD_IPC_IDENTIFIER # \u2022 SHARD_IPC_IDENTIFIER : string Defined in # src/sharding/interfaces/client/ShardingClientEnvironment.ts:3","title":"ShardingClientEnvironment"},{"location":"api/interfaces/sharding.shardingclientenvironment/#interface-shardingclientenvironment","text":"sharding .ShardingClientEnvironment","title":"Interface: ShardingClientEnvironment"},{"location":"api/interfaces/sharding.shardingclientenvironment/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingclientenvironment/#properties","text":"SHARDING_MANAGER_IPC_IDENTIFIER SHARD_ID SHARD_IPC_IDENTIFIER","title":"Properties"},{"location":"api/interfaces/sharding.shardingclientenvironment/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingclientenvironment/#sharding_manager_ipc_identifier","text":"\u2022 SHARDING_MANAGER_IPC_IDENTIFIER : string","title":"SHARDING_MANAGER_IPC_IDENTIFIER"},{"location":"api/interfaces/sharding.shardingclientenvironment/#shard_id","text":"\u2022 SHARD_ID : number","title":"SHARD_ID"},{"location":"api/interfaces/sharding.shardingclientenvironment/#shard_ipc_identifier","text":"\u2022 SHARD_IPC_IDENTIFIER : string","title":"SHARD_IPC_IDENTIFIER"},{"location":"api/interfaces/sharding.shardingclientoptions/","text":"Discordoo / Modules / sharding / ShardingClientOptions Interface: ShardingClientOptions # sharding .ShardingClientOptions Table of contents # Properties # env extraOptions file ipc mode shards totalShards Properties # env # \u2022 env : ShardingClientEnvironment Defined in # src/sharding/interfaces/client/ShardingClientOptions.ts:8 extraOptions # \u2022 Optional extraOptions : ProcessesShardingOptions | WorkersShardingOptions | ClustersShardingOptions Defined in # src/sharding/interfaces/client/ShardingClientOptions.ts:13 file # \u2022 file : string Defined in # src/sharding/interfaces/client/ShardingClientOptions.ts:12 ipc # \u2022 Optional ipc : Object Type declaration # Name Type config? RawIpcConfig tls? IpcClientTlsOptions Defined in # src/sharding/interfaces/client/ShardingClientOptions.ts:14 mode # \u2022 mode : PartialShardingModes Defined in # src/sharding/interfaces/client/ShardingClientOptions.ts:11 shards # \u2022 shards : number [] Defined in # src/sharding/interfaces/client/ShardingClientOptions.ts:9 totalShards # \u2022 totalShards : number Defined in # src/sharding/interfaces/client/ShardingClientOptions.ts:10","title":"ShardingClientOptions"},{"location":"api/interfaces/sharding.shardingclientoptions/#interface-shardingclientoptions","text":"sharding .ShardingClientOptions","title":"Interface: ShardingClientOptions"},{"location":"api/interfaces/sharding.shardingclientoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingclientoptions/#properties","text":"env extraOptions file ipc mode shards totalShards","title":"Properties"},{"location":"api/interfaces/sharding.shardingclientoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingclientoptions/#env","text":"\u2022 env : ShardingClientEnvironment","title":"env"},{"location":"api/interfaces/sharding.shardingclientoptions/#extraoptions","text":"\u2022 Optional extraOptions : ProcessesShardingOptions | WorkersShardingOptions | ClustersShardingOptions","title":"extraOptions"},{"location":"api/interfaces/sharding.shardingclientoptions/#file","text":"\u2022 file : string","title":"file"},{"location":"api/interfaces/sharding.shardingclientoptions/#ipc","text":"\u2022 Optional ipc : Object","title":"ipc"},{"location":"api/interfaces/sharding.shardingclientoptions/#mode","text":"\u2022 mode : PartialShardingModes","title":"mode"},{"location":"api/interfaces/sharding.shardingclientoptions/#shards","text":"\u2022 shards : number []","title":"shards"},{"location":"api/interfaces/sharding.shardingclientoptions/#totalshards","text":"\u2022 totalShards : number","title":"totalShards"},{"location":"api/interfaces/sharding.shardingmachineoptions/","text":"Discordoo / Modules / sharding / ShardingMachineOptions Interface: ShardingMachineOptions # sharding .ShardingMachineOptions Table of contents # Properties # childManagerOptions host port shards tls udp Properties # childManagerOptions # \u2022 childManagerOptions : ChildShardingManagerOptions Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:11 host # \u2022 host : string Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:7 port # \u2022 Optional port : number Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:6 shards # \u2022 shards : ShardListResolvable Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:9 tls # \u2022 Optional tls : IpcClientTlsOptions Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:10 udp # \u2022 Optional udp : \"udp4\" | \"udp6\" Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:8","title":"ShardingMachineOptions"},{"location":"api/interfaces/sharding.shardingmachineoptions/#interface-shardingmachineoptions","text":"sharding .ShardingMachineOptions","title":"Interface: ShardingMachineOptions"},{"location":"api/interfaces/sharding.shardingmachineoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingmachineoptions/#properties","text":"childManagerOptions host port shards tls udp","title":"Properties"},{"location":"api/interfaces/sharding.shardingmachineoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingmachineoptions/#childmanageroptions","text":"\u2022 childManagerOptions : ChildShardingManagerOptions","title":"childManagerOptions"},{"location":"api/interfaces/sharding.shardingmachineoptions/#host","text":"\u2022 host : string","title":"host"},{"location":"api/interfaces/sharding.shardingmachineoptions/#port","text":"\u2022 Optional port : number","title":"port"},{"location":"api/interfaces/sharding.shardingmachineoptions/#shards","text":"\u2022 shards : ShardListResolvable","title":"shards"},{"location":"api/interfaces/sharding.shardingmachineoptions/#tls","text":"\u2022 Optional tls : IpcClientTlsOptions","title":"tls"},{"location":"api/interfaces/sharding.shardingmachineoptions/#udp","text":"\u2022 Optional udp : \"udp4\" | \"udp6\"","title":"udp"},{"location":"api/interfaces/sharding.shardingmanagerevents/","text":"Discordoo / Modules / sharding / ShardingManagerEvents Interface: ShardingManagerEvents # sharding .ShardingManagerEvents Table of contents # Properties # message Properties # message # \u2022 message : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/sharding/interfaces/manager/ShardingManagerEvents.ts:2","title":"ShardingManagerEvents"},{"location":"api/interfaces/sharding.shardingmanagerevents/#interface-shardingmanagerevents","text":"sharding .ShardingManagerEvents","title":"Interface: ShardingManagerEvents"},{"location":"api/interfaces/sharding.shardingmanagerevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingmanagerevents/#properties","text":"message","title":"Properties"},{"location":"api/interfaces/sharding.shardingmanagerevents/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingmanagerevents/#message","text":"\u2022 message : () => unknown","title":"message"},{"location":"api/interfaces/sharding.shardingmanageroptions/","text":"Discordoo / Modules / sharding / ShardingManagerOptions Interface: ShardingManagerOptions # sharding .ShardingManagerOptions Table of contents # Properties # clusters file machines mode processes shards type workers Properties # clusters # \u2022 Optional clusters : ClustersShardingOptions Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:17 file # \u2022 file : string Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:12 machines # \u2022 Optional machines : MachinesShardingOptions Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:14 mode # \u2022 mode : ShardingModes Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:9 processes # \u2022 Optional processes : ProcessesShardingOptions Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:15 shards # \u2022 shards : ShardListResolvable Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:11 type # \u2022 Optional type : ShardingManagerTypes Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:10 workers # \u2022 Optional workers : WorkersShardingOptions Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:16","title":"ShardingManagerOptions"},{"location":"api/interfaces/sharding.shardingmanageroptions/#interface-shardingmanageroptions","text":"sharding .ShardingManagerOptions","title":"Interface: ShardingManagerOptions"},{"location":"api/interfaces/sharding.shardingmanageroptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingmanageroptions/#properties","text":"clusters file machines mode processes shards type workers","title":"Properties"},{"location":"api/interfaces/sharding.shardingmanageroptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingmanageroptions/#clusters","text":"\u2022 Optional clusters : ClustersShardingOptions","title":"clusters"},{"location":"api/interfaces/sharding.shardingmanageroptions/#file","text":"\u2022 file : string","title":"file"},{"location":"api/interfaces/sharding.shardingmanageroptions/#machines","text":"\u2022 Optional machines : MachinesShardingOptions","title":"machines"},{"location":"api/interfaces/sharding.shardingmanageroptions/#mode","text":"\u2022 mode : ShardingModes","title":"mode"},{"location":"api/interfaces/sharding.shardingmanageroptions/#processes","text":"\u2022 Optional processes : ProcessesShardingOptions","title":"processes"},{"location":"api/interfaces/sharding.shardingmanageroptions/#shards","text":"\u2022 shards : ShardListResolvable","title":"shards"},{"location":"api/interfaces/sharding.shardingmanageroptions/#type","text":"\u2022 Optional type : ShardingManagerTypes","title":"type"},{"location":"api/interfaces/sharding.shardingmanageroptions/#workers","text":"\u2022 Optional workers : WorkersShardingOptions","title":"workers"},{"location":"api/interfaces/sharding.workersshardingoptions/","text":"Discordoo / Modules / sharding / WorkersShardingOptions Interface: WorkersShardingOptions # sharding .WorkersShardingOptions Table of contents # Properties # env shardsPerWorker spawnOptions Properties # env # \u2022 Optional env : Record < string , string > Defined in # src/sharding/interfaces/manager/options/WorkersShardingOptions.ts:5 shardsPerWorker # \u2022 Optional shardsPerWorker : number Defined in # src/sharding/interfaces/manager/options/WorkersShardingOptions.ts:4 spawnOptions # \u2022 Optional spawnOptions : Omit < WorkerOptions , \"env\" > Defined in # src/sharding/interfaces/manager/options/WorkersShardingOptions.ts:6","title":"WorkersShardingOptions"},{"location":"api/interfaces/sharding.workersshardingoptions/#interface-workersshardingoptions","text":"sharding .WorkersShardingOptions","title":"Interface: WorkersShardingOptions"},{"location":"api/interfaces/sharding.workersshardingoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.workersshardingoptions/#properties","text":"env shardsPerWorker spawnOptions","title":"Properties"},{"location":"api/interfaces/sharding.workersshardingoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.workersshardingoptions/#env","text":"\u2022 Optional env : Record < string , string >","title":"env"},{"location":"api/interfaces/sharding.workersshardingoptions/#shardsperworker","text":"\u2022 Optional shardsPerWorker : number","title":"shardsPerWorker"},{"location":"api/interfaces/sharding.workersshardingoptions/#spawnoptions","text":"\u2022 Optional spawnOptions : Omit < WorkerOptions , \"env\" >","title":"spawnOptions"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/","text":"Discordoo / Modules / utils / DeconstructedDiscordooSnowflake Interface: DeconstructedDiscordooSnowflake # utils .DeconstructedDiscordooSnowflake Table of contents # Properties # date increment shardID timestamp workerID Properties # date # \u2022 date : Date Defined in # src/utils/interfaces/DeconstructedSnowflake.ts:6 increment # \u2022 increment : number Defined in # src/utils/interfaces/DeconstructedSnowflake.ts:5 shardID # \u2022 shardID : number Defined in # src/utils/interfaces/DeconstructedSnowflake.ts:4 timestamp # \u2022 timestamp : number Defined in # src/utils/interfaces/DeconstructedSnowflake.ts:2 workerID # \u2022 workerID : number Defined in # src/utils/interfaces/DeconstructedSnowflake.ts:3","title":"DeconstructedDiscordooSnowflake"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#interface-deconstructeddiscordoosnowflake","text":"utils .DeconstructedDiscordooSnowflake","title":"Interface: DeconstructedDiscordooSnowflake"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#properties","text":"date increment shardID timestamp workerID","title":"Properties"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#date","text":"\u2022 date : Date","title":"date"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#increment","text":"\u2022 increment : number","title":"increment"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#shardid","text":"\u2022 shardID : number","title":"shardID"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#timestamp","text":"\u2022 timestamp : number","title":"timestamp"},{"location":"api/interfaces/utils.deconstructeddiscordoosnowflake/#workerid","text":"\u2022 workerID : number","title":"workerID"},{"location":"api/interfaces/utils.validateoptions/","text":"Discordoo / Modules / utils / ValidateOptions Interface: ValidateOptions # utils .ValidateOptions Table of contents # Properties # department instance schema wantResult Properties # department # \u2022 Optional department : string Defined in # src/utils/interfaces/ValidateOptions.ts:5 instance # \u2022 Optional instance : string Defined in # src/utils/interfaces/ValidateOptions.ts:7 schema # \u2022 schema : JSONSchema7 Defined in # src/utils/interfaces/ValidateOptions.ts:4 wantResult # \u2022 Optional wantResult : boolean Defined in # src/utils/interfaces/ValidateOptions.ts:6","title":"ValidateOptions"},{"location":"api/interfaces/utils.validateoptions/#interface-validateoptions","text":"utils .ValidateOptions","title":"Interface: ValidateOptions"},{"location":"api/interfaces/utils.validateoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/utils.validateoptions/#properties","text":"department instance schema wantResult","title":"Properties"},{"location":"api/interfaces/utils.validateoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/utils.validateoptions/#department","text":"\u2022 Optional department : string","title":"department"},{"location":"api/interfaces/utils.validateoptions/#instance","text":"\u2022 Optional instance : string","title":"instance"},{"location":"api/interfaces/utils.validateoptions/#schema","text":"\u2022 schema : JSONSchema7","title":"schema"},{"location":"api/interfaces/utils.validateoptions/#wantresult","text":"\u2022 Optional wantResult : boolean","title":"wantResult"},{"location":"api/modules/cache/","text":"Discordoo / Modules / cache Module: cache # Table of contents # Classes # DefaultCacheProvider","title":"Cache"},{"location":"api/modules/cache/#module-cache","text":"","title":"Module: cache"},{"location":"api/modules/cache/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/cache/#classes","text":"DefaultCacheProvider","title":"Classes"},{"location":"api/modules/collection/","text":"Discordoo / Modules / collection Module: collection # Table of contents # Classes # Collection Interfaces # CollectionEqualOptions CollectionFilterOptions CollectionRandomOptions","title":"Collection"},{"location":"api/modules/collection/#module-collection","text":"","title":"Module: collection"},{"location":"api/modules/collection/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/collection/#classes","text":"Collection","title":"Classes"},{"location":"api/modules/collection/#interfaces","text":"CollectionEqualOptions CollectionFilterOptions CollectionRandomOptions","title":"Interfaces"},{"location":"api/modules/core.constants/","text":"Discordoo / Modules / core / Constants Namespace: Constants # core .Constants Table of contents # Enumerations # ChannelsCachingPolicy DiscordooProviders EmojisCachingPolicy GlobalCachingPolicy GuildsCachingPolicy IpcEvents IpcOPCodes MembersCachingPolicy MessagesCachingPolicy PartialShardingModes PresencesCachingPolicy RolesCachingPolicy ShardingManagerTypes ShardingModes UsersCachingPolicy WebSocketClientEvents WebSocketClientStates WebSocketEvents WebSocketManagerStates WebSocketOPCodes WebSocketShardStatus WebSocketStates Variables # API_ENDPOINT DEFAULT_REST_OPTIONS DEFAULT_WS_OPTIONS RAW_IPC_EVENT WS_HANDSHAKE_TIMEOUT Variables # API_ENDPOINT # \u2022 Const API_ENDPOINT : \"https://discord.com/api\" Defined in # src/core/Constants.ts:307 DEFAULT_REST_OPTIONS # \u2022 Const DEFAULT_REST_OPTIONS : any Defined in # src/core/Constants.ts:329 DEFAULT_WS_OPTIONS # \u2022 Const DEFAULT_WS_OPTIONS : Omit < GatewayOptions , \"token\" > Defined in # src/core/Constants.ts:309 RAW_IPC_EVENT # \u2022 Const RAW_IPC_EVENT : \"__DDOO__.MESSAGE\" Defined in # src/core/Constants.ts:6 WS_HANDSHAKE_TIMEOUT # \u2022 Const WS_HANDSHAKE_TIMEOUT : 30000 Defined in # src/core/Constants.ts:305","title":"Constants"},{"location":"api/modules/core.constants/#namespace-constants","text":"core .Constants","title":"Namespace: Constants"},{"location":"api/modules/core.constants/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/core.constants/#enumerations","text":"ChannelsCachingPolicy DiscordooProviders EmojisCachingPolicy GlobalCachingPolicy GuildsCachingPolicy IpcEvents IpcOPCodes MembersCachingPolicy MessagesCachingPolicy PartialShardingModes PresencesCachingPolicy RolesCachingPolicy ShardingManagerTypes ShardingModes UsersCachingPolicy WebSocketClientEvents WebSocketClientStates WebSocketEvents WebSocketManagerStates WebSocketOPCodes WebSocketShardStatus WebSocketStates","title":"Enumerations"},{"location":"api/modules/core.constants/#variables","text":"API_ENDPOINT DEFAULT_REST_OPTIONS DEFAULT_WS_OPTIONS RAW_IPC_EVENT WS_HANDSHAKE_TIMEOUT","title":"Variables"},{"location":"api/modules/core.constants/#variables_1","text":"","title":"Variables"},{"location":"api/modules/core.constants/#api_endpoint","text":"\u2022 Const API_ENDPOINT : \"https://discord.com/api\"","title":"API_ENDPOINT"},{"location":"api/modules/core.constants/#default_rest_options","text":"\u2022 Const DEFAULT_REST_OPTIONS : any","title":"DEFAULT_REST_OPTIONS"},{"location":"api/modules/core.constants/#default_ws_options","text":"\u2022 Const DEFAULT_WS_OPTIONS : Omit < GatewayOptions , \"token\" >","title":"DEFAULT_WS_OPTIONS"},{"location":"api/modules/core.constants/#raw_ipc_event","text":"\u2022 Const RAW_IPC_EVENT : \"__DDOO__.MESSAGE\"","title":"RAW_IPC_EVENT"},{"location":"api/modules/core.constants/#ws_handshake_timeout","text":"\u2022 Const WS_HANDSHAKE_TIMEOUT : 30000","title":"WS_HANDSHAKE_TIMEOUT"},{"location":"api/modules/core/","text":"Discordoo / Modules / core Module: core # Table of contents # Namespaces # Constants Classes # Client Interfaces # AbstractCacheProviderOptions CacheProvider CacheProviderDeleteOptions CacheProviderGetOptions CacheProviderHasOptions CacheProviderSetOptions CacheProviderSizeOptions ClientEventsHandlers ClientInternals ClientOptions DefaultClientStack GatewayConnectOptions GatewayProvider ProviderConstructor ProviderOption Type aliases # ShardListResolvable Type aliases # ShardListResolvable # \u01ac ShardListResolvable : number | number [] | { from : number ; to : number } Represents a shards list that can be resolved to array of shards ids Defined in # src/core/ShardListResolvable.ts:2","title":"Core"},{"location":"api/modules/core/#module-core","text":"","title":"Module: core"},{"location":"api/modules/core/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/core/#namespaces","text":"Constants","title":"Namespaces"},{"location":"api/modules/core/#classes","text":"Client","title":"Classes"},{"location":"api/modules/core/#interfaces","text":"AbstractCacheProviderOptions CacheProvider CacheProviderDeleteOptions CacheProviderGetOptions CacheProviderHasOptions CacheProviderSetOptions CacheProviderSizeOptions ClientEventsHandlers ClientInternals ClientOptions DefaultClientStack GatewayConnectOptions GatewayProvider ProviderConstructor ProviderOption","title":"Interfaces"},{"location":"api/modules/core/#type-aliases","text":"ShardListResolvable","title":"Type aliases"},{"location":"api/modules/core/#type-aliases_1","text":"","title":"Type aliases"},{"location":"api/modules/core/#shardlistresolvable","text":"\u01ac ShardListResolvable : number | number [] | { from : number ; to : number } Represents a shards list that can be resolved to array of shards ids","title":"ShardListResolvable"},{"location":"api/modules/gateway/","text":"Discordoo / Modules / gateway Module: gateway # Table of contents # Classes # DefaultGatewayProvider WebSocketClient WebSocketManager Interfaces # GatewayOptions WebSocketClientDestroyOptions WebSocketClientEvents WebSocketManagerEvents WebSocketManagerLimits WebSocketPacket Type aliases # PartialGatewayOptions WebSocketSendPayload Type aliases # PartialGatewayOptions # \u01ac PartialGatewayOptions : Optional < GatewayOptions , \"intents\" | \"properties\" > Defined in # src/gateway/interfaces/PartialGatewayOptions.ts:4 WebSocketSendPayload # \u01ac WebSocketSendPayload : GatewaySendPayload | { op : WebSocketOPCodes } | { d : any ; op : WebSocketOPCodes } Defined in # src/gateway/interfaces/WebSocketSendPayload.ts:4","title":"Gateway"},{"location":"api/modules/gateway/#module-gateway","text":"","title":"Module: gateway"},{"location":"api/modules/gateway/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/gateway/#classes","text":"DefaultGatewayProvider WebSocketClient WebSocketManager","title":"Classes"},{"location":"api/modules/gateway/#interfaces","text":"GatewayOptions WebSocketClientDestroyOptions WebSocketClientEvents WebSocketManagerEvents WebSocketManagerLimits WebSocketPacket","title":"Interfaces"},{"location":"api/modules/gateway/#type-aliases","text":"PartialGatewayOptions WebSocketSendPayload","title":"Type aliases"},{"location":"api/modules/gateway/#type-aliases_1","text":"","title":"Type aliases"},{"location":"api/modules/gateway/#partialgatewayoptions","text":"\u01ac PartialGatewayOptions : Optional < GatewayOptions , \"intents\" | \"properties\" >","title":"PartialGatewayOptions"},{"location":"api/modules/gateway/#websocketsendpayload","text":"\u01ac WebSocketSendPayload : GatewaySendPayload | { op : WebSocketOPCodes } | { d : any ; op : WebSocketOPCodes }","title":"WebSocketSendPayload"},{"location":"api/modules/sharding.ipcpackets/","text":"Discordoo / Modules / sharding / IpcPackets Namespace: IpcPackets # sharding .IpcPackets Table of contents # Interfaces # IpcDispatchPacket IpcHeartbeatPacket IpcHelloPacket IpcIdentifyPacket","title":"IpcPackets"},{"location":"api/modules/sharding.ipcpackets/#namespace-ipcpackets","text":"sharding .IpcPackets","title":"Namespace: IpcPackets"},{"location":"api/modules/sharding.ipcpackets/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/sharding.ipcpackets/#interfaces","text":"IpcDispatchPacket IpcHeartbeatPacket IpcHelloPacket IpcIdentifyPacket","title":"Interfaces"},{"location":"api/modules/sharding/","text":"Discordoo / Modules / sharding Module: sharding # Table of contents # Namespaces # IpcPackets Classes # IpcClient IpcServer ShardingClient ShardingManager Interfaces # ChildShardingManagerOptions ClustersShardingOptions IpcClientOptions IpcClientSendOptions IpcPacket IpcServerOptions IpcServerSendOptions IpcTlsOptions MachinesShardingOptions ProcessesShardingOptions ShardingClientCreateOptions ShardingClientEnvironment ShardingClientOptions ShardingMachineOptions ShardingManagerEvents ShardingManagerOptions WorkersShardingOptions Type aliases # IpcClientTlsOptions IpcServerTlsOptions RawIpcConfig Type aliases # IpcClientTlsOptions # \u01ac IpcClientTlsOptions : Omit < IpcTlsOptions , \"dhparam\" | \"requestCert\" > Defined in # src/sharding/interfaces/ipc/IpcClientTlsOptions.ts:3 IpcServerTlsOptions # \u01ac IpcServerTlsOptions : NonOptional < IpcTlsOptions , \"public\" | \"private\" > Defined in # src/sharding/interfaces/ipc/IpcServerTlsOptions.ts:4 RawIpcConfig # \u01ac RawIpcConfig : Omit < Partial <typeof IpcConfig >, \"id\" | \"appspace\" | \"interfaces\" | \"networkHost\" | \"networkPort\" | \"tls\" > Defined in # src/sharding/interfaces/ipc/RawIpcConfig.ts:3","title":"Sharding"},{"location":"api/modules/sharding/#module-sharding","text":"","title":"Module: sharding"},{"location":"api/modules/sharding/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/sharding/#namespaces","text":"IpcPackets","title":"Namespaces"},{"location":"api/modules/sharding/#classes","text":"IpcClient IpcServer ShardingClient ShardingManager","title":"Classes"},{"location":"api/modules/sharding/#interfaces","text":"ChildShardingManagerOptions ClustersShardingOptions IpcClientOptions IpcClientSendOptions IpcPacket IpcServerOptions IpcServerSendOptions IpcTlsOptions MachinesShardingOptions ProcessesShardingOptions ShardingClientCreateOptions ShardingClientEnvironment ShardingClientOptions ShardingMachineOptions ShardingManagerEvents ShardingManagerOptions WorkersShardingOptions","title":"Interfaces"},{"location":"api/modules/sharding/#type-aliases","text":"IpcClientTlsOptions IpcServerTlsOptions RawIpcConfig","title":"Type aliases"},{"location":"api/modules/sharding/#type-aliases_1","text":"","title":"Type aliases"},{"location":"api/modules/sharding/#ipcclienttlsoptions","text":"\u01ac IpcClientTlsOptions : Omit < IpcTlsOptions , \"dhparam\" | \"requestCert\" >","title":"IpcClientTlsOptions"},{"location":"api/modules/sharding/#ipcservertlsoptions","text":"\u01ac IpcServerTlsOptions : NonOptional < IpcTlsOptions , \"public\" | \"private\" >","title":"IpcServerTlsOptions"},{"location":"api/modules/sharding/#rawipcconfig","text":"\u01ac RawIpcConfig : Omit < Partial <typeof IpcConfig >, \"id\" | \"appspace\" | \"interfaces\" | \"networkHost\" | \"networkPort\" | \"tls\" >","title":"RawIpcConfig"},{"location":"api/modules/utils/","text":"Discordoo / Modules / utils Module: utils # Table of contents # Classes # DiscordooError DiscordooSnowflake WebSocketUtils Interfaces # DeconstructedDiscordooSnowflake ValidateOptions Type aliases # NonOptional Optional Functions # getGateway idToDate intoChunks range resolveShards swap wait Type aliases # NonOptional # \u01ac NonOptional < T , K >: Omit < T , K > & Required < Pick < T , K >> Makes specified interface field non optional Type parameters # Name Type T T K extends keyof T Defined in # src/utils/NonOptional.ts:2 Optional # \u01ac Optional < T , K >: Omit < T , K > & { [P in K]?: T[P]} Makes specified interface field optional Type parameters # Name Type T T K extends keyof T Defined in # src/utils/Optional.ts:2 Functions # getGateway # \u25b8 getGateway ( token ): Promise < APIGatewayBotInfo > Parameters # Name Type token string Returns # Promise < APIGatewayBotInfo > Defined in # src/utils/getGateway.ts:5 idToDate # \u25b8 idToDate ( id ): Date Converts snowflake to date Parameters # Name Type id string Returns # Date Defined in # src/utils/idToDate.ts:2 intoChunks # \u25b8 intoChunks < T >( array , chunkSize? ): T [][] Splits array into several arrays Type parameters # Name Type T unknown Parameters # Name Type Default value array T [] undefined chunkSize number 1 Returns # T [][] Defined in # src/utils/intoChunks.ts:2 range # \u25b8 range ( x , y? ): number [] Creates a range of numbers to x Parameters # Name Type x number y? number Returns # number [] Defined in # src/utils/range.ts:2 resolveShards # \u25b8 resolveShards ( shards ): number [] Parameters # Name Type shards ShardListResolvable Returns # number [] Defined in # src/utils/resolveShards.ts:5 swap # \u25b8 swap ( arr , pos1 , pos2 ): any [] Parameters # Name Type arr any [] pos1 number pos2 number Returns # any [] Defined in # src/utils/swap.ts:1 wait # \u25b8 Const wait ( ms ): Promise < void > Parameters # Name Type ms number Returns # Promise < void > Defined in # src/utils/wait.ts:3","title":"Utils"},{"location":"api/modules/utils/#module-utils","text":"","title":"Module: utils"},{"location":"api/modules/utils/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/utils/#classes","text":"DiscordooError DiscordooSnowflake WebSocketUtils","title":"Classes"},{"location":"api/modules/utils/#interfaces","text":"DeconstructedDiscordooSnowflake ValidateOptions","title":"Interfaces"},{"location":"api/modules/utils/#type-aliases","text":"NonOptional Optional","title":"Type aliases"},{"location":"api/modules/utils/#functions","text":"getGateway idToDate intoChunks range resolveShards swap wait","title":"Functions"},{"location":"api/modules/utils/#type-aliases_1","text":"","title":"Type aliases"},{"location":"api/modules/utils/#nonoptional","text":"\u01ac NonOptional < T , K >: Omit < T , K > & Required < Pick < T , K >> Makes specified interface field non optional","title":"NonOptional"},{"location":"api/modules/utils/#optional","text":"\u01ac Optional < T , K >: Omit < T , K > & { [P in K]?: T[P]} Makes specified interface field optional","title":"Optional"},{"location":"api/modules/utils/#functions_1","text":"","title":"Functions"},{"location":"api/modules/utils/#getgateway","text":"\u25b8 getGateway ( token ): Promise < APIGatewayBotInfo >","title":"getGateway"},{"location":"api/modules/utils/#idtodate","text":"\u25b8 idToDate ( id ): Date Converts snowflake to date","title":"idToDate"},{"location":"api/modules/utils/#intochunks","text":"\u25b8 intoChunks < T >( array , chunkSize? ): T [][] Splits array into several arrays","title":"intoChunks"},{"location":"api/modules/utils/#range","text":"\u25b8 range ( x , y? ): number [] Creates a range of numbers to x","title":"range"},{"location":"api/modules/utils/#resolveshards","text":"\u25b8 resolveShards ( shards ): number []","title":"resolveShards"},{"location":"api/modules/utils/#swap","text":"\u25b8 swap ( arr , pos1 , pos2 ): any []","title":"swap"},{"location":"api/modules/utils/#wait","text":"\u25b8 Const wait ( ms ): Promise < void >","title":"wait"},{"location":"api/modules/wrapper/","text":"Discordoo / Modules / wrapper Module: wrapper # Table of contents # Classes # ClientBuilder Functions # createApp Functions # createApp # \u25b8 createApp < Stack >( token , options? ): ClientBuilder < Stack > Type parameters # Name Type Stack extends DefaultClientStack DefaultClientStack Parameters # Name Type token string options? CreateAppOptions Returns # ClientBuilder < Stack > Defined in # src/wrapper/createApp.ts:5","title":"Wrapper"},{"location":"api/modules/wrapper/#module-wrapper","text":"","title":"Module: wrapper"},{"location":"api/modules/wrapper/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/wrapper/#classes","text":"ClientBuilder","title":"Classes"},{"location":"api/modules/wrapper/#functions","text":"createApp","title":"Functions"},{"location":"api/modules/wrapper/#functions_1","text":"","title":"Functions"},{"location":"api/modules/wrapper/#createapp","text":"\u25b8 createApp < Stack >( token , options? ): ClientBuilder < Stack >","title":"createApp"},{"location":"base-guide/","text":"The Discordoo guide # Hi there! This is the Discordoo Guide. Here you will learn the basics of working with Discordoo and creating your own Discord bot. Important notice # This guide is intended to be read by people, who know TypeScript/Javascript and Node.js on beginner's level. We will not help you if you don't know how to use Node.js or write basic TypeScript/JavaScript code.","title":"The Discordoo guide"},{"location":"base-guide/#the-discordoo-guide","text":"Hi there! This is the Discordoo Guide. Here you will learn the basics of working with Discordoo and creating your own Discord bot.","title":"The Discordoo guide"},{"location":"base-guide/#important-notice","text":"This guide is intended to be read by people, who know TypeScript/Javascript and Node.js on beginner's level. We will not help you if you don't know how to use Node.js or write basic TypeScript/JavaScript code.","title":"Important notice"},{"location":"base-guide/installing/","text":"Step 1 - Installing Discordoo # In this step, you will know how to install Discordoo. Discordoo is hosted on npm and located under discordoo package. It contains the core of the library. However, it is highly recommended creating a new project from zero. To do it, execute the following script in a new directory: npm init @discordoo It will ask you some questions. After a few seconds of waiting you are done! You have Discordoo installed on your PC. Existing project # In case you have an existing project, you can install Discordoo separately. npm install discordoo Congratulations! You have done step 1! More adventures are coming","title":"Step 1 - Installing Discordoo"},{"location":"base-guide/installing/#step-1-installing-discordoo","text":"In this step, you will know how to install Discordoo. Discordoo is hosted on npm and located under discordoo package. It contains the core of the library. However, it is highly recommended creating a new project from zero. To do it, execute the following script in a new directory: npm init @discordoo It will ask you some questions. After a few seconds of waiting you are done! You have Discordoo installed on your PC.","title":"Step 1 - Installing Discordoo"},{"location":"base-guide/installing/#existing-project","text":"In case you have an existing project, you can install Discordoo separately. npm install discordoo Congratulations! You have done step 1! More adventures are coming","title":"Existing project"},{"location":"base-guide/starting/","text":"Step 2 - Starting your bot # You can use built-in createApp function to create a client, setup providers and client options: TS import { createApp } from 'discordoo/wrapper' const client = createApp('some-discord-bot-token') .cacheProvider(/* some cache provider */) .gateway(/* some gateway options */) .build() client.start() .then(() => console.log('online!')) or, if you want to extend from the client: TS import { Client as DiscordooClient, ClientOptions } from 'discordoo/core' import { createApp } from 'discordoo/wrapper' interface YourCustomOptions { owner?: string } class Client extends DiscordooClient { constructor(token, options?: ClientOptions<YourCustomOptions>) { super(token, options) console.log( 'hello from client constructor!', 'provided custom options:', options?.custom // YourCustomOptions interface used here ) } customMethod(): string { return 'hello world' } } const client = createApp('some-discord-bot-token', { useClient: Client }) .gateway(/* some gateway options */) .custom<YourCustomOptions>({ owner: 'very-cool-developer' }) .build<Client>() client.start() .then(() => console.log(client.customMethod())) // hello world","title":"Step 2 - Starting your bot"},{"location":"base-guide/starting/#step-2-starting-your-bot","text":"You can use built-in createApp function to create a client, setup providers and client options: TS import { createApp } from 'discordoo/wrapper' const client = createApp('some-discord-bot-token') .cacheProvider(/* some cache provider */) .gateway(/* some gateway options */) .build() client.start() .then(() => console.log('online!')) or, if you want to extend from the client: TS import { Client as DiscordooClient, ClientOptions } from 'discordoo/core' import { createApp } from 'discordoo/wrapper' interface YourCustomOptions { owner?: string } class Client extends DiscordooClient { constructor(token, options?: ClientOptions<YourCustomOptions>) { super(token, options) console.log( 'hello from client constructor!', 'provided custom options:', options?.custom // YourCustomOptions interface used here ) } customMethod(): string { return 'hello world' } } const client = createApp('some-discord-bot-token', { useClient: Client }) .gateway(/* some gateway options */) .custom<YourCustomOptions>({ owner: 'very-cool-developer' }) .build<Client>() client.start() .then(() => console.log(client.customMethod())) // hello world","title":"Step 2 - Starting your bot"}]}