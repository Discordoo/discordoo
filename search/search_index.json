{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Discordoo Documentation # Hi there! This is the Discordoo documentation. Here you will learn all the basics and internals of Discordoo. Where to start? # If you are a beginner, go to the Guide tab. This is the most friendly place where you can learn how to work with Discordoo. Or you can go to the Api tab, it contains a precise description for everything in Discordoo, but it wasn't intended as a good place to start. Important notice # This documentation is intended to be read by people, who know TypeScript and Node.js on beginner's level. We will not help you if you don't know how to use Node.js or write basic TypeScript code.","title":"Hello"},{"location":"#discordoo-documentation","text":"Hi there! This is the Discordoo documentation. Here you will learn all the basics and internals of Discordoo.","title":"Discordoo Documentation"},{"location":"#where-to-start","text":"If you are a beginner, go to the Guide tab. This is the most friendly place where you can learn how to work with Discordoo. Or you can go to the Api tab, it contains a precise description for everything in Discordoo, but it wasn't intended as a good place to start.","title":"Where to start?"},{"location":"#important-notice","text":"This documentation is intended to be read by people, who know TypeScript and Node.js on beginner's level. We will not help you if you don't know how to use Node.js or write basic TypeScript code.","title":"Important notice"},{"location":"advanced-guide/","text":"Discordoo guide for advanced developers # Hi there! This part of our guide is intended for developers who want to get more advanced in the development of bots using Discordoo. More complex things are described here, such as sharding, using and writing your own providers and modules for Discordoo, and so on. Please # This part of the guide is not for beginners. If you are a beginner, please read the base guide before.","title":"Discordoo guide for advanced developers"},{"location":"advanced-guide/#discordoo-guide-for-advanced-developers","text":"Hi there! This part of our guide is intended for developers who want to get more advanced in the development of bots using Discordoo. More complex things are described here, such as sharding, using and writing your own providers and modules for Discordoo, and so on.","title":"Discordoo guide for advanced developers"},{"location":"advanced-guide/#please","text":"This part of the guide is not for beginners. If you are a beginner, please read the base guide before.","title":"Please"},{"location":"advanced-guide/internal-utilities/snowflakes/","text":"Discordoo Snowflakes # DiscordooSnowflake is a custom twitter snowflake. Why we use snowflakes # We decided to use snowflake as a way to identify sharding instances and as a way to identify interprocess messages. Every time one sharding instance sends a message to the sharding manager or vice versa, a DiscordooSnowflake is created. Since interprocess interaction is reduced only to sending and receiving events, we can't just send a message and get a response. We must somehow understand that this response was exactly to our request. That's why each message is assigned a unique identifier in the form of DiscordooSnowflake. With this unique identifier, we can understand that the response was exactly for us. Analyzing Snowflake # If we have a snowflake 1128425170719486862453931925225603077 we can represent it as binary: 128 86 54 22 000000001101100101010011101010000000011011 00000000000000000000000000001011 00000000000000000000000001100011 0000000000000000000101 number of ms since Discordoo epoch worker id shard id increment After converting to binary, we can allocate individual blocks to find out the information that we used to generate this snowflake. We can get timestamp (generation time) from snowflake const EPOCH = 1609459200000 // 2021-01-01T00:00:00.000Z const timestamp = (BigInt(snowflake) >> 86n) + BigInt(EPOCH) // 1624043753498n Or internal worker id (usually, this is the ID of the process that created the snowflake) const workerID = (BigInt(snowflake) & 0x3FFFFFFFC0000000000000n) >> 54n // 11n Or shard id (process, worker or cluster ID, not WebSocketClient (discord shard) id) const shardID = (BigInt(snowflake) & 0x3FFFFFFFC00000n) >> 22n // 99n And the last, we can get the snowflake increment (number that increases by 1 for each generation of snowflake on the same process) const increment = BigInt(snowflake) & 0x3FFFFFn // 5n","title":"Discordoo Snowflakes"},{"location":"advanced-guide/internal-utilities/snowflakes/#discordoo-snowflakes","text":"DiscordooSnowflake is a custom twitter snowflake.","title":"Discordoo Snowflakes"},{"location":"advanced-guide/internal-utilities/snowflakes/#why-we-use-snowflakes","text":"We decided to use snowflake as a way to identify sharding instances and as a way to identify interprocess messages. Every time one sharding instance sends a message to the sharding manager or vice versa, a DiscordooSnowflake is created. Since interprocess interaction is reduced only to sending and receiving events, we can't just send a message and get a response. We must somehow understand that this response was exactly to our request. That's why each message is assigned a unique identifier in the form of DiscordooSnowflake. With this unique identifier, we can understand that the response was exactly for us.","title":"Why we use snowflakes"},{"location":"advanced-guide/internal-utilities/snowflakes/#analyzing-snowflake","text":"If we have a snowflake 1128425170719486862453931925225603077 we can represent it as binary: 128 86 54 22 000000001101100101010011101010000000011011 00000000000000000000000000001011 00000000000000000000000001100011 0000000000000000000101 number of ms since Discordoo epoch worker id shard id increment After converting to binary, we can allocate individual blocks to find out the information that we used to generate this snowflake. We can get timestamp (generation time) from snowflake const EPOCH = 1609459200000 // 2021-01-01T00:00:00.000Z const timestamp = (BigInt(snowflake) >> 86n) + BigInt(EPOCH) // 1624043753498n Or internal worker id (usually, this is the ID of the process that created the snowflake) const workerID = (BigInt(snowflake) & 0x3FFFFFFFC0000000000000n) >> 54n // 11n Or shard id (process, worker or cluster ID, not WebSocketClient (discord shard) id) const shardID = (BigInt(snowflake) & 0x3FFFFFFFC00000n) >> 22n // 99n And the last, we can get the snowflake increment (number that increases by 1 for each generation of snowflake on the same process) const increment = BigInt(snowflake) & 0x3FFFFFn // 5n","title":"Analyzing Snowflake"},{"location":"advanced-guide/sharding/","text":"Getting started with sharding # Sharding is required for bots with more than 2500 servers. Creating sharding manager # Sharding instances (processes, workers or clusters) are managed by ShardingManager. So we have to create it. Create a separate file for the sharding manager. Make sure that this file is not required in any way in the sharding instances, otherwise you will get an error about the recursive creation of the sharding manager. Import sharding manager and start it: TS import { ShardingManager } from 'discordoo/sharding' const manager = new ShardingManager({ file: 'C:/path/to/your/old/starting/file.js', shards: 2, mode: 'processes', // you can find other modes in our api documentation processes: { // every mode has its own options shardsPerProcess: 1 // how many discord's shards to run in each sharding instance } }) manager.start() .then(() => 'spawned!')","title":"Getting started with sharding"},{"location":"advanced-guide/sharding/#getting-started-with-sharding","text":"Sharding is required for bots with more than 2500 servers.","title":"Getting started with sharding"},{"location":"advanced-guide/sharding/#creating-sharding-manager","text":"Sharding instances (processes, workers or clusters) are managed by ShardingManager. So we have to create it. Create a separate file for the sharding manager. Make sure that this file is not required in any way in the sharding instances, otherwise you will get an error about the recursive creation of the sharding manager. Import sharding manager and start it: TS import { ShardingManager } from 'discordoo/sharding' const manager = new ShardingManager({ file: 'C:/path/to/your/old/starting/file.js', shards: 2, mode: 'processes', // you can find other modes in our api documentation processes: { // every mode has its own options shardsPerProcess: 1 // how many discord's shards to run in each sharding instance } }) manager.start() .then(() => 'spawned!')","title":"Creating sharding manager"},{"location":"advanced-guide/sharding/internals/","text":"Sharding internals # Our sharding uses node-ipc module for interprocess communication. Every sharding instance (process, worker or cluster) has a unique DiscordooSnowflake. It's like Discord or Twitter snowflake, only modified to suit our needs. What happens when the sharding instance are spawned # 1. An internal IPC Client is created in the process of the sharding manager. 2. The Discordoo Snowflake is passed to the sharding instance process, which will be used to identify this instance. 3. An internal IPC Server is created in the process of sharding instance, it uses Discordoo Snowflake as an address, a path to itself. 4. The IPC Client starts sending an IpcHelloPacket to the address that was passed to the sharding instance process until it receives a response. If 30 seconds have passed, but no response has been received, the sharding instance process will be forcibly destroyed. 5. If the IPC Server has received an IpcHelloPacket , it should send an IpcIdentifyPacket . Thus, it informs the IPC Client that it is up and running. The IpcHelloPacket contains information about how many shards need to be launched, and interval to send heartbeat. 6. When the IPC Client receives the IpcIdentifyPacket , it will start waiting for the IpcHeartbeatPacket from the sharding instance. Heartbeat is a system in which the IPC Server must send requests to the IPC Client every few seconds, and the Client must respond. This way they understand that all processes are running and working. 7. In case of loss of connection with the IPC Client, the IPC Server will command the local client (bot) to self-destruct. In case of loss of connection with the IPC Server, the IPC Client will command the ShardingManager to restart this sharding instance. How ShardingManager and sharding instances communicating # All communication comes down to a kind of ping-pong. They use a special standardized message type -- IpcPacket , which is very similar to WebSocket messages. op d t a numeric value, each of the numbers is assigned its own type of event. mixed JSON data. when op is 0 (dispatch), here is the string value of the sent event.","title":"Sharding internals"},{"location":"advanced-guide/sharding/internals/#sharding-internals","text":"Our sharding uses node-ipc module for interprocess communication. Every sharding instance (process, worker or cluster) has a unique DiscordooSnowflake. It's like Discord or Twitter snowflake, only modified to suit our needs.","title":"Sharding internals"},{"location":"advanced-guide/sharding/internals/#what-happens-when-the-sharding-instance-are-spawned","text":"1. An internal IPC Client is created in the process of the sharding manager. 2. The Discordoo Snowflake is passed to the sharding instance process, which will be used to identify this instance. 3. An internal IPC Server is created in the process of sharding instance, it uses Discordoo Snowflake as an address, a path to itself. 4. The IPC Client starts sending an IpcHelloPacket to the address that was passed to the sharding instance process until it receives a response. If 30 seconds have passed, but no response has been received, the sharding instance process will be forcibly destroyed. 5. If the IPC Server has received an IpcHelloPacket , it should send an IpcIdentifyPacket . Thus, it informs the IPC Client that it is up and running. The IpcHelloPacket contains information about how many shards need to be launched, and interval to send heartbeat. 6. When the IPC Client receives the IpcIdentifyPacket , it will start waiting for the IpcHeartbeatPacket from the sharding instance. Heartbeat is a system in which the IPC Server must send requests to the IPC Client every few seconds, and the Client must respond. This way they understand that all processes are running and working. 7. In case of loss of connection with the IPC Client, the IPC Server will command the local client (bot) to self-destruct. In case of loss of connection with the IPC Server, the IPC Client will command the ShardingManager to restart this sharding instance.","title":"What happens when the sharding instance are spawned"},{"location":"advanced-guide/sharding/internals/#how-shardingmanager-and-sharding-instances-communicating","text":"All communication comes down to a kind of ping-pong. They use a special standardized message type -- IpcPacket , which is very similar to WebSocket messages. op d t a numeric value, each of the numbers is assigned its own type of event. mixed JSON data. when op is 0 (dispatch), here is the string value of the sent event.","title":"How ShardingManager and sharding instances communicating"},{"location":"advanced-guide/sharding/machines/","text":"Inter-machines sharding # In the case of very large bots, it is not enough to shard only on one server. Therefore, Discordoo has a mechanism for distributing sharding instances between different servers. WARNING # THIS IS NOT IMPLEMENTED FUNCTIONALITY. Preparing your servers # You should prepare your servers to receive sharding instances. To do this, you need to open the port on which Discordoo's ShardingManager will wait for commands from the main ShardingManager. Default port is 8379. Getting started # On each server, you must install Discordoo and create a ShardingManager in standby mode: TS import { ShardingManager } from 'discordoo/sharding' import { ShardingManagerModes } from 'discordoo/core' const manager = new ShardingManager({ file: 'C:/path/to/your/client/file.js', mode: ShardingManagerModes.MACHINES, machines: { me: 'child', ipc: { networkHost: 'your server IP', //networkPort: 9999, // override default port if you want }, /*tls: { // (this cert used in the array of trusted connections on the main ShardingManager server) public: string // path to server tls cert private: string // path to server tls private key dhparam?: string // path to server dhparam requestCert?: boolean // whether main sharding manager should pass tls cert to this child rejectUnauthorized?: boolean // reject unauthorized connections trustedConnections?: string[] // array of paths to trusted client certificates },*/ }, }) manager.start() On the main server you should create main ShardingManager and specify machines: TS import { ShardingManager } from 'discordoo/sharding' import { ShardingManagerModes, ChildShardingModes } from 'discordoo/core' const manager = new ShardingManager({ mode: ShardingManagerModes.MACHINES, machines: { me: 'parent', points: [ // array of contact points to your servers { port: 8379, // optional override port host: '10.0.18.1', // your server ip (required!) udp: 'udp4', // optional UDP instead TCP childManagerOptions: { // options of the sharding manager that will be sent to the remote machine mode: ChildShardingModes.PROCESSES, shards: { from: 0, to: 127 }, }, tls: { // (this cert used in array of trusted connections on the child sharding manager server) public: '../tls/client.pub', // main ShardingManager tls cert private: '../tls/client.key', // main ShardingMangaer tls private key rejectUnauthorized: true, trustedConnections: [ '../tls/10-0-18-1.pub', '../tls/FE80::0202:B3FF:FE1E:8329.pub' ] // trusted servers tls certs }, }, { host: 'FE80::0202:B3FF:FE1E:8329', // ipv6 also supported childManagerOptions: { mode: ChildShardingModes.WORKERS, shards: { from: 128, to: 255 }, }, tls: { public: '../tls/server.pub', private: '../tls/server.key', rejectUnauthorized: true, trustedConnections: [ '../tls/10-0-18-1.pub', '../tls/FE80::0202:B3FF:FE1E:8329.pub' ] }, } ] } }) manager.start() That's all!","title":"Inter-machines sharding"},{"location":"advanced-guide/sharding/machines/#inter-machines-sharding","text":"In the case of very large bots, it is not enough to shard only on one server. Therefore, Discordoo has a mechanism for distributing sharding instances between different servers.","title":"Inter-machines sharding"},{"location":"advanced-guide/sharding/machines/#warning","text":"THIS IS NOT IMPLEMENTED FUNCTIONALITY.","title":"WARNING"},{"location":"advanced-guide/sharding/machines/#preparing-your-servers","text":"You should prepare your servers to receive sharding instances. To do this, you need to open the port on which Discordoo's ShardingManager will wait for commands from the main ShardingManager. Default port is 8379.","title":"Preparing your servers"},{"location":"advanced-guide/sharding/machines/#getting-started","text":"On each server, you must install Discordoo and create a ShardingManager in standby mode: TS import { ShardingManager } from 'discordoo/sharding' import { ShardingManagerModes } from 'discordoo/core' const manager = new ShardingManager({ file: 'C:/path/to/your/client/file.js', mode: ShardingManagerModes.MACHINES, machines: { me: 'child', ipc: { networkHost: 'your server IP', //networkPort: 9999, // override default port if you want }, /*tls: { // (this cert used in the array of trusted connections on the main ShardingManager server) public: string // path to server tls cert private: string // path to server tls private key dhparam?: string // path to server dhparam requestCert?: boolean // whether main sharding manager should pass tls cert to this child rejectUnauthorized?: boolean // reject unauthorized connections trustedConnections?: string[] // array of paths to trusted client certificates },*/ }, }) manager.start() On the main server you should create main ShardingManager and specify machines: TS import { ShardingManager } from 'discordoo/sharding' import { ShardingManagerModes, ChildShardingModes } from 'discordoo/core' const manager = new ShardingManager({ mode: ShardingManagerModes.MACHINES, machines: { me: 'parent', points: [ // array of contact points to your servers { port: 8379, // optional override port host: '10.0.18.1', // your server ip (required!) udp: 'udp4', // optional UDP instead TCP childManagerOptions: { // options of the sharding manager that will be sent to the remote machine mode: ChildShardingModes.PROCESSES, shards: { from: 0, to: 127 }, }, tls: { // (this cert used in array of trusted connections on the child sharding manager server) public: '../tls/client.pub', // main ShardingManager tls cert private: '../tls/client.key', // main ShardingMangaer tls private key rejectUnauthorized: true, trustedConnections: [ '../tls/10-0-18-1.pub', '../tls/FE80::0202:B3FF:FE1E:8329.pub' ] // trusted servers tls certs }, }, { host: 'FE80::0202:B3FF:FE1E:8329', // ipv6 also supported childManagerOptions: { mode: ChildShardingModes.WORKERS, shards: { from: 128, to: 255 }, }, tls: { public: '../tls/server.pub', private: '../tls/server.key', rejectUnauthorized: true, trustedConnections: [ '../tls/10-0-18-1.pub', '../tls/FE80::0202:B3FF:FE1E:8329.pub' ] }, } ] } }) manager.start() That's all!","title":"Getting started"},{"location":"api/","text":"Discordoo / Modules Discordoo API docs # Hello! Welcome to the Discordoo API documentation. It contains a precise description for everything in Discordoo. However, this page is not the best place to start. Instead, you should read our guide. Happy coding!","title":"Index"},{"location":"api/#discordoo-api-docs","text":"Hello! Welcome to the Discordoo API documentation. It contains a precise description for everything in Discordoo. However, this page is not the best place to start. Instead, you should read our guide. Happy coding!","title":"Discordoo API docs"},{"location":"api/modules/","text":"Discordoo / Modules Discordoo # Table of contents # Modules # collection core gateway rest sharding utils wrapper","title":"Modules"},{"location":"api/modules/#discordoo","text":"","title":"Discordoo"},{"location":"api/modules/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/#modules","text":"collection core gateway rest sharding utils wrapper","title":"Modules"},{"location":"api/classes/collection.collection-1/","text":"Discordoo / Modules / collection / Collection Class: Collection<K, V> # collection .Collection An utility data structure used within the library Type parameters # Name Type K unknown V unknown Hierarchy # Map < K , V > \u21b3 Collection Table of contents # Constructors # constructor Properties # [toStringTag] size [species] Accessors # empty Methods # [iterator] clear clone concat delete entries equal every filter first firstKey forEach get has intoChunks keys last lastKey map random set some values Constructors # constructor # \u2022 new Collection < K , V >( entries? ) Type parameters # Name Type K unknown V unknown Parameters # Name Type entries? null | readonly readonly [ K , V ][] Inherited from # Map<K, V>.constructor Defined in # node_modules/typescript/lib/lib.es2015.collection.d.ts:32 \u2022 new Collection < K , V >( iterable ) Type parameters # Name Type K unknown V unknown Parameters # Name Type iterable Iterable <readonly [ K , V ]> Inherited from # Map<K, V>.constructor Defined in # node_modules/typescript/lib/lib.es2015.iterable.d.ts:159 Properties # [toStringTag] # \u2022 Readonly [toStringTag] : string Inherited from # Map.__@toStringTag@27 Defined in # node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:135 size # \u2022 Readonly size : number Inherited from # Map.size Defined in # node_modules/typescript/lib/lib.es2015.collection.d.ts:28 [species] # \u25aa Static Readonly [species] : MapConstructor Inherited from # Map.__@species@585 Defined in # node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:317 Accessors # empty # \u2022 get empty (): boolean Returns the collection is empty or not. Returns # boolean Defined in # src/collection/Collection.ts:22 Methods # [iterator] # \u25b8 [iterator] (): IterableIterator <[ K , V ]> Returns an iterable of entries in the map. Returns # IterableIterator <[ K , V ]> Inherited from # Map.__@iterator@84 Defined in # node_modules/typescript/lib/lib.es2015.iterable.d.ts:121 clear # \u25b8 clear (): void Returns # void Inherited from # Map.clear Defined in # node_modules/typescript/lib/lib.es2015.collection.d.ts:22 clone # \u25b8 clone (): Collection < K , V > Creates a new collection based on this one. Returns # Collection < K , V > Defined in # src/collection/Collection.ts:130 concat # \u25b8 concat ( collections ): Collection < K , V > Merges the specified collections into one and returns a new collection. Parameters # Name Type Description collections Collection < K , V >[] collections to merge Returns # Collection < K , V > Defined in # src/collection/Collection.ts:164 delete # \u25b8 delete ( key ): boolean Parameters # Name Type key K Returns # boolean Inherited from # Map.delete Defined in # node_modules/typescript/lib/lib.es2015.collection.d.ts:23 entries # \u25b8 entries (): IterableIterator <[ K , V ]> Returns an iterable of key, value pairs for every entry in the map. Returns # IterableIterator <[ K , V ]> Inherited from # Map.entries Defined in # node_modules/typescript/lib/lib.es2015.iterable.d.ts:126 equal # \u25b8 equal ( collection , options? ): boolean Checks if two collections are equal. Parameters # Name Type Description collection Collection < K , V > collection to compare to options CollectionEqualOptions options to use Returns # boolean Defined in # src/collection/Collection.ts:139 every # \u25b8 every ( predicate ): boolean Checks if all values satisfy the condition. Parameters # Name Type Description predicate ( value : V , key : K , collection : Collection < K , V >) => boolean function to use Returns # boolean Defined in # src/collection/Collection.ts:198 filter # \u25b8 filter < T >( filter , options? ): T extends any [] ? [ K , V ][] : T Filters out the elements which don't meet requirements. Type parameters # Name T Parameters # Name Type Description filter ( value : V , key : K , collection : Collection < K , V >) => unknown function to use options? CollectionFilterOptions filter options Returns # T extends any [] ? [ K , V ][] : T Defined in # src/collection/Collection.ts:86 first # \u25b8 first (): undefined | V Returns first N collection values. Returns # undefined | V Defined in # src/collection/Collection.ts:211 \u25b8 first ( amount ): V [] Parameters # Name Type amount number Returns # V [] Defined in # src/collection/Collection.ts:212 firstKey # \u25b8 firstKey (): undefined | K Returns first N collection keys. Returns # undefined | K Defined in # src/collection/Collection.ts:228 \u25b8 firstKey ( amount ): K [] Parameters # Name Type amount number Returns # K [] Defined in # src/collection/Collection.ts:229 forEach # \u25b8 forEach ( predicate ): void Executes a function on each of elements of map. Parameters # Name Type Description predicate ( value : V , key : K , collection : Collection < K , V >) => unknown function to use Returns # void Overrides # Map.forEach Defined in # src/collection/Collection.ts:123 get # \u25b8 get ( key ): undefined | V Parameters # Name Type key K Returns # undefined | V Inherited from # Map.get Defined in # node_modules/typescript/lib/lib.es2015.collection.d.ts:25 has # \u25b8 has ( key ): boolean Parameters # Name Type key K Returns # boolean Inherited from # Map.has Defined in # node_modules/typescript/lib/lib.es2015.collection.d.ts:26 intoChunks # \u25b8 intoChunks ( size? ): Collection < K , V >[] Returns a collection chunked into several collections. Parameters # Name Type Description size? number chunk size Returns # Collection < K , V >[] Defined in # src/collection/Collection.ts:294 keys # \u25b8 keys (): IterableIterator < K > Returns an iterable of keys in the map Returns # IterableIterator < K > Inherited from # Map.keys Defined in # node_modules/typescript/lib/lib.es2015.iterable.d.ts:131 last # \u25b8 last (): undefined | V Returns last N collection values. Returns # undefined | V Defined in # src/collection/Collection.ts:245 \u25b8 last ( amount ): V [] Parameters # Name Type amount number Returns # V [] Defined in # src/collection/Collection.ts:246 lastKey # \u25b8 lastKey (): undefined | K Returns last N collection keys. Returns # undefined | K Defined in # src/collection/Collection.ts:262 \u25b8 lastKey ( amount ): K [] Parameters # Name Type amount number Returns # K [] Defined in # src/collection/Collection.ts:263 map # \u25b8 map < T >( predicate ): T [] Maps each item to another value into an array Type parameters # Name Type T unknown Parameters # Name Type Description predicate ( value : V , key : K , collection : Collection < K , V >) => T function to use Returns # T [] Defined in # src/collection/Collection.ts:280 random # \u25b8 random (): V Gets a random element from collection (returns non-unique results if the unique option is not specified). Returns # V Defined in # src/collection/Collection.ts:29 \u25b8 random ( amount , options? ): V [] Parameters # Name Type amount number options? CollectionRandomOptions Returns # V [] Defined in # src/collection/Collection.ts:30 \u25b8 random ( amount? , options? ): V | V [] Parameters # Name Type amount? number options? CollectionRandomOptions Returns # V | V [] Defined in # src/collection/Collection.ts:31 set # \u25b8 set ( key , value ): Collection < K , V > Parameters # Name Type key K value V Returns # Collection < K , V > Inherited from # Map.set Defined in # node_modules/typescript/lib/lib.es2015.collection.d.ts:27 some # \u25b8 some ( predicate ): boolean Checks if any of values satisfies the condition. Parameters # Name Type Description predicate ( value : V , key : K , collection : Collection < K , V >) => boolean function to use Returns # boolean Defined in # src/collection/Collection.ts:184 values # \u25b8 values (): IterableIterator < V > Returns an iterable of values in the map Returns # IterableIterator < V > Inherited from # Map.values Defined in # node_modules/typescript/lib/lib.es2015.iterable.d.ts:136","title":"Collection"},{"location":"api/classes/collection.collection-1/#class-collectionk-v","text":"collection .Collection An utility data structure used within the library","title":"Class: Collection&lt;K, V>"},{"location":"api/classes/collection.collection-1/#type-parameters","text":"Name Type K unknown V unknown","title":"Type parameters"},{"location":"api/classes/collection.collection-1/#hierarchy","text":"Map < K , V > \u21b3 Collection","title":"Hierarchy"},{"location":"api/classes/collection.collection-1/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/collection.collection-1/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/collection.collection-1/#properties","text":"[toStringTag] size [species]","title":"Properties"},{"location":"api/classes/collection.collection-1/#accessors","text":"empty","title":"Accessors"},{"location":"api/classes/collection.collection-1/#methods","text":"[iterator] clear clone concat delete entries equal every filter first firstKey forEach get has intoChunks keys last lastKey map random set some values","title":"Methods"},{"location":"api/classes/collection.collection-1/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/collection.collection-1/#constructor","text":"\u2022 new Collection < K , V >( entries? )","title":"constructor"},{"location":"api/classes/collection.collection-1/#properties_1","text":"","title":"Properties"},{"location":"api/classes/collection.collection-1/#tostringtag","text":"\u2022 Readonly [toStringTag] : string","title":"[toStringTag]"},{"location":"api/classes/collection.collection-1/#size","text":"\u2022 Readonly size : number","title":"size"},{"location":"api/classes/collection.collection-1/#species","text":"\u25aa Static Readonly [species] : MapConstructor","title":"[species]"},{"location":"api/classes/collection.collection-1/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/collection.collection-1/#empty","text":"\u2022 get empty (): boolean Returns the collection is empty or not.","title":"empty"},{"location":"api/classes/collection.collection-1/#methods_1","text":"","title":"Methods"},{"location":"api/classes/collection.collection-1/#iterator","text":"\u25b8 [iterator] (): IterableIterator <[ K , V ]> Returns an iterable of entries in the map.","title":"[iterator]"},{"location":"api/classes/collection.collection-1/#clear","text":"\u25b8 clear (): void","title":"clear"},{"location":"api/classes/collection.collection-1/#clone","text":"\u25b8 clone (): Collection < K , V > Creates a new collection based on this one.","title":"clone"},{"location":"api/classes/collection.collection-1/#concat","text":"\u25b8 concat ( collections ): Collection < K , V > Merges the specified collections into one and returns a new collection.","title":"concat"},{"location":"api/classes/collection.collection-1/#delete","text":"\u25b8 delete ( key ): boolean","title":"delete"},{"location":"api/classes/collection.collection-1/#entries","text":"\u25b8 entries (): IterableIterator <[ K , V ]> Returns an iterable of key, value pairs for every entry in the map.","title":"entries"},{"location":"api/classes/collection.collection-1/#equal","text":"\u25b8 equal ( collection , options? ): boolean Checks if two collections are equal.","title":"equal"},{"location":"api/classes/collection.collection-1/#every","text":"\u25b8 every ( predicate ): boolean Checks if all values satisfy the condition.","title":"every"},{"location":"api/classes/collection.collection-1/#filter","text":"\u25b8 filter < T >( filter , options? ): T extends any [] ? [ K , V ][] : T Filters out the elements which don't meet requirements.","title":"filter"},{"location":"api/classes/collection.collection-1/#first","text":"\u25b8 first (): undefined | V Returns first N collection values.","title":"first"},{"location":"api/classes/collection.collection-1/#firstkey","text":"\u25b8 firstKey (): undefined | K Returns first N collection keys.","title":"firstKey"},{"location":"api/classes/collection.collection-1/#foreach","text":"\u25b8 forEach ( predicate ): void Executes a function on each of elements of map.","title":"forEach"},{"location":"api/classes/collection.collection-1/#get","text":"\u25b8 get ( key ): undefined | V","title":"get"},{"location":"api/classes/collection.collection-1/#has","text":"\u25b8 has ( key ): boolean","title":"has"},{"location":"api/classes/collection.collection-1/#intochunks","text":"\u25b8 intoChunks ( size? ): Collection < K , V >[] Returns a collection chunked into several collections.","title":"intoChunks"},{"location":"api/classes/collection.collection-1/#keys","text":"\u25b8 keys (): IterableIterator < K > Returns an iterable of keys in the map","title":"keys"},{"location":"api/classes/collection.collection-1/#last","text":"\u25b8 last (): undefined | V Returns last N collection values.","title":"last"},{"location":"api/classes/collection.collection-1/#lastkey","text":"\u25b8 lastKey (): undefined | K Returns last N collection keys.","title":"lastKey"},{"location":"api/classes/collection.collection-1/#map","text":"\u25b8 map < T >( predicate ): T [] Maps each item to another value into an array","title":"map"},{"location":"api/classes/collection.collection-1/#random","text":"\u25b8 random (): V Gets a random element from collection (returns non-unique results if the unique option is not specified).","title":"random"},{"location":"api/classes/collection.collection-1/#set","text":"\u25b8 set ( key , value ): Collection < K , V >","title":"set"},{"location":"api/classes/collection.collection-1/#some","text":"\u25b8 some ( predicate ): boolean Checks if any of values satisfies the condition.","title":"some"},{"location":"api/classes/collection.collection-1/#values","text":"\u25b8 values (): IterableIterator < V > Returns an iterable of values in the map","title":"values"},{"location":"api/classes/core.client/","text":"Discordoo / Modules / core / Client Class: Client<ClientStack> # core .Client Entry point for all of Discordoo. Manages modules and events Type parameters # Name Type ClientStack extends DefaultClientStack DefaultClientStack Hierarchy # TypedEmitter < ListenerSignature < ClientStack [ \"events\" ]>> \u21b3 Client Table of contents # Constructors # constructor Properties # internals options token defaultMaxListeners Methods # addListener emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners start useCacheProvider useGatewayProvider useRESTProvider Constructors # constructor # \u2022 new Client < ClientStack >( token , options? ) Type parameters # Name Type ClientStack extends DefaultClientStack DefaultClientStack Parameters # Name Type token string options ClientOptions Overrides # TypedEmitter<ListenerSignature<ClientStack['events']\\>\\>.constructor Defined in # src/core/Client.ts:28 Properties # internals # \u2022 internals : ClientInternals < ClientStack > Internal things used by this client Defined in # src/core/Client.ts:25 options # \u2022 options : ClientOptions Options passed to this client Defined in # src/core/Client.ts:28 token # \u2022 token : string Token used by this client Defined in # src/core/Client.ts:22 defaultMaxListeners # \u25aa Static defaultMaxListeners : number Inherited from # TypedEmitter.defaultMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:10 Methods # addListener # \u25b8 addListener < U >( event , listener ): Client < ClientStack > Type parameters # Name Type U extends string | number | symbol Parameters # Name Type event U listener ListenerSignature < ClientStack [ \"events\" ]>[ U ] Returns # Client < ClientStack > Inherited from # TypedEmitter.addListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:11 emit # \u25b8 emit < U >( event , ... args ): boolean Type parameters # Name Type U extends string | number | symbol Parameters # Name Type event U ...args Parameters < ListenerSignature < ClientStack [ \"events\" ]>[ U ]> Returns # boolean Inherited from # TypedEmitter.emit Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:19 eventNames # \u25b8 eventNames < U >(): U [] Type parameters # Name Type U extends string | number | symbol Returns # U [] Inherited from # TypedEmitter.eventNames Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:20 getMaxListeners # \u25b8 getMaxListeners (): number Returns # number Inherited from # TypedEmitter.getMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:24 listenerCount # \u25b8 listenerCount ( type ): number Parameters # Name Type type keyof ClientStack [ \"events\" ] Returns # number Inherited from # TypedEmitter.listenerCount Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:21 listeners # \u25b8 listeners < U >( type ): ListenerSignature < ClientStack [ \"events\" ]>[ U ][] Type parameters # Name Type U extends string | number | symbol Parameters # Name Type type U Returns # ListenerSignature < ClientStack [ \"events\" ]>[ U ][] Inherited from # TypedEmitter.listeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:22 off # \u25b8 off < U >( event , listener ): Client < ClientStack > Type parameters # Name Type U extends string | number | symbol Parameters # Name Type event U listener ListenerSignature < ClientStack [ \"events\" ]>[ U ] Returns # Client < ClientStack > Inherited from # TypedEmitter.off Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:18 on # \u25b8 on < U >( event , listener ): Client < ClientStack > Type parameters # Name Type U extends string | number | symbol Parameters # Name Type event U listener ListenerSignature < ClientStack [ \"events\" ]>[ U ] Returns # Client < ClientStack > Inherited from # TypedEmitter.on Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:17 once # \u25b8 once < U >( event , listener ): Client < ClientStack > Type parameters # Name Type U extends string | number | symbol Parameters # Name Type event U listener ListenerSignature < ClientStack [ \"events\" ]>[ U ] Returns # Client < ClientStack > Inherited from # TypedEmitter.once Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:16 prependListener # \u25b8 prependListener < U >( event , listener ): Client < ClientStack > Type parameters # Name Type U extends string | number | symbol Parameters # Name Type event U listener ListenerSignature < ClientStack [ \"events\" ]>[ U ] Returns # Client < ClientStack > Inherited from # TypedEmitter.prependListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:12 prependOnceListener # \u25b8 prependOnceListener < U >( event , listener ): Client < ClientStack > Type parameters # Name Type U extends string | number | symbol Parameters # Name Type event U listener ListenerSignature < ClientStack [ \"events\" ]>[ U ] Returns # Client < ClientStack > Inherited from # TypedEmitter.prependOnceListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:13 rawListeners # \u25b8 rawListeners < U >( type ): ListenerSignature < ClientStack [ \"events\" ]>[ U ][] Type parameters # Name Type U extends string | number | symbol Parameters # Name Type type U Returns # ListenerSignature < ClientStack [ \"events\" ]>[ U ][] Inherited from # TypedEmitter.rawListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:23 removeAllListeners # \u25b8 removeAllListeners ( event? ): Client < ClientStack > Parameters # Name Type event? keyof ClientStack [ \"events\" ] Returns # Client < ClientStack > Inherited from # TypedEmitter.removeAllListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:15 removeListener # \u25b8 removeListener < U >( event , listener ): Client < ClientStack > Type parameters # Name Type U extends string | number | symbol Parameters # Name Type event U listener ListenerSignature < ClientStack [ \"events\" ]>[ U ] Returns # Client < ClientStack > Inherited from # TypedEmitter.removeListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:14 setMaxListeners # \u25b8 setMaxListeners ( n ): Client < ClientStack > Parameters # Name Type n number Returns # Client < ClientStack > Inherited from # TypedEmitter.setMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:25 start # \u25b8 start (): Promise < void > Returns # Promise < void > Defined in # src/core/Client.ts:113 useCacheProvider # \u25b8 useCacheProvider ( provider , ... options ): void Set the CacheProvider to be used by this client Bounds it's context to Client Parameters # Name Type Description provider CacheProviderConstructor < ClientStack [ \"cache\" ]> function, that returns desired CacheProvider ...options any [] any options to custom cache providers Returns # void Defined in # src/core/Client.ts:100 useGatewayProvider # \u25b8 useGatewayProvider ( provider ): void Set the CacheProvider to be used by this client Bounds it's context to Client Parameters # Name Type Description provider ( client : Client < DefaultClientStack >) => GatewayProvider < ClientStack [ \"gateway\" ]> function, that returns desired CacheProvider Returns # void Defined in # src/core/Client.ts:109 useRESTProvider # \u25b8 useRESTProvider ( provider ): void Set the RESTProvider to be used by this client Bounds it's context to Client Parameters # Name Type Description provider ( client : Client < DefaultClientStack >) => RESTProvider < ClientStack [ \"rest\" ]> function, that returns desired RESTProvider Returns # void Defined in # src/core/Client.ts:90","title":"Client"},{"location":"api/classes/core.client/#class-clientclientstack","text":"core .Client Entry point for all of Discordoo. Manages modules and events","title":"Class: Client&lt;ClientStack>"},{"location":"api/classes/core.client/#type-parameters","text":"Name Type ClientStack extends DefaultClientStack DefaultClientStack","title":"Type parameters"},{"location":"api/classes/core.client/#hierarchy","text":"TypedEmitter < ListenerSignature < ClientStack [ \"events\" ]>> \u21b3 Client","title":"Hierarchy"},{"location":"api/classes/core.client/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/core.client/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/core.client/#properties","text":"internals options token defaultMaxListeners","title":"Properties"},{"location":"api/classes/core.client/#methods","text":"addListener emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners start useCacheProvider useGatewayProvider useRESTProvider","title":"Methods"},{"location":"api/classes/core.client/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/core.client/#constructor","text":"\u2022 new Client < ClientStack >( token , options? )","title":"constructor"},{"location":"api/classes/core.client/#properties_1","text":"","title":"Properties"},{"location":"api/classes/core.client/#internals","text":"\u2022 internals : ClientInternals < ClientStack > Internal things used by this client","title":"internals"},{"location":"api/classes/core.client/#options","text":"\u2022 options : ClientOptions Options passed to this client","title":"options"},{"location":"api/classes/core.client/#token","text":"\u2022 token : string Token used by this client","title":"token"},{"location":"api/classes/core.client/#defaultmaxlisteners","text":"\u25aa Static defaultMaxListeners : number","title":"defaultMaxListeners"},{"location":"api/classes/core.client/#methods_1","text":"","title":"Methods"},{"location":"api/classes/core.client/#addlistener","text":"\u25b8 addListener < U >( event , listener ): Client < ClientStack >","title":"addListener"},{"location":"api/classes/core.client/#emit","text":"\u25b8 emit < U >( event , ... args ): boolean","title":"emit"},{"location":"api/classes/core.client/#eventnames","text":"\u25b8 eventNames < U >(): U []","title":"eventNames"},{"location":"api/classes/core.client/#getmaxlisteners","text":"\u25b8 getMaxListeners (): number","title":"getMaxListeners"},{"location":"api/classes/core.client/#listenercount","text":"\u25b8 listenerCount ( type ): number","title":"listenerCount"},{"location":"api/classes/core.client/#listeners","text":"\u25b8 listeners < U >( type ): ListenerSignature < ClientStack [ \"events\" ]>[ U ][]","title":"listeners"},{"location":"api/classes/core.client/#off","text":"\u25b8 off < U >( event , listener ): Client < ClientStack >","title":"off"},{"location":"api/classes/core.client/#on","text":"\u25b8 on < U >( event , listener ): Client < ClientStack >","title":"on"},{"location":"api/classes/core.client/#once","text":"\u25b8 once < U >( event , listener ): Client < ClientStack >","title":"once"},{"location":"api/classes/core.client/#prependlistener","text":"\u25b8 prependListener < U >( event , listener ): Client < ClientStack >","title":"prependListener"},{"location":"api/classes/core.client/#prependoncelistener","text":"\u25b8 prependOnceListener < U >( event , listener ): Client < ClientStack >","title":"prependOnceListener"},{"location":"api/classes/core.client/#rawlisteners","text":"\u25b8 rawListeners < U >( type ): ListenerSignature < ClientStack [ \"events\" ]>[ U ][]","title":"rawListeners"},{"location":"api/classes/core.client/#removealllisteners","text":"\u25b8 removeAllListeners ( event? ): Client < ClientStack >","title":"removeAllListeners"},{"location":"api/classes/core.client/#removelistener","text":"\u25b8 removeListener < U >( event , listener ): Client < ClientStack >","title":"removeListener"},{"location":"api/classes/core.client/#setmaxlisteners","text":"\u25b8 setMaxListeners ( n ): Client < ClientStack >","title":"setMaxListeners"},{"location":"api/classes/core.client/#start","text":"\u25b8 start (): Promise < void >","title":"start"},{"location":"api/classes/core.client/#usecacheprovider","text":"\u25b8 useCacheProvider ( provider , ... options ): void Set the CacheProvider to be used by this client Bounds it's context to Client","title":"useCacheProvider"},{"location":"api/classes/core.client/#usegatewayprovider","text":"\u25b8 useGatewayProvider ( provider ): void Set the CacheProvider to be used by this client Bounds it's context to Client","title":"useGatewayProvider"},{"location":"api/classes/core.client/#userestprovider","text":"\u25b8 useRESTProvider ( provider ): void Set the RESTProvider to be used by this client Bounds it's context to Client","title":"useRESTProvider"},{"location":"api/classes/gateway.websocketclient/","text":"Discordoo / Modules / gateway / WebSocketClient Class: WebSocketClient # gateway .WebSocketClient Hierarchy # TypedEmitter < WebSocketClientEvents > \u21b3 WebSocketClient Table of contents # Constructors # constructor Properties # _handshakeTimeout _heartbeatInterval closeSequence expectedGuilds id inflate lastPingTimestamp manager missedHeartbeats options ping sequence sessionID socket status defaultMaxListeners Accessors # ready Methods # addListener cleanup connect destroy emit eventNames getMaxListeners handshakeTimeout heartbeat heartbeatInterval identify listenerCount listeners off on onClose onError onMessage onOpen onPacket once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners socketSend Constructors # constructor # \u2022 new WebSocketClient ( manager , id ) Parameters # Name Type manager WebSocketManager id number Overrides # TypedEmitter<WebSocketClientEventsI\\>.constructor Defined in # src/gateway/WebSocketClient.ts:47 Properties # _handshakeTimeout # \u2022 Private Optional _handshakeTimeout : Timeout Defined in # src/gateway/WebSocketClient.ts:35 _heartbeatInterval # \u2022 Private Optional _heartbeatInterval : Timeout Defined in # src/gateway/WebSocketClient.ts:34 closeSequence # \u2022 closeSequence : number = -1 Defined in # src/gateway/WebSocketClient.ts:43 expectedGuilds # \u2022 expectedGuilds : Set < any > Defined in # src/gateway/WebSocketClient.ts:44 id # \u2022 id : number Defined in # src/gateway/WebSocketClient.ts:39 inflate # \u2022 Private Optional inflate : Inflate Defined in # src/gateway/WebSocketClient.ts:33 lastPingTimestamp # \u2022 lastPingTimestamp : number Defined in # src/gateway/WebSocketClient.ts:47 manager # \u2022 manager : WebSocketManager Defined in # src/gateway/WebSocketClient.ts:37 missedHeartbeats # \u2022 missedHeartbeats : number = 0 Defined in # src/gateway/WebSocketClient.ts:45 options # \u2022 Private Readonly options : GatewayOptions Defined in # src/gateway/WebSocketClient.ts:32 ping # \u2022 ping : number = -1 Defined in # src/gateway/WebSocketClient.ts:46 sequence # \u2022 sequence : number = -1 Defined in # src/gateway/WebSocketClient.ts:42 sessionID # \u2022 Optional sessionID : string Defined in # src/gateway/WebSocketClient.ts:41 socket # \u2022 Private Optional socket : WebSocket Defined in # src/gateway/WebSocketClient.ts:31 status # \u2022 status : WebSocketClientStates Defined in # src/gateway/WebSocketClient.ts:38 defaultMaxListeners # \u25aa Static defaultMaxListeners : number Inherited from # TypedEmitter.defaultMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:10 Accessors # ready # \u2022 get ready (): boolean Returns # boolean Defined in # src/gateway/WebSocketClient.ts:289 Methods # addListener # \u25b8 addListener < U >( event , listener ): WebSocketClient Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type event U listener WebSocketClientEvents [ U ] Returns # WebSocketClient Inherited from # TypedEmitter.addListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:11 cleanup # \u25b8 Private cleanup (): void Returns # void Defined in # src/gateway/WebSocketClient.ts:293 connect # \u25b8 connect (): Promise < void > Returns # Promise < void > Defined in # src/gateway/WebSocketClient.ts:59 destroy # \u25b8 destroy ( options? ): void Parameters # Name Type options WebSocketClientDestroyOptions Returns # void Defined in # src/gateway/WebSocketClient.ts:245 emit # \u25b8 emit < U >( event , ... args ): boolean Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type event U ...args Parameters < WebSocketClientEvents [ U ]> Returns # boolean Inherited from # TypedEmitter.emit Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:19 eventNames # \u25b8 eventNames < U >(): U [] Type parameters # Name Type U extends keyof WebSocketClientEvents Returns # U [] Inherited from # TypedEmitter.eventNames Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:20 getMaxListeners # \u25b8 getMaxListeners (): number Returns # number Inherited from # TypedEmitter.getMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:24 handshakeTimeout # \u25b8 handshakeTimeout ( create? ): void this method operates with handshake timeout: when handshake did not occur at the specified time, reconnects client Parameters # Name Type Default value create boolean true Returns # void Defined in # src/gateway/WebSocketClient.ts:164 heartbeat # \u25b8 heartbeat ( shouldIgnoreAck? ): void Parameters # Name Type shouldIgnoreAck boolean Returns # void Defined in # src/gateway/WebSocketClient.ts:186 heartbeatInterval # \u25b8 heartbeatInterval ( ms ): void this method operates with heartbeat interval: it can delete interval, or create new one Parameters # Name Type ms number Returns # void Defined in # src/gateway/WebSocketClient.ts:175 identify # \u25b8 identify (): void Returns # void Defined in # src/gateway/WebSocketClient.ts:153 listenerCount # \u25b8 listenerCount ( type ): number Parameters # Name Type type keyof WebSocketClientEvents Returns # number Inherited from # TypedEmitter.listenerCount Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:21 listeners # \u25b8 listeners < U >( type ): WebSocketClientEvents [ U ][] Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type type U Returns # WebSocketClientEvents [ U ][] Inherited from # TypedEmitter.listeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:22 off # \u25b8 off < U >( event , listener ): WebSocketClient Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type event U listener WebSocketClientEvents [ U ] Returns # WebSocketClient Inherited from # TypedEmitter.off Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:18 on # \u25b8 on < U >( event , listener ): WebSocketClient Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type event U listener WebSocketClientEvents [ U ] Returns # WebSocketClient Inherited from # TypedEmitter.on Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:17 onClose # \u25b8 Private onClose ( event ): void Parameters # Name Type event CloseEvent Returns # void Defined in # src/gateway/WebSocketClient.ts:230 onError # \u25b8 Private onError ( event ): void Parameters # Name Type event ErrorEvent Returns # void Defined in # src/gateway/WebSocketClient.ts:240 onMessage # \u25b8 Private onMessage ( event ): void Parameters # Name Type event MessageEvent Returns # void Defined in # src/gateway/WebSocketClient.ts:220 onOpen # \u25b8 Private onOpen ( event ): void Parameters # Name Type event OpenEvent Returns # void Defined in # src/gateway/WebSocketClient.ts:235 onPacket # \u25b8 Private onPacket ( payload ): void Parameters # Name Type payload WebSocketPacket Returns # void Defined in # src/gateway/WebSocketClient.ts:226 once # \u25b8 once < U >( event , listener ): WebSocketClient Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type event U listener WebSocketClientEvents [ U ] Returns # WebSocketClient Inherited from # TypedEmitter.once Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:16 prependListener # \u25b8 prependListener < U >( event , listener ): WebSocketClient Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type event U listener WebSocketClientEvents [ U ] Returns # WebSocketClient Inherited from # TypedEmitter.prependListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:12 prependOnceListener # \u25b8 prependOnceListener < U >( event , listener ): WebSocketClient Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type event U listener WebSocketClientEvents [ U ] Returns # WebSocketClient Inherited from # TypedEmitter.prependOnceListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:13 rawListeners # \u25b8 rawListeners < U >( type ): WebSocketClientEvents [ U ][] Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type type U Returns # WebSocketClientEvents [ U ][] Inherited from # TypedEmitter.rawListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:23 removeAllListeners # \u25b8 removeAllListeners ( event? ): WebSocketClient Parameters # Name Type event? keyof WebSocketClientEvents Returns # WebSocketClient Inherited from # TypedEmitter.removeAllListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:15 removeListener # \u25b8 removeListener < U >( event , listener ): WebSocketClient Type parameters # Name Type U extends keyof WebSocketClientEvents Parameters # Name Type event U listener WebSocketClientEvents [ U ] Returns # WebSocketClient Inherited from # TypedEmitter.removeListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:14 setMaxListeners # \u25b8 setMaxListeners ( n ): WebSocketClient Parameters # Name Type n number Returns # WebSocketClient Inherited from # TypedEmitter.setMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:25 socketSend # \u25b8 socketSend ( data ): void Parameters # Name Type data WebSocketSendPayload Returns # void Defined in # src/gateway/WebSocketClient.ts:210","title":"WebSocketClient"},{"location":"api/classes/gateway.websocketclient/#class-websocketclient","text":"gateway .WebSocketClient","title":"Class: WebSocketClient"},{"location":"api/classes/gateway.websocketclient/#hierarchy","text":"TypedEmitter < WebSocketClientEvents > \u21b3 WebSocketClient","title":"Hierarchy"},{"location":"api/classes/gateway.websocketclient/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/gateway.websocketclient/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/gateway.websocketclient/#properties","text":"_handshakeTimeout _heartbeatInterval closeSequence expectedGuilds id inflate lastPingTimestamp manager missedHeartbeats options ping sequence sessionID socket status defaultMaxListeners","title":"Properties"},{"location":"api/classes/gateway.websocketclient/#accessors","text":"ready","title":"Accessors"},{"location":"api/classes/gateway.websocketclient/#methods","text":"addListener cleanup connect destroy emit eventNames getMaxListeners handshakeTimeout heartbeat heartbeatInterval identify listenerCount listeners off on onClose onError onMessage onOpen onPacket once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners socketSend","title":"Methods"},{"location":"api/classes/gateway.websocketclient/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/gateway.websocketclient/#constructor","text":"\u2022 new WebSocketClient ( manager , id )","title":"constructor"},{"location":"api/classes/gateway.websocketclient/#properties_1","text":"","title":"Properties"},{"location":"api/classes/gateway.websocketclient/#_handshaketimeout","text":"\u2022 Private Optional _handshakeTimeout : Timeout","title":"_handshakeTimeout"},{"location":"api/classes/gateway.websocketclient/#_heartbeatinterval","text":"\u2022 Private Optional _heartbeatInterval : Timeout","title":"_heartbeatInterval"},{"location":"api/classes/gateway.websocketclient/#closesequence","text":"\u2022 closeSequence : number = -1","title":"closeSequence"},{"location":"api/classes/gateway.websocketclient/#expectedguilds","text":"\u2022 expectedGuilds : Set < any >","title":"expectedGuilds"},{"location":"api/classes/gateway.websocketclient/#id","text":"\u2022 id : number","title":"id"},{"location":"api/classes/gateway.websocketclient/#inflate","text":"\u2022 Private Optional inflate : Inflate","title":"inflate"},{"location":"api/classes/gateway.websocketclient/#lastpingtimestamp","text":"\u2022 lastPingTimestamp : number","title":"lastPingTimestamp"},{"location":"api/classes/gateway.websocketclient/#manager","text":"\u2022 manager : WebSocketManager","title":"manager"},{"location":"api/classes/gateway.websocketclient/#missedheartbeats","text":"\u2022 missedHeartbeats : number = 0","title":"missedHeartbeats"},{"location":"api/classes/gateway.websocketclient/#options","text":"\u2022 Private Readonly options : GatewayOptions","title":"options"},{"location":"api/classes/gateway.websocketclient/#ping","text":"\u2022 ping : number = -1","title":"ping"},{"location":"api/classes/gateway.websocketclient/#sequence","text":"\u2022 sequence : number = -1","title":"sequence"},{"location":"api/classes/gateway.websocketclient/#sessionid","text":"\u2022 Optional sessionID : string","title":"sessionID"},{"location":"api/classes/gateway.websocketclient/#socket","text":"\u2022 Private Optional socket : WebSocket","title":"socket"},{"location":"api/classes/gateway.websocketclient/#status","text":"\u2022 status : WebSocketClientStates","title":"status"},{"location":"api/classes/gateway.websocketclient/#defaultmaxlisteners","text":"\u25aa Static defaultMaxListeners : number","title":"defaultMaxListeners"},{"location":"api/classes/gateway.websocketclient/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/gateway.websocketclient/#ready","text":"\u2022 get ready (): boolean","title":"ready"},{"location":"api/classes/gateway.websocketclient/#methods_1","text":"","title":"Methods"},{"location":"api/classes/gateway.websocketclient/#addlistener","text":"\u25b8 addListener < U >( event , listener ): WebSocketClient","title":"addListener"},{"location":"api/classes/gateway.websocketclient/#cleanup","text":"\u25b8 Private cleanup (): void","title":"cleanup"},{"location":"api/classes/gateway.websocketclient/#connect","text":"\u25b8 connect (): Promise < void >","title":"connect"},{"location":"api/classes/gateway.websocketclient/#destroy","text":"\u25b8 destroy ( options? ): void","title":"destroy"},{"location":"api/classes/gateway.websocketclient/#emit","text":"\u25b8 emit < U >( event , ... args ): boolean","title":"emit"},{"location":"api/classes/gateway.websocketclient/#eventnames","text":"\u25b8 eventNames < U >(): U []","title":"eventNames"},{"location":"api/classes/gateway.websocketclient/#getmaxlisteners","text":"\u25b8 getMaxListeners (): number","title":"getMaxListeners"},{"location":"api/classes/gateway.websocketclient/#handshaketimeout","text":"\u25b8 handshakeTimeout ( create? ): void this method operates with handshake timeout: when handshake did not occur at the specified time, reconnects client","title":"handshakeTimeout"},{"location":"api/classes/gateway.websocketclient/#heartbeat","text":"\u25b8 heartbeat ( shouldIgnoreAck? ): void","title":"heartbeat"},{"location":"api/classes/gateway.websocketclient/#heartbeatinterval","text":"\u25b8 heartbeatInterval ( ms ): void this method operates with heartbeat interval: it can delete interval, or create new one","title":"heartbeatInterval"},{"location":"api/classes/gateway.websocketclient/#identify","text":"\u25b8 identify (): void","title":"identify"},{"location":"api/classes/gateway.websocketclient/#listenercount","text":"\u25b8 listenerCount ( type ): number","title":"listenerCount"},{"location":"api/classes/gateway.websocketclient/#listeners","text":"\u25b8 listeners < U >( type ): WebSocketClientEvents [ U ][]","title":"listeners"},{"location":"api/classes/gateway.websocketclient/#off","text":"\u25b8 off < U >( event , listener ): WebSocketClient","title":"off"},{"location":"api/classes/gateway.websocketclient/#on","text":"\u25b8 on < U >( event , listener ): WebSocketClient","title":"on"},{"location":"api/classes/gateway.websocketclient/#onclose","text":"\u25b8 Private onClose ( event ): void","title":"onClose"},{"location":"api/classes/gateway.websocketclient/#onerror","text":"\u25b8 Private onError ( event ): void","title":"onError"},{"location":"api/classes/gateway.websocketclient/#onmessage","text":"\u25b8 Private onMessage ( event ): void","title":"onMessage"},{"location":"api/classes/gateway.websocketclient/#onopen","text":"\u25b8 Private onOpen ( event ): void","title":"onOpen"},{"location":"api/classes/gateway.websocketclient/#onpacket","text":"\u25b8 Private onPacket ( payload ): void","title":"onPacket"},{"location":"api/classes/gateway.websocketclient/#once","text":"\u25b8 once < U >( event , listener ): WebSocketClient","title":"once"},{"location":"api/classes/gateway.websocketclient/#prependlistener","text":"\u25b8 prependListener < U >( event , listener ): WebSocketClient","title":"prependListener"},{"location":"api/classes/gateway.websocketclient/#prependoncelistener","text":"\u25b8 prependOnceListener < U >( event , listener ): WebSocketClient","title":"prependOnceListener"},{"location":"api/classes/gateway.websocketclient/#rawlisteners","text":"\u25b8 rawListeners < U >( type ): WebSocketClientEvents [ U ][]","title":"rawListeners"},{"location":"api/classes/gateway.websocketclient/#removealllisteners","text":"\u25b8 removeAllListeners ( event? ): WebSocketClient","title":"removeAllListeners"},{"location":"api/classes/gateway.websocketclient/#removelistener","text":"\u25b8 removeListener < U >( event , listener ): WebSocketClient","title":"removeListener"},{"location":"api/classes/gateway.websocketclient/#setmaxlisteners","text":"\u25b8 setMaxListeners ( n ): WebSocketClient","title":"setMaxListeners"},{"location":"api/classes/gateway.websocketclient/#socketsend","text":"\u25b8 socketSend ( data ): void","title":"socketSend"},{"location":"api/classes/gateway.websocketmanager/","text":"Discordoo / Modules / gateway / WebSocketManager Class: WebSocketManager # gateway .WebSocketManager Hierarchy # TypedEmitter < WebSocketManagerEvents > \u21b3 WebSocketManager Table of contents # Constructors # constructor Properties # gateway options queueInterval shardQueue shards status totalShards defaultMaxListeners Methods # addListener connect createShards destroy emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners Constructors # constructor # \u2022 new WebSocketManager ( options ) Parameters # Name Type options Optional < GatewayOptions , \"properties\" | \"intents\" > Overrides # TypedEmitter<WebSocketManagerEvents\\>.constructor Defined in # src/gateway/WebSocketManager.ts:23 Properties # gateway # \u2022 Private Optional gateway : APIGatewayBotInfo Defined in # src/gateway/WebSocketManager.ts:16 options # \u2022 Readonly options : GatewayOptions Defined in # src/gateway/WebSocketManager.ts:15 queueInterval # \u2022 Private Optional queueInterval : Timeout Defined in # src/gateway/WebSocketManager.ts:18 shardQueue # \u2022 Private shardQueue : Set < WebSocketClient > Defined in # src/gateway/WebSocketManager.ts:20 shards # \u2022 shards : Collection < number , WebSocketClient > Defined in # src/gateway/WebSocketManager.ts:23 status # \u2022 Private status : WebSocketManagerStates Defined in # src/gateway/WebSocketManager.ts:17 totalShards # \u2022 totalShards : number = 1 Defined in # src/gateway/WebSocketManager.ts:22 defaultMaxListeners # \u25aa Static defaultMaxListeners : number Inherited from # TypedEmitter.defaultMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:10 Methods # addListener # \u25b8 addListener < U >( event , listener ): WebSocketManager Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type event U listener WebSocketManagerEvents [ U ] Returns # WebSocketManager Inherited from # TypedEmitter.addListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:11 connect # \u25b8 connect ( options? ): Promise < any > Parameters # Name Type options? GatewayConnectOptions Returns # Promise < any > Defined in # src/gateway/WebSocketManager.ts:32 createShards # \u25b8 Private createShards (): any Returns # any Defined in # src/gateway/WebSocketManager.ts:71 destroy # \u25b8 destroy (): void Returns # void Defined in # src/gateway/WebSocketManager.ts:66 emit # \u25b8 emit < U >( event , ... args ): boolean Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type event U ...args Parameters < WebSocketManagerEvents [ U ]> Returns # boolean Inherited from # TypedEmitter.emit Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:19 eventNames # \u25b8 eventNames < U >(): U [] Type parameters # Name Type U extends keyof WebSocketManagerEvents Returns # U [] Inherited from # TypedEmitter.eventNames Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:20 getMaxListeners # \u25b8 getMaxListeners (): number Returns # number Inherited from # TypedEmitter.getMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:24 listenerCount # \u25b8 listenerCount ( type ): number Parameters # Name Type type keyof WebSocketManagerEvents Returns # number Inherited from # TypedEmitter.listenerCount Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:21 listeners # \u25b8 listeners < U >( type ): WebSocketManagerEvents [ U ][] Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type type U Returns # WebSocketManagerEvents [ U ][] Inherited from # TypedEmitter.listeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:22 off # \u25b8 off < U >( event , listener ): WebSocketManager Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type event U listener WebSocketManagerEvents [ U ] Returns # WebSocketManager Inherited from # TypedEmitter.off Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:18 on # \u25b8 on < U >( event , listener ): WebSocketManager Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type event U listener WebSocketManagerEvents [ U ] Returns # WebSocketManager Inherited from # TypedEmitter.on Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:17 once # \u25b8 once < U >( event , listener ): WebSocketManager Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type event U listener WebSocketManagerEvents [ U ] Returns # WebSocketManager Inherited from # TypedEmitter.once Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:16 prependListener # \u25b8 prependListener < U >( event , listener ): WebSocketManager Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type event U listener WebSocketManagerEvents [ U ] Returns # WebSocketManager Inherited from # TypedEmitter.prependListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:12 prependOnceListener # \u25b8 prependOnceListener < U >( event , listener ): WebSocketManager Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type event U listener WebSocketManagerEvents [ U ] Returns # WebSocketManager Inherited from # TypedEmitter.prependOnceListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:13 rawListeners # \u25b8 rawListeners < U >( type ): WebSocketManagerEvents [ U ][] Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type type U Returns # WebSocketManagerEvents [ U ][] Inherited from # TypedEmitter.rawListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:23 removeAllListeners # \u25b8 removeAllListeners ( event? ): WebSocketManager Parameters # Name Type event? keyof WebSocketManagerEvents Returns # WebSocketManager Inherited from # TypedEmitter.removeAllListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:15 removeListener # \u25b8 removeListener < U >( event , listener ): WebSocketManager Type parameters # Name Type U extends keyof WebSocketManagerEvents Parameters # Name Type event U listener WebSocketManagerEvents [ U ] Returns # WebSocketManager Inherited from # TypedEmitter.removeListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:14 setMaxListeners # \u25b8 setMaxListeners ( n ): WebSocketManager Parameters # Name Type n number Returns # WebSocketManager Inherited from # TypedEmitter.setMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:25","title":"WebSocketManager"},{"location":"api/classes/gateway.websocketmanager/#class-websocketmanager","text":"gateway .WebSocketManager","title":"Class: WebSocketManager"},{"location":"api/classes/gateway.websocketmanager/#hierarchy","text":"TypedEmitter < WebSocketManagerEvents > \u21b3 WebSocketManager","title":"Hierarchy"},{"location":"api/classes/gateway.websocketmanager/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/gateway.websocketmanager/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/gateway.websocketmanager/#properties","text":"gateway options queueInterval shardQueue shards status totalShards defaultMaxListeners","title":"Properties"},{"location":"api/classes/gateway.websocketmanager/#methods","text":"addListener connect createShards destroy emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners","title":"Methods"},{"location":"api/classes/gateway.websocketmanager/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/gateway.websocketmanager/#constructor","text":"\u2022 new WebSocketManager ( options )","title":"constructor"},{"location":"api/classes/gateway.websocketmanager/#properties_1","text":"","title":"Properties"},{"location":"api/classes/gateway.websocketmanager/#gateway","text":"\u2022 Private Optional gateway : APIGatewayBotInfo","title":"gateway"},{"location":"api/classes/gateway.websocketmanager/#options","text":"\u2022 Readonly options : GatewayOptions","title":"options"},{"location":"api/classes/gateway.websocketmanager/#queueinterval","text":"\u2022 Private Optional queueInterval : Timeout","title":"queueInterval"},{"location":"api/classes/gateway.websocketmanager/#shardqueue","text":"\u2022 Private shardQueue : Set < WebSocketClient >","title":"shardQueue"},{"location":"api/classes/gateway.websocketmanager/#shards","text":"\u2022 shards : Collection < number , WebSocketClient >","title":"shards"},{"location":"api/classes/gateway.websocketmanager/#status","text":"\u2022 Private status : WebSocketManagerStates","title":"status"},{"location":"api/classes/gateway.websocketmanager/#totalshards","text":"\u2022 totalShards : number = 1","title":"totalShards"},{"location":"api/classes/gateway.websocketmanager/#defaultmaxlisteners","text":"\u25aa Static defaultMaxListeners : number","title":"defaultMaxListeners"},{"location":"api/classes/gateway.websocketmanager/#methods_1","text":"","title":"Methods"},{"location":"api/classes/gateway.websocketmanager/#addlistener","text":"\u25b8 addListener < U >( event , listener ): WebSocketManager","title":"addListener"},{"location":"api/classes/gateway.websocketmanager/#connect","text":"\u25b8 connect ( options? ): Promise < any >","title":"connect"},{"location":"api/classes/gateway.websocketmanager/#createshards","text":"\u25b8 Private createShards (): any","title":"createShards"},{"location":"api/classes/gateway.websocketmanager/#destroy","text":"\u25b8 destroy (): void","title":"destroy"},{"location":"api/classes/gateway.websocketmanager/#emit","text":"\u25b8 emit < U >( event , ... args ): boolean","title":"emit"},{"location":"api/classes/gateway.websocketmanager/#eventnames","text":"\u25b8 eventNames < U >(): U []","title":"eventNames"},{"location":"api/classes/gateway.websocketmanager/#getmaxlisteners","text":"\u25b8 getMaxListeners (): number","title":"getMaxListeners"},{"location":"api/classes/gateway.websocketmanager/#listenercount","text":"\u25b8 listenerCount ( type ): number","title":"listenerCount"},{"location":"api/classes/gateway.websocketmanager/#listeners","text":"\u25b8 listeners < U >( type ): WebSocketManagerEvents [ U ][]","title":"listeners"},{"location":"api/classes/gateway.websocketmanager/#off","text":"\u25b8 off < U >( event , listener ): WebSocketManager","title":"off"},{"location":"api/classes/gateway.websocketmanager/#on","text":"\u25b8 on < U >( event , listener ): WebSocketManager","title":"on"},{"location":"api/classes/gateway.websocketmanager/#once","text":"\u25b8 once < U >( event , listener ): WebSocketManager","title":"once"},{"location":"api/classes/gateway.websocketmanager/#prependlistener","text":"\u25b8 prependListener < U >( event , listener ): WebSocketManager","title":"prependListener"},{"location":"api/classes/gateway.websocketmanager/#prependoncelistener","text":"\u25b8 prependOnceListener < U >( event , listener ): WebSocketManager","title":"prependOnceListener"},{"location":"api/classes/gateway.websocketmanager/#rawlisteners","text":"\u25b8 rawListeners < U >( type ): WebSocketManagerEvents [ U ][]","title":"rawListeners"},{"location":"api/classes/gateway.websocketmanager/#removealllisteners","text":"\u25b8 removeAllListeners ( event? ): WebSocketManager","title":"removeAllListeners"},{"location":"api/classes/gateway.websocketmanager/#removelistener","text":"\u25b8 removeListener < U >( event , listener ): WebSocketManager","title":"removeListener"},{"location":"api/classes/gateway.websocketmanager/#setmaxlisteners","text":"\u25b8 setMaxListeners ( n ): WebSocketManager","title":"setMaxListeners"},{"location":"api/classes/rest.restclient/","text":"Discordoo / Modules / rest / RESTClient Class: RESTClient # rest .RESTClient Helps to send requests to Discord Table of contents # Constructors # constructor Properties # options token Methods # request Constructors # constructor # \u2022 new RESTClient ( token , options? ) Parameters # Name Type Description token string token to use in requests options RESTOptions options Defined in # src/rest/RESTClient.ts:6 Properties # options # \u2022 options : RESTOptions token # \u2022 token : string Methods # request # \u25b8 request ( tokenOverride? ): RESTRequestBuilder Create a request Parameters # Name Type tokenOverride? string Returns # RESTRequestBuilder Defined in # src/rest/RESTClient.ts:14","title":"RESTClient"},{"location":"api/classes/rest.restclient/#class-restclient","text":"rest .RESTClient Helps to send requests to Discord","title":"Class: RESTClient"},{"location":"api/classes/rest.restclient/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/rest.restclient/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/rest.restclient/#properties","text":"options token","title":"Properties"},{"location":"api/classes/rest.restclient/#methods","text":"request","title":"Methods"},{"location":"api/classes/rest.restclient/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/rest.restclient/#constructor","text":"\u2022 new RESTClient ( token , options? )","title":"constructor"},{"location":"api/classes/rest.restclient/#properties_1","text":"","title":"Properties"},{"location":"api/classes/rest.restclient/#options","text":"\u2022 options : RESTOptions","title":"options"},{"location":"api/classes/rest.restclient/#token","text":"\u2022 token : string","title":"token"},{"location":"api/classes/rest.restclient/#methods_1","text":"","title":"Methods"},{"location":"api/classes/rest.restclient/#request","text":"\u25b8 request ( tokenOverride? ): RESTRequestBuilder Create a request","title":"request"},{"location":"api/classes/rest.restproviderbuilder/","text":"Discordoo / Modules / rest / RESTProviderBuilder Class: RESTProviderBuilder # rest .RESTProviderBuilder Builds a RestProvider for Client Table of contents # Constructors # constructor Properties # client Methods # getRestProvider Constructors # constructor # \u2022 new RESTProviderBuilder ( options? ) Parameters # Name Type Description options RESTOptions builder's options Defined in # src/rest/RESTProviderBuilder.ts:10 Properties # client # \u2022 client : RESTClient RESTClient used by this builder Defined in # src/rest/RESTProviderBuilder.ts:10 Methods # getRestProvider # \u25b8 getRestProvider (): ( client : Client < DefaultClientStack >) => RESTProvider < RequestBuilder > Get rest provider Returns # fn \u25b8 ( client ): RESTProvider < RequestBuilder > Parameters # Name Type client Client < DefaultClientStack > Returns # RESTProvider < RequestBuilder > Defined in # src/rest/RESTProviderBuilder.ts:22","title":"RESTProviderBuilder"},{"location":"api/classes/rest.restproviderbuilder/#class-restproviderbuilder","text":"rest .RESTProviderBuilder Builds a RestProvider for Client","title":"Class: RESTProviderBuilder"},{"location":"api/classes/rest.restproviderbuilder/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/rest.restproviderbuilder/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/rest.restproviderbuilder/#properties","text":"client","title":"Properties"},{"location":"api/classes/rest.restproviderbuilder/#methods","text":"getRestProvider","title":"Methods"},{"location":"api/classes/rest.restproviderbuilder/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/rest.restproviderbuilder/#constructor","text":"\u2022 new RESTProviderBuilder ( options? )","title":"constructor"},{"location":"api/classes/rest.restproviderbuilder/#properties_1","text":"","title":"Properties"},{"location":"api/classes/rest.restproviderbuilder/#client","text":"\u2022 client : RESTClient RESTClient used by this builder","title":"client"},{"location":"api/classes/rest.restproviderbuilder/#methods_1","text":"","title":"Methods"},{"location":"api/classes/rest.restproviderbuilder/#getrestprovider","text":"\u25b8 getRestProvider (): ( client : Client < DefaultClientStack >) => RESTProvider < RequestBuilder > Get rest provider","title":"getRestProvider"},{"location":"api/classes/rest.restrequestbuilder/","text":"Discordoo / Modules / rest / RESTRequestBuilder Class: RESTRequestBuilder # rest .RESTRequestBuilder Create requests to Discord internal Implements # RequestBuilder Table of contents # Constructors # constructor Properties # options queryStack retries stack token Accessors # endpoint Methods # delete get getHeaders patch post put query request url Constructors # constructor # \u2022 new RESTRequestBuilder ( token , options ) Parameters # Name Type Description token string token to be used by this request options RESTOptions request options Defined in # src/rest/RESTRequestBuilder.ts:22 Properties # options # \u2022 options : RESTOptions Tokens used by this request Defined in # src/rest/RESTRequestBuilder.ts:22 queryStack # \u2022 Private queryStack : Record < string , string > = {} Query to be built Defined in # src/rest/RESTRequestBuilder.ts:15 retries # \u2022 Private retries : number = 0 Retries done Defined in # src/rest/RESTRequestBuilder.ts:17 stack # \u2022 Private stack : string [] = [] URI parts Defined in # src/rest/RESTRequestBuilder.ts:13 token # \u2022 token : string Token of this request Defined in # src/rest/RESTRequestBuilder.ts:20 Accessors # endpoint # \u2022 get endpoint (): string URI request will be sent to Returns # string Defined in # src/rest/RESTRequestBuilder.ts:65 Methods # delete # \u25b8 delete < T >( options? ): Promise < RESTResponse < T >> Create DELETE request Type parameters # Name T Parameters # Name Type Description options RequestOptions options Returns # Promise < RESTResponse < T >> Implementation of # RequestBuilder . delete Defined in # src/rest/RESTRequestBuilder.ts:159 get # \u25b8 get < T >( options? ): Promise < RESTResponse < T >> Create GET request Type parameters # Name T Parameters # Name Type Description options Omit < RequestOptions , \"body\" > options Returns # Promise < RESTResponse < T >> Implementation of # RequestBuilder . get Defined in # src/rest/RESTRequestBuilder.ts:127 getHeaders # \u25b8 Private getHeaders ( headers? ): Object Get headers Parameters # Name Type headers? Record < any , any > Returns # Object Name Type Authorization string Content-Type string User-Agent string Defined in # src/rest/RESTRequestBuilder.ts:36 patch # \u25b8 patch < T >( options? ): Promise < RESTResponse < T >> Create PATCH request Type parameters # Name T Parameters # Name Type Description options RequestOptions options Returns # Promise < RESTResponse < T >> Implementation of # RequestBuilder . patch Defined in # src/rest/RESTRequestBuilder.ts:143 post # \u25b8 post < T >( options? ): Promise < RESTResponse < T >> Create POST request Type parameters # Name T Parameters # Name Type Description options RequestOptions options Returns # Promise < RESTResponse < T >> Implementation of # RequestBuilder . post Defined in # src/rest/RESTRequestBuilder.ts:135 put # \u25b8 put < T >( options? ): Promise < RESTResponse < T >> Create PUT request Type parameters # Name T Parameters # Name Type Description options RequestOptions options Returns # Promise < RESTResponse < T >> Implementation of # RequestBuilder . put Defined in # src/rest/RESTRequestBuilder.ts:151 query # \u25b8 query ( k , v ): RequestBuilder Add query data Parameters # Name Type Description k string key v any value Returns # RequestBuilder Implementation of # RequestBuilder . query Defined in # src/rest/RESTRequestBuilder.ts:50 request # \u25b8 request < T >( method , options? ): Promise < RESTResponse < T >> Create a request Type parameters # Name T Parameters # Name Type Description method \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\" method to be used options RequestOptions options Returns # Promise < RESTResponse < T >> Defined in # src/rest/RESTRequestBuilder.ts:78 url # \u25b8 url (... paths ): RequestBuilder Add part(s) to the URI Parameters # Name Type Description ...paths string [] paths Returns # RequestBuilder Implementation of # RequestBuilder . url Defined in # src/rest/RESTRequestBuilder.ts:59","title":"RESTRequestBuilder"},{"location":"api/classes/rest.restrequestbuilder/#class-restrequestbuilder","text":"rest .RESTRequestBuilder Create requests to Discord internal","title":"Class: RESTRequestBuilder"},{"location":"api/classes/rest.restrequestbuilder/#implements","text":"RequestBuilder","title":"Implements"},{"location":"api/classes/rest.restrequestbuilder/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/rest.restrequestbuilder/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/rest.restrequestbuilder/#properties","text":"options queryStack retries stack token","title":"Properties"},{"location":"api/classes/rest.restrequestbuilder/#accessors","text":"endpoint","title":"Accessors"},{"location":"api/classes/rest.restrequestbuilder/#methods","text":"delete get getHeaders patch post put query request url","title":"Methods"},{"location":"api/classes/rest.restrequestbuilder/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/rest.restrequestbuilder/#constructor","text":"\u2022 new RESTRequestBuilder ( token , options )","title":"constructor"},{"location":"api/classes/rest.restrequestbuilder/#properties_1","text":"","title":"Properties"},{"location":"api/classes/rest.restrequestbuilder/#options","text":"\u2022 options : RESTOptions Tokens used by this request","title":"options"},{"location":"api/classes/rest.restrequestbuilder/#querystack","text":"\u2022 Private queryStack : Record < string , string > = {} Query to be built","title":"queryStack"},{"location":"api/classes/rest.restrequestbuilder/#retries","text":"\u2022 Private retries : number = 0 Retries done","title":"retries"},{"location":"api/classes/rest.restrequestbuilder/#stack","text":"\u2022 Private stack : string [] = [] URI parts","title":"stack"},{"location":"api/classes/rest.restrequestbuilder/#token","text":"\u2022 token : string Token of this request","title":"token"},{"location":"api/classes/rest.restrequestbuilder/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/rest.restrequestbuilder/#endpoint","text":"\u2022 get endpoint (): string URI request will be sent to","title":"endpoint"},{"location":"api/classes/rest.restrequestbuilder/#methods_1","text":"","title":"Methods"},{"location":"api/classes/rest.restrequestbuilder/#delete","text":"\u25b8 delete < T >( options? ): Promise < RESTResponse < T >> Create DELETE request","title":"delete"},{"location":"api/classes/rest.restrequestbuilder/#get","text":"\u25b8 get < T >( options? ): Promise < RESTResponse < T >> Create GET request","title":"get"},{"location":"api/classes/rest.restrequestbuilder/#getheaders","text":"\u25b8 Private getHeaders ( headers? ): Object Get headers","title":"getHeaders"},{"location":"api/classes/rest.restrequestbuilder/#patch","text":"\u25b8 patch < T >( options? ): Promise < RESTResponse < T >> Create PATCH request","title":"patch"},{"location":"api/classes/rest.restrequestbuilder/#post","text":"\u25b8 post < T >( options? ): Promise < RESTResponse < T >> Create POST request","title":"post"},{"location":"api/classes/rest.restrequestbuilder/#put","text":"\u25b8 put < T >( options? ): Promise < RESTResponse < T >> Create PUT request","title":"put"},{"location":"api/classes/rest.restrequestbuilder/#query","text":"\u25b8 query ( k , v ): RequestBuilder Add query data","title":"query"},{"location":"api/classes/rest.restrequestbuilder/#request","text":"\u25b8 request < T >( method , options? ): Promise < RESTResponse < T >> Create a request","title":"request"},{"location":"api/classes/rest.restrequestbuilder/#url","text":"\u25b8 url (... paths ): RequestBuilder Add part(s) to the URI","title":"url"},{"location":"api/classes/sharding.ipcclient/","text":"Discordoo / Modules / sharding / IpcClient Class: IpcClient # sharding .IpcClient Hierarchy # TypedEmitter \u21b3 IpcClient Table of contents # Constructors # constructor Properties # bucket eventsHandler helloInterval id ipc managerId shardIpcId shardSocket shards totalShards defaultMaxListeners Methods # addListener connect emit eventNames generate getMaxListeners hello listenerCount listeners off on onPacket once prependListener prependOnceListener rawListeners removeAllListeners removeListener send sendHeartbeat setMaxListeners Constructors # constructor # \u2022 new IpcClient ( options ) Parameters # Name Type options IpcClientOptions Overrides # TypedEmitter.constructor Defined in # src/sharding/ipc/IpcClient.ts:22 Properties # bucket # \u2022 Private bucket : Collection < string , any > Defined in # src/sharding/ipc/IpcClient.ts:12 eventsHandler # \u2022 Private Readonly eventsHandler : any Defined in # src/sharding/ipc/IpcClient.ts:15 helloInterval # \u2022 Private Optional helloInterval : Timeout Defined in # src/sharding/ipc/IpcClient.ts:17 id # \u2022 id : number Defined in # src/sharding/ipc/IpcClient.ts:21 ipc # \u2022 ipc : IPC Defined in # src/sharding/ipc/IpcClient.ts:19 managerId # \u2022 Private Readonly managerId : string Defined in # src/sharding/ipc/IpcClient.ts:16 shardIpcId # \u2022 Private Readonly shardIpcId : string Defined in # src/sharding/ipc/IpcClient.ts:14 shardSocket # \u2022 Private shardSocket : any Defined in # src/sharding/ipc/IpcClient.ts:13 shards # \u2022 shards : number [] Defined in # src/sharding/ipc/IpcClient.ts:20 totalShards # \u2022 totalShards : number Defined in # src/sharding/ipc/IpcClient.ts:22 defaultMaxListeners # \u25aa Static defaultMaxListeners : number Inherited from # TypedEmitter.defaultMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:10 Methods # addListener # \u25b8 addListener < U >( event , listener ): IpcClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcClient Inherited from # TypedEmitter.addListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:11 connect # \u25b8 connect (): Promise < unknown > Returns # Promise < unknown > Defined in # src/sharding/ipc/IpcClient.ts:41 emit # \u25b8 emit < U >( event , ... args ): boolean Type parameters # Name Type U extends string | number Parameters # Name Type event U ...args Parameters < DefaultListener [ U ]> Returns # boolean Inherited from # TypedEmitter.emit Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:19 eventNames # \u25b8 eventNames < U >(): U [] Type parameters # Name Type U extends string | number Returns # U [] Inherited from # TypedEmitter.eventNames Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:20 generate # \u25b8 Private generate (): string Returns # string Defined in # src/sharding/ipc/IpcClient.ts:142 getMaxListeners # \u25b8 getMaxListeners (): number Returns # number Inherited from # TypedEmitter.getMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:24 hello # \u25b8 Private hello ( connection ): void Parameters # Name Type connection any Returns # void Defined in # src/sharding/ipc/IpcClient.ts:93 listenerCount # \u25b8 listenerCount ( type ): number Parameters # Name Type type string | number Returns # number Inherited from # TypedEmitter.listenerCount Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:21 listeners # \u25b8 listeners < U >( type ): DefaultListener [ U ][] Type parameters # Name Type U extends string | number Parameters # Name Type type U Returns # DefaultListener [ U ][] Inherited from # TypedEmitter.listeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:22 off # \u25b8 off < U >( event , listener ): IpcClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcClient Inherited from # TypedEmitter.off Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:18 on # \u25b8 on < U >( event , listener ): IpcClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcClient Inherited from # TypedEmitter.on Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:17 onPacket # \u25b8 Private onPacket ( packet ): void Parameters # Name Type packet IpcPacket Returns # void Defined in # src/sharding/ipc/IpcClient.ts:75 once # \u25b8 once < U >( event , listener ): IpcClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcClient Inherited from # TypedEmitter.once Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:16 prependListener # \u25b8 prependListener < U >( event , listener ): IpcClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcClient Inherited from # TypedEmitter.prependListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:12 prependOnceListener # \u25b8 prependOnceListener < U >( event , listener ): IpcClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcClient Inherited from # TypedEmitter.prependOnceListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:13 rawListeners # \u25b8 rawListeners < U >( type ): DefaultListener [ U ][] Type parameters # Name Type U extends string | number Parameters # Name Type type U Returns # DefaultListener [ U ][] Inherited from # TypedEmitter.rawListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:23 removeAllListeners # \u25b8 removeAllListeners ( event? ): IpcClient Parameters # Name Type event? string | number Returns # IpcClient Inherited from # TypedEmitter.removeAllListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:15 removeListener # \u25b8 removeListener < U >( event , listener ): IpcClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcClient Inherited from # TypedEmitter.removeListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:14 send # \u25b8 send ( data , options? ): Promise < unknown > Parameters # Name Type data IpcPacket options IpcClientSendOptions Returns # Promise < unknown > Defined in # src/sharding/ipc/IpcClient.ts:120 sendHeartbeat # \u25b8 Private sendHeartbeat (): void Returns # void Defined in # src/sharding/ipc/IpcClient.ts:108 setMaxListeners # \u25b8 setMaxListeners ( n ): IpcClient Parameters # Name Type n number Returns # IpcClient Inherited from # TypedEmitter.setMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:25","title":"IpcClient"},{"location":"api/classes/sharding.ipcclient/#class-ipcclient","text":"sharding .IpcClient","title":"Class: IpcClient"},{"location":"api/classes/sharding.ipcclient/#hierarchy","text":"TypedEmitter \u21b3 IpcClient","title":"Hierarchy"},{"location":"api/classes/sharding.ipcclient/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/sharding.ipcclient/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/sharding.ipcclient/#properties","text":"bucket eventsHandler helloInterval id ipc managerId shardIpcId shardSocket shards totalShards defaultMaxListeners","title":"Properties"},{"location":"api/classes/sharding.ipcclient/#methods","text":"addListener connect emit eventNames generate getMaxListeners hello listenerCount listeners off on onPacket once prependListener prependOnceListener rawListeners removeAllListeners removeListener send sendHeartbeat setMaxListeners","title":"Methods"},{"location":"api/classes/sharding.ipcclient/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/sharding.ipcclient/#constructor","text":"\u2022 new IpcClient ( options )","title":"constructor"},{"location":"api/classes/sharding.ipcclient/#properties_1","text":"","title":"Properties"},{"location":"api/classes/sharding.ipcclient/#bucket","text":"\u2022 Private bucket : Collection < string , any >","title":"bucket"},{"location":"api/classes/sharding.ipcclient/#eventshandler","text":"\u2022 Private Readonly eventsHandler : any","title":"eventsHandler"},{"location":"api/classes/sharding.ipcclient/#hellointerval","text":"\u2022 Private Optional helloInterval : Timeout","title":"helloInterval"},{"location":"api/classes/sharding.ipcclient/#id","text":"\u2022 id : number","title":"id"},{"location":"api/classes/sharding.ipcclient/#ipc","text":"\u2022 ipc : IPC","title":"ipc"},{"location":"api/classes/sharding.ipcclient/#managerid","text":"\u2022 Private Readonly managerId : string","title":"managerId"},{"location":"api/classes/sharding.ipcclient/#shardipcid","text":"\u2022 Private Readonly shardIpcId : string","title":"shardIpcId"},{"location":"api/classes/sharding.ipcclient/#shardsocket","text":"\u2022 Private shardSocket : any","title":"shardSocket"},{"location":"api/classes/sharding.ipcclient/#shards","text":"\u2022 shards : number []","title":"shards"},{"location":"api/classes/sharding.ipcclient/#totalshards","text":"\u2022 totalShards : number","title":"totalShards"},{"location":"api/classes/sharding.ipcclient/#defaultmaxlisteners","text":"\u25aa Static defaultMaxListeners : number","title":"defaultMaxListeners"},{"location":"api/classes/sharding.ipcclient/#methods_1","text":"","title":"Methods"},{"location":"api/classes/sharding.ipcclient/#addlistener","text":"\u25b8 addListener < U >( event , listener ): IpcClient","title":"addListener"},{"location":"api/classes/sharding.ipcclient/#connect","text":"\u25b8 connect (): Promise < unknown >","title":"connect"},{"location":"api/classes/sharding.ipcclient/#emit","text":"\u25b8 emit < U >( event , ... args ): boolean","title":"emit"},{"location":"api/classes/sharding.ipcclient/#eventnames","text":"\u25b8 eventNames < U >(): U []","title":"eventNames"},{"location":"api/classes/sharding.ipcclient/#generate","text":"\u25b8 Private generate (): string","title":"generate"},{"location":"api/classes/sharding.ipcclient/#getmaxlisteners","text":"\u25b8 getMaxListeners (): number","title":"getMaxListeners"},{"location":"api/classes/sharding.ipcclient/#hello","text":"\u25b8 Private hello ( connection ): void","title":"hello"},{"location":"api/classes/sharding.ipcclient/#listenercount","text":"\u25b8 listenerCount ( type ): number","title":"listenerCount"},{"location":"api/classes/sharding.ipcclient/#listeners","text":"\u25b8 listeners < U >( type ): DefaultListener [ U ][]","title":"listeners"},{"location":"api/classes/sharding.ipcclient/#off","text":"\u25b8 off < U >( event , listener ): IpcClient","title":"off"},{"location":"api/classes/sharding.ipcclient/#on","text":"\u25b8 on < U >( event , listener ): IpcClient","title":"on"},{"location":"api/classes/sharding.ipcclient/#onpacket","text":"\u25b8 Private onPacket ( packet ): void","title":"onPacket"},{"location":"api/classes/sharding.ipcclient/#once","text":"\u25b8 once < U >( event , listener ): IpcClient","title":"once"},{"location":"api/classes/sharding.ipcclient/#prependlistener","text":"\u25b8 prependListener < U >( event , listener ): IpcClient","title":"prependListener"},{"location":"api/classes/sharding.ipcclient/#prependoncelistener","text":"\u25b8 prependOnceListener < U >( event , listener ): IpcClient","title":"prependOnceListener"},{"location":"api/classes/sharding.ipcclient/#rawlisteners","text":"\u25b8 rawListeners < U >( type ): DefaultListener [ U ][]","title":"rawListeners"},{"location":"api/classes/sharding.ipcclient/#removealllisteners","text":"\u25b8 removeAllListeners ( event? ): IpcClient","title":"removeAllListeners"},{"location":"api/classes/sharding.ipcclient/#removelistener","text":"\u25b8 removeListener < U >( event , listener ): IpcClient","title":"removeListener"},{"location":"api/classes/sharding.ipcclient/#send","text":"\u25b8 send ( data , options? ): Promise < unknown >","title":"send"},{"location":"api/classes/sharding.ipcclient/#sendheartbeat","text":"\u25b8 Private sendHeartbeat (): void","title":"sendHeartbeat"},{"location":"api/classes/sharding.ipcclient/#setmaxlisteners","text":"\u25b8 setMaxListeners ( n ): IpcClient","title":"setMaxListeners"},{"location":"api/classes/sharding.ipcserver/","text":"Discordoo / Modules / sharding / IpcServer Class: IpcServer # sharding .IpcServer Hierarchy # TypedEmitter \u21b3 IpcServer Table of contents # Constructors # constructor Properties # bucket eventsHandler id ipc managerId managerSocket server shardID shards totalShards defaultMaxListeners Methods # addListener destroy dispatch emit eventNames generate getMaxListeners hello identify listenerCount listeners off on onPacket once prependListener prependOnceListener rawListeners removeAllListeners removeListener send serve setMaxListeners Constructors # constructor # \u2022 new IpcServer ( options ) Parameters # Name Type options IpcServerOptions Overrides # TypedEmitter.constructor Defined in # src/sharding/ipc/IpcServer.ts:22 Properties # bucket # \u2022 Private bucket : Collection < string , any > Defined in # src/sharding/ipc/IpcServer.ts:12 eventsHandler # \u2022 Private Readonly eventsHandler : any Defined in # src/sharding/ipc/IpcServer.ts:15 id # \u2022 id : string Defined in # src/sharding/ipc/IpcServer.ts:19 ipc # \u2022 ipc : IPC Defined in # src/sharding/ipc/IpcServer.ts:17 managerId # \u2022 Private Readonly managerId : string Defined in # src/sharding/ipc/IpcServer.ts:14 managerSocket # \u2022 Private managerSocket : any Defined in # src/sharding/ipc/IpcServer.ts:13 server # \u2022 Optional server : Server Defined in # src/sharding/ipc/IpcServer.ts:18 shardID # \u2022 shardID : number Defined in # src/sharding/ipc/IpcServer.ts:20 shards # \u2022 Optional shards : number [] Defined in # src/sharding/ipc/IpcServer.ts:21 totalShards # \u2022 Optional totalShards : number Defined in # src/sharding/ipc/IpcServer.ts:22 defaultMaxListeners # \u25aa Static defaultMaxListeners : number Inherited from # TypedEmitter.defaultMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:10 Methods # addListener # \u25b8 addListener < U >( event , listener ): IpcServer Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcServer Inherited from # TypedEmitter.addListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:11 destroy # \u25b8 destroy (): void Returns # void Defined in # src/sharding/ipc/IpcServer.ts:62 dispatch # \u25b8 Private dispatch ( packet ): void Parameters # Name Type packet IpcDispatchPacket Returns # void Defined in # src/sharding/ipc/IpcServer.ts:124 emit # \u25b8 emit < U >( event , ... args ): boolean Type parameters # Name Type U extends string | number Parameters # Name Type event U ...args Parameters < DefaultListener [ U ]> Returns # boolean Inherited from # TypedEmitter.emit Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:19 eventNames # \u25b8 eventNames < U >(): U [] Type parameters # Name Type U extends string | number Returns # U [] Inherited from # TypedEmitter.eventNames Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:20 generate # \u25b8 Private generate (): string Returns # string Defined in # src/sharding/ipc/IpcServer.ts:157 getMaxListeners # \u25b8 getMaxListeners (): number Returns # number Inherited from # TypedEmitter.getMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:24 hello # \u25b8 Private hello ( packet , socket ): undefined | Promise < unknown > Parameters # Name Type packet IpcHelloPacket socket any Returns # undefined | Promise < unknown > Defined in # src/sharding/ipc/IpcServer.ts:93 identify # \u25b8 Private identify ( packet ): void Parameters # Name Type packet IpcHelloPacket Returns # void Defined in # src/sharding/ipc/IpcServer.ts:112 listenerCount # \u25b8 listenerCount ( type ): number Parameters # Name Type type string | number Returns # number Inherited from # TypedEmitter.listenerCount Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:21 listeners # \u25b8 listeners < U >( type ): DefaultListener [ U ][] Type parameters # Name Type U extends string | number Parameters # Name Type type U Returns # DefaultListener [ U ][] Inherited from # TypedEmitter.listeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:22 off # \u25b8 off < U >( event , listener ): IpcServer Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcServer Inherited from # TypedEmitter.off Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:18 on # \u25b8 on < U >( event , listener ): IpcServer Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcServer Inherited from # TypedEmitter.on Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:17 onPacket # \u25b8 Private onPacket ( packet , socket ): void Parameters # Name Type packet IpcPacket socket any Returns # void Defined in # src/sharding/ipc/IpcServer.ts:70 once # \u25b8 once < U >( event , listener ): IpcServer Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcServer Inherited from # TypedEmitter.once Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:16 prependListener # \u25b8 prependListener < U >( event , listener ): IpcServer Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcServer Inherited from # TypedEmitter.prependListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:12 prependOnceListener # \u25b8 prependOnceListener < U >( event , listener ): IpcServer Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcServer Inherited from # TypedEmitter.prependOnceListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:13 rawListeners # \u25b8 rawListeners < U >( type ): DefaultListener [ U ][] Type parameters # Name Type U extends string | number Parameters # Name Type type U Returns # DefaultListener [ U ][] Inherited from # TypedEmitter.rawListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:23 removeAllListeners # \u25b8 removeAllListeners ( event? ): IpcServer Parameters # Name Type event? string | number Returns # IpcServer Inherited from # TypedEmitter.removeAllListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:15 removeListener # \u25b8 removeListener < U >( event , listener ): IpcServer Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # IpcServer Inherited from # TypedEmitter.removeListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:14 send # \u25b8 send ( data , options? ): Promise < unknown > Parameters # Name Type data IpcPacket options IpcServerSendOptions Returns # Promise < unknown > Defined in # src/sharding/ipc/IpcServer.ts:133 serve # \u25b8 serve (): Promise < unknown > Returns # Promise < unknown > Defined in # src/sharding/ipc/IpcServer.ts:40 setMaxListeners # \u25b8 setMaxListeners ( n ): IpcServer Parameters # Name Type n number Returns # IpcServer Inherited from # TypedEmitter.setMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:25","title":"IpcServer"},{"location":"api/classes/sharding.ipcserver/#class-ipcserver","text":"sharding .IpcServer","title":"Class: IpcServer"},{"location":"api/classes/sharding.ipcserver/#hierarchy","text":"TypedEmitter \u21b3 IpcServer","title":"Hierarchy"},{"location":"api/classes/sharding.ipcserver/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/sharding.ipcserver/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/sharding.ipcserver/#properties","text":"bucket eventsHandler id ipc managerId managerSocket server shardID shards totalShards defaultMaxListeners","title":"Properties"},{"location":"api/classes/sharding.ipcserver/#methods","text":"addListener destroy dispatch emit eventNames generate getMaxListeners hello identify listenerCount listeners off on onPacket once prependListener prependOnceListener rawListeners removeAllListeners removeListener send serve setMaxListeners","title":"Methods"},{"location":"api/classes/sharding.ipcserver/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/sharding.ipcserver/#constructor","text":"\u2022 new IpcServer ( options )","title":"constructor"},{"location":"api/classes/sharding.ipcserver/#properties_1","text":"","title":"Properties"},{"location":"api/classes/sharding.ipcserver/#bucket","text":"\u2022 Private bucket : Collection < string , any >","title":"bucket"},{"location":"api/classes/sharding.ipcserver/#eventshandler","text":"\u2022 Private Readonly eventsHandler : any","title":"eventsHandler"},{"location":"api/classes/sharding.ipcserver/#id","text":"\u2022 id : string","title":"id"},{"location":"api/classes/sharding.ipcserver/#ipc","text":"\u2022 ipc : IPC","title":"ipc"},{"location":"api/classes/sharding.ipcserver/#managerid","text":"\u2022 Private Readonly managerId : string","title":"managerId"},{"location":"api/classes/sharding.ipcserver/#managersocket","text":"\u2022 Private managerSocket : any","title":"managerSocket"},{"location":"api/classes/sharding.ipcserver/#server","text":"\u2022 Optional server : Server","title":"server"},{"location":"api/classes/sharding.ipcserver/#shardid","text":"\u2022 shardID : number","title":"shardID"},{"location":"api/classes/sharding.ipcserver/#shards","text":"\u2022 Optional shards : number []","title":"shards"},{"location":"api/classes/sharding.ipcserver/#totalshards","text":"\u2022 Optional totalShards : number","title":"totalShards"},{"location":"api/classes/sharding.ipcserver/#defaultmaxlisteners","text":"\u25aa Static defaultMaxListeners : number","title":"defaultMaxListeners"},{"location":"api/classes/sharding.ipcserver/#methods_1","text":"","title":"Methods"},{"location":"api/classes/sharding.ipcserver/#addlistener","text":"\u25b8 addListener < U >( event , listener ): IpcServer","title":"addListener"},{"location":"api/classes/sharding.ipcserver/#destroy","text":"\u25b8 destroy (): void","title":"destroy"},{"location":"api/classes/sharding.ipcserver/#dispatch","text":"\u25b8 Private dispatch ( packet ): void","title":"dispatch"},{"location":"api/classes/sharding.ipcserver/#emit","text":"\u25b8 emit < U >( event , ... args ): boolean","title":"emit"},{"location":"api/classes/sharding.ipcserver/#eventnames","text":"\u25b8 eventNames < U >(): U []","title":"eventNames"},{"location":"api/classes/sharding.ipcserver/#generate","text":"\u25b8 Private generate (): string","title":"generate"},{"location":"api/classes/sharding.ipcserver/#getmaxlisteners","text":"\u25b8 getMaxListeners (): number","title":"getMaxListeners"},{"location":"api/classes/sharding.ipcserver/#hello","text":"\u25b8 Private hello ( packet , socket ): undefined | Promise < unknown >","title":"hello"},{"location":"api/classes/sharding.ipcserver/#identify","text":"\u25b8 Private identify ( packet ): void","title":"identify"},{"location":"api/classes/sharding.ipcserver/#listenercount","text":"\u25b8 listenerCount ( type ): number","title":"listenerCount"},{"location":"api/classes/sharding.ipcserver/#listeners","text":"\u25b8 listeners < U >( type ): DefaultListener [ U ][]","title":"listeners"},{"location":"api/classes/sharding.ipcserver/#off","text":"\u25b8 off < U >( event , listener ): IpcServer","title":"off"},{"location":"api/classes/sharding.ipcserver/#on","text":"\u25b8 on < U >( event , listener ): IpcServer","title":"on"},{"location":"api/classes/sharding.ipcserver/#onpacket","text":"\u25b8 Private onPacket ( packet , socket ): void","title":"onPacket"},{"location":"api/classes/sharding.ipcserver/#once","text":"\u25b8 once < U >( event , listener ): IpcServer","title":"once"},{"location":"api/classes/sharding.ipcserver/#prependlistener","text":"\u25b8 prependListener < U >( event , listener ): IpcServer","title":"prependListener"},{"location":"api/classes/sharding.ipcserver/#prependoncelistener","text":"\u25b8 prependOnceListener < U >( event , listener ): IpcServer","title":"prependOnceListener"},{"location":"api/classes/sharding.ipcserver/#rawlisteners","text":"\u25b8 rawListeners < U >( type ): DefaultListener [ U ][]","title":"rawListeners"},{"location":"api/classes/sharding.ipcserver/#removealllisteners","text":"\u25b8 removeAllListeners ( event? ): IpcServer","title":"removeAllListeners"},{"location":"api/classes/sharding.ipcserver/#removelistener","text":"\u25b8 removeListener < U >( event , listener ): IpcServer","title":"removeListener"},{"location":"api/classes/sharding.ipcserver/#send","text":"\u25b8 send ( data , options? ): Promise < unknown >","title":"send"},{"location":"api/classes/sharding.ipcserver/#serve","text":"\u25b8 serve (): Promise < unknown >","title":"serve"},{"location":"api/classes/sharding.ipcserver/#setmaxlisteners","text":"\u25b8 setMaxListeners ( n ): IpcServer","title":"setMaxListeners"},{"location":"api/classes/sharding.shardingclient/","text":"Discordoo / Modules / sharding / ShardingClient Class: ShardingClient # sharding .ShardingClient Hierarchy # TypedEmitter \u21b3 ShardingClient Table of contents # Constructors # constructor Properties # id ipc ipcId mode options rawShard shards totalShards defaultMaxListeners Methods # addListener create emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners Constructors # constructor # \u2022 new ShardingClient ( options ) Parameters # Name Type options ShardingClientOptions Overrides # TypedEmitter.constructor Defined in # src/sharding/ShardingClient.ts:19 Properties # id # \u2022 id : number Defined in # src/sharding/ShardingClient.ts:12 ipc # \u2022 ipc : IpcClient Defined in # src/sharding/ShardingClient.ts:14 ipcId # \u2022 ipcId : string Defined in # src/sharding/ShardingClient.ts:13 mode # \u2022 mode : PartialShardingModes Defined in # src/sharding/ShardingClient.ts:16 options # \u2022 options : ShardingClientOptions Defined in # src/sharding/ShardingClient.ts:17 rawShard # \u2022 Optional rawShard : Worker | Worker | ChildProcess Defined in # src/sharding/ShardingClient.ts:19 shards # \u2022 shards : number [] Defined in # src/sharding/ShardingClient.ts:15 totalShards # \u2022 totalShards : number Defined in # src/sharding/ShardingClient.ts:18 defaultMaxListeners # \u25aa Static defaultMaxListeners : number Inherited from # TypedEmitter.defaultMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:10 Methods # addListener # \u25b8 addListener < U >( event , listener ): ShardingClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # ShardingClient Inherited from # TypedEmitter.addListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:11 create # \u25b8 create ( options? ): Promise < unknown > Parameters # Name Type options ShardingClientCreateOptions Returns # Promise < unknown > Defined in # src/sharding/ShardingClient.ts:41 emit # \u25b8 emit < U >( event , ... args ): boolean Type parameters # Name Type U extends string | number Parameters # Name Type event U ...args Parameters < DefaultListener [ U ]> Returns # boolean Inherited from # TypedEmitter.emit Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:19 eventNames # \u25b8 eventNames < U >(): U [] Type parameters # Name Type U extends string | number Returns # U [] Inherited from # TypedEmitter.eventNames Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:20 getMaxListeners # \u25b8 getMaxListeners (): number Returns # number Inherited from # TypedEmitter.getMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:24 listenerCount # \u25b8 listenerCount ( type ): number Parameters # Name Type type string | number Returns # number Inherited from # TypedEmitter.listenerCount Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:21 listeners # \u25b8 listeners < U >( type ): DefaultListener [ U ][] Type parameters # Name Type U extends string | number Parameters # Name Type type U Returns # DefaultListener [ U ][] Inherited from # TypedEmitter.listeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:22 off # \u25b8 off < U >( event , listener ): ShardingClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # ShardingClient Inherited from # TypedEmitter.off Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:18 on # \u25b8 on < U >( event , listener ): ShardingClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # ShardingClient Inherited from # TypedEmitter.on Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:17 once # \u25b8 once < U >( event , listener ): ShardingClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # ShardingClient Inherited from # TypedEmitter.once Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:16 prependListener # \u25b8 prependListener < U >( event , listener ): ShardingClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # ShardingClient Inherited from # TypedEmitter.prependListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:12 prependOnceListener # \u25b8 prependOnceListener < U >( event , listener ): ShardingClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # ShardingClient Inherited from # TypedEmitter.prependOnceListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:13 rawListeners # \u25b8 rawListeners < U >( type ): DefaultListener [ U ][] Type parameters # Name Type U extends string | number Parameters # Name Type type U Returns # DefaultListener [ U ][] Inherited from # TypedEmitter.rawListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:23 removeAllListeners # \u25b8 removeAllListeners ( event? ): ShardingClient Parameters # Name Type event? string | number Returns # ShardingClient Inherited from # TypedEmitter.removeAllListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:15 removeListener # \u25b8 removeListener < U >( event , listener ): ShardingClient Type parameters # Name Type U extends string | number Parameters # Name Type event U listener DefaultListener [ U ] Returns # ShardingClient Inherited from # TypedEmitter.removeListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:14 setMaxListeners # \u25b8 setMaxListeners ( n ): ShardingClient Parameters # Name Type n number Returns # ShardingClient Inherited from # TypedEmitter.setMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:25","title":"ShardingClient"},{"location":"api/classes/sharding.shardingclient/#class-shardingclient","text":"sharding .ShardingClient","title":"Class: ShardingClient"},{"location":"api/classes/sharding.shardingclient/#hierarchy","text":"TypedEmitter \u21b3 ShardingClient","title":"Hierarchy"},{"location":"api/classes/sharding.shardingclient/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/sharding.shardingclient/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/sharding.shardingclient/#properties","text":"id ipc ipcId mode options rawShard shards totalShards defaultMaxListeners","title":"Properties"},{"location":"api/classes/sharding.shardingclient/#methods","text":"addListener create emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners","title":"Methods"},{"location":"api/classes/sharding.shardingclient/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/sharding.shardingclient/#constructor","text":"\u2022 new ShardingClient ( options )","title":"constructor"},{"location":"api/classes/sharding.shardingclient/#properties_1","text":"","title":"Properties"},{"location":"api/classes/sharding.shardingclient/#id","text":"\u2022 id : number","title":"id"},{"location":"api/classes/sharding.shardingclient/#ipc","text":"\u2022 ipc : IpcClient","title":"ipc"},{"location":"api/classes/sharding.shardingclient/#ipcid","text":"\u2022 ipcId : string","title":"ipcId"},{"location":"api/classes/sharding.shardingclient/#mode","text":"\u2022 mode : PartialShardingModes","title":"mode"},{"location":"api/classes/sharding.shardingclient/#options","text":"\u2022 options : ShardingClientOptions","title":"options"},{"location":"api/classes/sharding.shardingclient/#rawshard","text":"\u2022 Optional rawShard : Worker | Worker | ChildProcess","title":"rawShard"},{"location":"api/classes/sharding.shardingclient/#shards","text":"\u2022 shards : number []","title":"shards"},{"location":"api/classes/sharding.shardingclient/#totalshards","text":"\u2022 totalShards : number","title":"totalShards"},{"location":"api/classes/sharding.shardingclient/#defaultmaxlisteners","text":"\u25aa Static defaultMaxListeners : number","title":"defaultMaxListeners"},{"location":"api/classes/sharding.shardingclient/#methods_1","text":"","title":"Methods"},{"location":"api/classes/sharding.shardingclient/#addlistener","text":"\u25b8 addListener < U >( event , listener ): ShardingClient","title":"addListener"},{"location":"api/classes/sharding.shardingclient/#create","text":"\u25b8 create ( options? ): Promise < unknown >","title":"create"},{"location":"api/classes/sharding.shardingclient/#emit","text":"\u25b8 emit < U >( event , ... args ): boolean","title":"emit"},{"location":"api/classes/sharding.shardingclient/#eventnames","text":"\u25b8 eventNames < U >(): U []","title":"eventNames"},{"location":"api/classes/sharding.shardingclient/#getmaxlisteners","text":"\u25b8 getMaxListeners (): number","title":"getMaxListeners"},{"location":"api/classes/sharding.shardingclient/#listenercount","text":"\u25b8 listenerCount ( type ): number","title":"listenerCount"},{"location":"api/classes/sharding.shardingclient/#listeners","text":"\u25b8 listeners < U >( type ): DefaultListener [ U ][]","title":"listeners"},{"location":"api/classes/sharding.shardingclient/#off","text":"\u25b8 off < U >( event , listener ): ShardingClient","title":"off"},{"location":"api/classes/sharding.shardingclient/#on","text":"\u25b8 on < U >( event , listener ): ShardingClient","title":"on"},{"location":"api/classes/sharding.shardingclient/#once","text":"\u25b8 once < U >( event , listener ): ShardingClient","title":"once"},{"location":"api/classes/sharding.shardingclient/#prependlistener","text":"\u25b8 prependListener < U >( event , listener ): ShardingClient","title":"prependListener"},{"location":"api/classes/sharding.shardingclient/#prependoncelistener","text":"\u25b8 prependOnceListener < U >( event , listener ): ShardingClient","title":"prependOnceListener"},{"location":"api/classes/sharding.shardingclient/#rawlisteners","text":"\u25b8 rawListeners < U >( type ): DefaultListener [ U ][]","title":"rawListeners"},{"location":"api/classes/sharding.shardingclient/#removealllisteners","text":"\u25b8 removeAllListeners ( event? ): ShardingClient","title":"removeAllListeners"},{"location":"api/classes/sharding.shardingclient/#removelistener","text":"\u25b8 removeListener < U >( event , listener ): ShardingClient","title":"removeListener"},{"location":"api/classes/sharding.shardingclient/#setmaxlisteners","text":"\u25b8 setMaxListeners ( n ): ShardingClient","title":"setMaxListeners"},{"location":"api/classes/sharding.shardingmanager/","text":"Discordoo / Modules / sharding / ShardingManager Class: ShardingManager # sharding .ShardingManager Hierarchy # TypedEmitter < ShardingManagerEvents > \u21b3 ShardingManager Table of contents # Constructors # constructor Properties # #died _shards id mode options shards type defaultMaxListeners Methods # addListener emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners spawn Constructors # constructor # \u2022 new ShardingManager ( options ) Parameters # Name Type options ShardingManagerOptions Overrides # TypedEmitter<ShardingManagerEvents\\>.constructor Defined in # src/sharding/ShardingManager.ts:27 Properties # #died # \u2022 Private Readonly #died : boolean = false Defined in # src/sharding/ShardingManager.ts:27 _shards # \u2022 Private Readonly _shards : number [] Defined in # src/sharding/ShardingManager.ts:26 id # \u2022 id : string Defined in # src/sharding/ShardingManager.ts:23 mode # \u2022 mode : ShardingModes Defined in # src/sharding/ShardingManager.ts:21 options # \u2022 options : ShardingManagerOptions Defined in # src/sharding/ShardingManager.ts:22 shards # \u2022 shards : Collection < number , ShardingClient > Defined in # src/sharding/ShardingManager.ts:24 type # \u2022 type : ShardingManagerTypes Defined in # src/sharding/ShardingManager.ts:20 defaultMaxListeners # \u25aa Static defaultMaxListeners : number Inherited from # TypedEmitter.defaultMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:10 Methods # addListener # \u25b8 addListener < U >( event , listener ): ShardingManager Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener ShardingManagerEvents [ U ] Returns # ShardingManager Inherited from # TypedEmitter.addListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:11 emit # \u25b8 emit < U >( event , ... args ): boolean Type parameters # Name Type U extends \"message\" Parameters # Name Type event U ...args Parameters < ShardingManagerEvents [ U ]> Returns # boolean Inherited from # TypedEmitter.emit Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:19 eventNames # \u25b8 eventNames < U >(): U [] Type parameters # Name Type U extends \"message\" Returns # U [] Inherited from # TypedEmitter.eventNames Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:20 getMaxListeners # \u25b8 getMaxListeners (): number Returns # number Inherited from # TypedEmitter.getMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:24 listenerCount # \u25b8 listenerCount ( type ): number Parameters # Name Type type \"message\" Returns # number Inherited from # TypedEmitter.listenerCount Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:21 listeners # \u25b8 listeners < U >( type ): ShardingManagerEvents [ U ][] Type parameters # Name Type U extends \"message\" Parameters # Name Type type U Returns # ShardingManagerEvents [ U ][] Inherited from # TypedEmitter.listeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:22 off # \u25b8 off < U >( event , listener ): ShardingManager Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener ShardingManagerEvents [ U ] Returns # ShardingManager Inherited from # TypedEmitter.off Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:18 on # \u25b8 on < U >( event , listener ): ShardingManager Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener ShardingManagerEvents [ U ] Returns # ShardingManager Inherited from # TypedEmitter.on Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:17 once # \u25b8 once < U >( event , listener ): ShardingManager Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener ShardingManagerEvents [ U ] Returns # ShardingManager Inherited from # TypedEmitter.once Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:16 prependListener # \u25b8 prependListener < U >( event , listener ): ShardingManager Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener ShardingManagerEvents [ U ] Returns # ShardingManager Inherited from # TypedEmitter.prependListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:12 prependOnceListener # \u25b8 prependOnceListener < U >( event , listener ): ShardingManager Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener ShardingManagerEvents [ U ] Returns # ShardingManager Inherited from # TypedEmitter.prependOnceListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:13 rawListeners # \u25b8 rawListeners < U >( type ): ShardingManagerEvents [ U ][] Type parameters # Name Type U extends \"message\" Parameters # Name Type type U Returns # ShardingManagerEvents [ U ][] Inherited from # TypedEmitter.rawListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:23 removeAllListeners # \u25b8 removeAllListeners ( event? ): ShardingManager Parameters # Name Type event? \"message\" Returns # ShardingManager Inherited from # TypedEmitter.removeAllListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:15 removeListener # \u25b8 removeListener < U >( event , listener ): ShardingManager Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener ShardingManagerEvents [ U ] Returns # ShardingManager Inherited from # TypedEmitter.removeListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:14 setMaxListeners # \u25b8 setMaxListeners ( n ): ShardingManager Parameters # Name Type n number Returns # ShardingManager Inherited from # TypedEmitter.setMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:25 spawn # \u25b8 spawn (): Promise < void > Returns # Promise < void > Defined in # src/sharding/ShardingManager.ts:45","title":"ShardingManager"},{"location":"api/classes/sharding.shardingmanager/#class-shardingmanager","text":"sharding .ShardingManager","title":"Class: ShardingManager"},{"location":"api/classes/sharding.shardingmanager/#hierarchy","text":"TypedEmitter < ShardingManagerEvents > \u21b3 ShardingManager","title":"Hierarchy"},{"location":"api/classes/sharding.shardingmanager/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/sharding.shardingmanager/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/sharding.shardingmanager/#properties","text":"#died _shards id mode options shards type defaultMaxListeners","title":"Properties"},{"location":"api/classes/sharding.shardingmanager/#methods","text":"addListener emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners spawn","title":"Methods"},{"location":"api/classes/sharding.shardingmanager/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/sharding.shardingmanager/#constructor","text":"\u2022 new ShardingManager ( options )","title":"constructor"},{"location":"api/classes/sharding.shardingmanager/#properties_1","text":"","title":"Properties"},{"location":"api/classes/sharding.shardingmanager/#died","text":"\u2022 Private Readonly #died : boolean = false","title":"#died"},{"location":"api/classes/sharding.shardingmanager/#_shards","text":"\u2022 Private Readonly _shards : number []","title":"_shards"},{"location":"api/classes/sharding.shardingmanager/#id","text":"\u2022 id : string","title":"id"},{"location":"api/classes/sharding.shardingmanager/#mode","text":"\u2022 mode : ShardingModes","title":"mode"},{"location":"api/classes/sharding.shardingmanager/#options","text":"\u2022 options : ShardingManagerOptions","title":"options"},{"location":"api/classes/sharding.shardingmanager/#shards","text":"\u2022 shards : Collection < number , ShardingClient >","title":"shards"},{"location":"api/classes/sharding.shardingmanager/#type","text":"\u2022 type : ShardingManagerTypes","title":"type"},{"location":"api/classes/sharding.shardingmanager/#defaultmaxlisteners","text":"\u25aa Static defaultMaxListeners : number","title":"defaultMaxListeners"},{"location":"api/classes/sharding.shardingmanager/#methods_1","text":"","title":"Methods"},{"location":"api/classes/sharding.shardingmanager/#addlistener","text":"\u25b8 addListener < U >( event , listener ): ShardingManager","title":"addListener"},{"location":"api/classes/sharding.shardingmanager/#emit","text":"\u25b8 emit < U >( event , ... args ): boolean","title":"emit"},{"location":"api/classes/sharding.shardingmanager/#eventnames","text":"\u25b8 eventNames < U >(): U []","title":"eventNames"},{"location":"api/classes/sharding.shardingmanager/#getmaxlisteners","text":"\u25b8 getMaxListeners (): number","title":"getMaxListeners"},{"location":"api/classes/sharding.shardingmanager/#listenercount","text":"\u25b8 listenerCount ( type ): number","title":"listenerCount"},{"location":"api/classes/sharding.shardingmanager/#listeners","text":"\u25b8 listeners < U >( type ): ShardingManagerEvents [ U ][]","title":"listeners"},{"location":"api/classes/sharding.shardingmanager/#off","text":"\u25b8 off < U >( event , listener ): ShardingManager","title":"off"},{"location":"api/classes/sharding.shardingmanager/#on","text":"\u25b8 on < U >( event , listener ): ShardingManager","title":"on"},{"location":"api/classes/sharding.shardingmanager/#once","text":"\u25b8 once < U >( event , listener ): ShardingManager","title":"once"},{"location":"api/classes/sharding.shardingmanager/#prependlistener","text":"\u25b8 prependListener < U >( event , listener ): ShardingManager","title":"prependListener"},{"location":"api/classes/sharding.shardingmanager/#prependoncelistener","text":"\u25b8 prependOnceListener < U >( event , listener ): ShardingManager","title":"prependOnceListener"},{"location":"api/classes/sharding.shardingmanager/#rawlisteners","text":"\u25b8 rawListeners < U >( type ): ShardingManagerEvents [ U ][]","title":"rawListeners"},{"location":"api/classes/sharding.shardingmanager/#removealllisteners","text":"\u25b8 removeAllListeners ( event? ): ShardingManager","title":"removeAllListeners"},{"location":"api/classes/sharding.shardingmanager/#removelistener","text":"\u25b8 removeListener < U >( event , listener ): ShardingManager","title":"removeListener"},{"location":"api/classes/sharding.shardingmanager/#setmaxlisteners","text":"\u25b8 setMaxListeners ( n ): ShardingManager","title":"setMaxListeners"},{"location":"api/classes/sharding.shardingmanager/#spawn","text":"\u25b8 spawn (): Promise < void >","title":"spawn"},{"location":"api/classes/utils.discordooerror/","text":"Discordoo / Modules / utils / DiscordooError Class: DiscordooError # utils .DiscordooError Custom error class to create human-readable errors Hierarchy # Error \u21b3 DiscordooError Table of contents # Constructors # constructor Properties # message name stack prepareStackTrace stackTraceLimit Methods # captureStackTrace Constructors # constructor # \u2022 new DiscordooError ( source? , ... args ) Parameters # Name Type source? string ...args any [] Overrides # Error.constructor Defined in # src/utils/DiscordooError.ts:5 Properties # message # \u2022 message : string Inherited from # Error.message Defined in # node_modules/typescript/lib/lib.es5.d.ts:974 name # \u2022 name : string = 'DiscordooError' Overrides # Error.name Defined in # src/utils/DiscordooError.ts:5 stack # \u2022 Optional stack : string Inherited from # Error.stack Defined in # node_modules/typescript/lib/lib.es5.d.ts:975 prepareStackTrace # \u25aa Static Optional prepareStackTrace : ( err : Error , stackTraces : CallSite []) => any Type declaration # \u25b8 ( err , stackTraces ): any Optional override for formatting stack traces Parameters # Name Type err Error stackTraces CallSite [] Returns # any Inherited from # Error.prepareStackTrace Defined in # node_modules/@types/node/globals.d.ts:11 stackTraceLimit # \u25aa Static stackTraceLimit : number Inherited from # Error.stackTraceLimit Defined in # node_modules/@types/node/globals.d.ts:13 Methods # captureStackTrace # \u25b8 Static captureStackTrace ( targetObject , constructorOpt? ): void Create .stack property on a target object Parameters # Name Type targetObject object constructorOpt? Function Returns # void Inherited from # Error.captureStackTrace Defined in # node_modules/@types/node/globals.d.ts:4","title":"DiscordooError"},{"location":"api/classes/utils.discordooerror/#class-discordooerror","text":"utils .DiscordooError Custom error class to create human-readable errors","title":"Class: DiscordooError"},{"location":"api/classes/utils.discordooerror/#hierarchy","text":"Error \u21b3 DiscordooError","title":"Hierarchy"},{"location":"api/classes/utils.discordooerror/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/utils.discordooerror/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/utils.discordooerror/#properties","text":"message name stack prepareStackTrace stackTraceLimit","title":"Properties"},{"location":"api/classes/utils.discordooerror/#methods","text":"captureStackTrace","title":"Methods"},{"location":"api/classes/utils.discordooerror/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/utils.discordooerror/#constructor","text":"\u2022 new DiscordooError ( source? , ... args )","title":"constructor"},{"location":"api/classes/utils.discordooerror/#properties_1","text":"","title":"Properties"},{"location":"api/classes/utils.discordooerror/#message","text":"\u2022 message : string","title":"message"},{"location":"api/classes/utils.discordooerror/#name","text":"\u2022 name : string = 'DiscordooError'","title":"name"},{"location":"api/classes/utils.discordooerror/#stack","text":"\u2022 Optional stack : string","title":"stack"},{"location":"api/classes/utils.discordooerror/#preparestacktrace","text":"\u25aa Static Optional prepareStackTrace : ( err : Error , stackTraces : CallSite []) => any","title":"prepareStackTrace"},{"location":"api/classes/utils.discordooerror/#stacktracelimit","text":"\u25aa Static stackTraceLimit : number","title":"stackTraceLimit"},{"location":"api/classes/utils.discordooerror/#methods_1","text":"","title":"Methods"},{"location":"api/classes/utils.discordooerror/#capturestacktrace","text":"\u25b8 Static captureStackTrace ( targetObject , constructorOpt? ): void Create .stack property on a target object","title":"captureStackTrace"},{"location":"api/classes/utils.discordoosnowflake/","text":"Discordoo / Modules / utils / DiscordooSnowflake Class: DiscordooSnowflake # utils .DiscordooSnowflake DiscordooSnowflake is a custom twitter snowflake used to identify ipc connections and messages. Table of contents # Constructors # constructor Properties # SHARDING_MANAGER_ID Methods # binaryToID deconstruct generate Constructors # constructor # \u2022 new DiscordooSnowflake () Properties # SHARDING_MANAGER_ID # \u25aa Static Readonly SHARDING_MANAGER_ID : 1111111111 Defined in # src/utils/DiscordooSnowflake.ts:13 Methods # binaryToID # \u25b8 Static binaryToID ( str , base? ): string Parameters # Name Type Default value str string undefined base number | bigint 2 Returns # string Defined in # src/utils/DiscordooSnowflake.ts:91 deconstruct # \u25b8 Static deconstruct ( snowflake ): DeconstructedDiscordooSnowflake Parameters # Name Type snowflake string Returns # DeconstructedDiscordooSnowflake Defined in # src/utils/DiscordooSnowflake.ts:65 generate # \u25b8 Static generate ( shardID , workerID? , timestamp? ): string Custom twitter snowflake: DiscordooSnowflake. If we have a snowflake '1128425170719486862453931925225603077' we can represent it as binary: 128 86 54 22 000000001101100101010011101010000000011011 00000000000000000000000000001011 00000000000000000000000001100011 0000000000000000000101 number of ms since Discordoo epoch worker id shard id increment getting a timestamp: (BigInt(snowflake) >> 86n) + BigInt(EPOCH) === 1624043753498n getting a worker id: (BigInt(snowflake) & 0x3FFFFFFFC0000000000000n) >> 54n === 11n getting a shard id: (BigInt(snowflake) & 0x3FFFFFFFC00000n) >> 22n === 99n getting a increment: BigInt(snowflake) & 0x3FFFFFn === 5n Why? Discordoo uses DiscordooSnowflake to identify ipc connections and messages. So, if your bot has more than 2,147,483,647 shards, you will unfortunately not be able to use Discordoo. Parameters # Name Type Default value shardID number undefined workerID number 0 timestamp number | Date undefined Returns # string Defined in # src/utils/DiscordooSnowflake.ts:41","title":"DiscordooSnowflake"},{"location":"api/classes/utils.discordoosnowflake/#class-discordoosnowflake","text":"utils .DiscordooSnowflake DiscordooSnowflake is a custom twitter snowflake used to identify ipc connections and messages.","title":"Class: DiscordooSnowflake"},{"location":"api/classes/utils.discordoosnowflake/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/utils.discordoosnowflake/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/utils.discordoosnowflake/#properties","text":"SHARDING_MANAGER_ID","title":"Properties"},{"location":"api/classes/utils.discordoosnowflake/#methods","text":"binaryToID deconstruct generate","title":"Methods"},{"location":"api/classes/utils.discordoosnowflake/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/utils.discordoosnowflake/#constructor","text":"\u2022 new DiscordooSnowflake ()","title":"constructor"},{"location":"api/classes/utils.discordoosnowflake/#properties_1","text":"","title":"Properties"},{"location":"api/classes/utils.discordoosnowflake/#sharding_manager_id","text":"\u25aa Static Readonly SHARDING_MANAGER_ID : 1111111111","title":"SHARDING_MANAGER_ID"},{"location":"api/classes/utils.discordoosnowflake/#methods_1","text":"","title":"Methods"},{"location":"api/classes/utils.discordoosnowflake/#binarytoid","text":"\u25b8 Static binaryToID ( str , base? ): string","title":"binaryToID"},{"location":"api/classes/utils.discordoosnowflake/#deconstruct","text":"\u25b8 Static deconstruct ( snowflake ): DeconstructedDiscordooSnowflake","title":"deconstruct"},{"location":"api/classes/utils.discordoosnowflake/#generate","text":"\u25b8 Static generate ( shardID , workerID? , timestamp? ): string Custom twitter snowflake: DiscordooSnowflake. If we have a snowflake '1128425170719486862453931925225603077' we can represent it as binary: 128 86 54 22 000000001101100101010011101010000000011011 00000000000000000000000000001011 00000000000000000000000001100011 0000000000000000000101 number of ms since Discordoo epoch worker id shard id increment getting a timestamp: (BigInt(snowflake) >> 86n) + BigInt(EPOCH) === 1624043753498n getting a worker id: (BigInt(snowflake) & 0x3FFFFFFFC0000000000000n) >> 54n === 11n getting a shard id: (BigInt(snowflake) & 0x3FFFFFFFC00000n) >> 22n === 99n getting a increment: BigInt(snowflake) & 0x3FFFFFn === 5n Why? Discordoo uses DiscordooSnowflake to identify ipc connections and messages. So, if your bot has more than 2,147,483,647 shards, you will unfortunately not be able to use Discordoo.","title":"generate"},{"location":"api/classes/utils.websocketutils/","text":"Discordoo / Modules / utils / WebSocketUtils Class: WebSocketUtils # utils .WebSocketUtils Table of contents # Constructors # constructor Properties # encoding pack pako Methods # exists unpack Constructors # constructor # \u2022 new WebSocketUtils () Properties # encoding # \u25aa Static encoding : \"json\" | \"etf\" Defined in # src/utils/WebSocketUtils.ts:28 pack # \u25aa Static pack : any Defined in # src/utils/WebSocketUtils.ts:26 pako # \u25aa Static pako : any Defined in # src/utils/WebSocketUtils.ts:30 Methods # exists # \u25b8 Static exists ( packet ): boolean Parameters # Name Type packet any Returns # boolean Defined in # src/utils/WebSocketUtils.ts:44 unpack # \u25b8 Static unpack ( data , type? ): Record < any , any > Parameters # Name Type data any type \"json\" | \"etf\" Returns # Record < any , any > Defined in # src/utils/WebSocketUtils.ts:32","title":"WebSocketUtils"},{"location":"api/classes/utils.websocketutils/#class-websocketutils","text":"utils .WebSocketUtils","title":"Class: WebSocketUtils"},{"location":"api/classes/utils.websocketutils/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/utils.websocketutils/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/utils.websocketutils/#properties","text":"encoding pack pako","title":"Properties"},{"location":"api/classes/utils.websocketutils/#methods","text":"exists unpack","title":"Methods"},{"location":"api/classes/utils.websocketutils/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/utils.websocketutils/#constructor","text":"\u2022 new WebSocketUtils ()","title":"constructor"},{"location":"api/classes/utils.websocketutils/#properties_1","text":"","title":"Properties"},{"location":"api/classes/utils.websocketutils/#encoding","text":"\u25aa Static encoding : \"json\" | \"etf\"","title":"encoding"},{"location":"api/classes/utils.websocketutils/#pack","text":"\u25aa Static pack : any","title":"pack"},{"location":"api/classes/utils.websocketutils/#pako","text":"\u25aa Static pako : any","title":"pako"},{"location":"api/classes/utils.websocketutils/#methods_1","text":"","title":"Methods"},{"location":"api/classes/utils.websocketutils/#exists","text":"\u25b8 Static exists ( packet ): boolean","title":"exists"},{"location":"api/classes/utils.websocketutils/#unpack","text":"\u25b8 Static unpack ( data , type? ): Record < any , any >","title":"unpack"},{"location":"api/classes/wrapper.clientbuilder/","text":"Discordoo / Modules / wrapper / ClientBuilder Class: ClientBuilder<Stack> # wrapper .ClientBuilder Type parameters # Name Type Stack extends DefaultClientStack DefaultClientStack Table of contents # Constructors # constructor Properties # client Methods # build cache gateway rest Constructors # constructor # \u2022 new ClientBuilder < Stack >( token , options? ) Type parameters # Name Type Stack extends DefaultClientStack DefaultClientStack Parameters # Name Type token string options? ClientOptions Defined in # src/wrapper/ClientBuilder.ts:6 Properties # client # \u2022 client : Client < Stack > Defined in # src/wrapper/ClientBuilder.ts:6 Methods # build # \u25b8 build (): Client < Stack > Returns # Client < Stack > Defined in # src/wrapper/ClientBuilder.ts:27 cache # \u25b8 cache ( provider , ... options ): ClientBuilder < Stack > Parameters # Name Type provider CacheProviderConstructor < Stack [ \"cache\" ]> ...options any [] Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:17 gateway # \u25b8 gateway ( provider ): ClientBuilder < Stack > Parameters # Name Type provider ( client : Client < DefaultClientStack >) => GatewayProvider < GatewayProviderAPI > Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:22 rest # \u25b8 rest ( provider ): ClientBuilder < Stack > Parameters # Name Type provider ( client : Client < DefaultClientStack >) => RESTProvider < RequestBuilder > Returns # ClientBuilder < Stack > Defined in # src/wrapper/ClientBuilder.ts:12","title":"ClientBuilder"},{"location":"api/classes/wrapper.clientbuilder/#class-clientbuilderstack","text":"wrapper .ClientBuilder","title":"Class: ClientBuilder&lt;Stack>"},{"location":"api/classes/wrapper.clientbuilder/#type-parameters","text":"Name Type Stack extends DefaultClientStack DefaultClientStack","title":"Type parameters"},{"location":"api/classes/wrapper.clientbuilder/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/classes/wrapper.clientbuilder/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/wrapper.clientbuilder/#properties","text":"client","title":"Properties"},{"location":"api/classes/wrapper.clientbuilder/#methods","text":"build cache gateway rest","title":"Methods"},{"location":"api/classes/wrapper.clientbuilder/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/wrapper.clientbuilder/#constructor","text":"\u2022 new ClientBuilder < Stack >( token , options? )","title":"constructor"},{"location":"api/classes/wrapper.clientbuilder/#properties_1","text":"","title":"Properties"},{"location":"api/classes/wrapper.clientbuilder/#client","text":"\u2022 client : Client < Stack >","title":"client"},{"location":"api/classes/wrapper.clientbuilder/#methods_1","text":"","title":"Methods"},{"location":"api/classes/wrapper.clientbuilder/#build","text":"\u25b8 build (): Client < Stack >","title":"build"},{"location":"api/classes/wrapper.clientbuilder/#cache","text":"\u25b8 cache ( provider , ... options ): ClientBuilder < Stack >","title":"cache"},{"location":"api/classes/wrapper.clientbuilder/#gateway","text":"\u25b8 gateway ( provider ): ClientBuilder < Stack >","title":"gateway"},{"location":"api/classes/wrapper.clientbuilder/#rest","text":"\u25b8 rest ( provider ): ClientBuilder < Stack >","title":"rest"},{"location":"api/enums/core.constants.discordooproviders/","text":"Discordoo / Modules / core / Constants / DiscordooProviders Enumeration: DiscordooProviders # core . Constants .DiscordooProviders Table of contents # Enumeration members # CACHE GATEWAY REST Enumeration members # CACHE # \u2022 CACHE = 2 Defined in # src/core/Constants.ts:11 GATEWAY # \u2022 GATEWAY = 1 Defined in # src/core/Constants.ts:10 REST # \u2022 REST = 0 Defined in # src/core/Constants.ts:9","title":"DiscordooProviders"},{"location":"api/enums/core.constants.discordooproviders/#enumeration-discordooproviders","text":"core . Constants .DiscordooProviders","title":"Enumeration: DiscordooProviders"},{"location":"api/enums/core.constants.discordooproviders/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.discordooproviders/#enumeration-members","text":"CACHE GATEWAY REST","title":"Enumeration members"},{"location":"api/enums/core.constants.discordooproviders/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.discordooproviders/#cache","text":"\u2022 CACHE = 2","title":"CACHE"},{"location":"api/enums/core.constants.discordooproviders/#gateway","text":"\u2022 GATEWAY = 1","title":"GATEWAY"},{"location":"api/enums/core.constants.discordooproviders/#rest","text":"\u2022 REST = 0","title":"REST"},{"location":"api/enums/core.constants.ipcevents/","text":"Discordoo / Modules / core / Constants / IpcEvents Enumeration: IpcEvents # core . Constants .IpcEvents Table of contents # Enumeration members # DESTROYING MESSAGE PARTIAL_RESTARTING RESTARTING RESTRUCTURING Enumeration members # DESTROYING # \u2022 DESTROYING = \"DESTROYING\" Defined in # src/core/Constants.ts:26 MESSAGE # \u2022 MESSAGE = \"MESSAGE\" Defined in # src/core/Constants.ts:25 PARTIAL_RESTARTING # \u2022 PARTIAL_RESTARTING = \"PARTIAL_RESTARTING\" Defined in # src/core/Constants.ts:29 RESTARTING # \u2022 RESTARTING = \"RESTARTING\" Defined in # src/core/Constants.ts:28 RESTRUCTURING # \u2022 RESTRUCTURING = \"RESTRUCTURING\" Defined in # src/core/Constants.ts:27","title":"IpcEvents"},{"location":"api/enums/core.constants.ipcevents/#enumeration-ipcevents","text":"core . Constants .IpcEvents","title":"Enumeration: IpcEvents"},{"location":"api/enums/core.constants.ipcevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.ipcevents/#enumeration-members","text":"DESTROYING MESSAGE PARTIAL_RESTARTING RESTARTING RESTRUCTURING","title":"Enumeration members"},{"location":"api/enums/core.constants.ipcevents/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.ipcevents/#destroying","text":"\u2022 DESTROYING = \"DESTROYING\"","title":"DESTROYING"},{"location":"api/enums/core.constants.ipcevents/#message","text":"\u2022 MESSAGE = \"MESSAGE\"","title":"MESSAGE"},{"location":"api/enums/core.constants.ipcevents/#partial_restarting","text":"\u2022 PARTIAL_RESTARTING = \"PARTIAL_RESTARTING\"","title":"PARTIAL_RESTARTING"},{"location":"api/enums/core.constants.ipcevents/#restarting","text":"\u2022 RESTARTING = \"RESTARTING\"","title":"RESTARTING"},{"location":"api/enums/core.constants.ipcevents/#restructuring","text":"\u2022 RESTRUCTURING = \"RESTRUCTURING\"","title":"RESTRUCTURING"},{"location":"api/enums/core.constants.ipcopcodes/","text":"Discordoo / Modules / core / Constants / IpcOPCodes Enumeration: IpcOPCodes # core . Constants .IpcOPCodes Table of contents # Enumeration members # DISPATCH ERROR HEARTBEAT HELLO IDENTIFY INVALID_SESSION REQUEST_STATS Enumeration members # DISPATCH # \u2022 DISPATCH = 0 Defined in # src/core/Constants.ts:15 ERROR # \u2022 ERROR = 6 Defined in # src/core/Constants.ts:21 HEARTBEAT # \u2022 HEARTBEAT = 2 Defined in # src/core/Constants.ts:17 HELLO # \u2022 HELLO = 4 Defined in # src/core/Constants.ts:19 IDENTIFY # \u2022 IDENTIFY = 1 Defined in # src/core/Constants.ts:16 INVALID_SESSION # \u2022 INVALID_SESSION = 3 Defined in # src/core/Constants.ts:18 REQUEST_STATS # \u2022 REQUEST_STATS = 5 Defined in # src/core/Constants.ts:20","title":"IpcOPCodes"},{"location":"api/enums/core.constants.ipcopcodes/#enumeration-ipcopcodes","text":"core . Constants .IpcOPCodes","title":"Enumeration: IpcOPCodes"},{"location":"api/enums/core.constants.ipcopcodes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.ipcopcodes/#enumeration-members","text":"DISPATCH ERROR HEARTBEAT HELLO IDENTIFY INVALID_SESSION REQUEST_STATS","title":"Enumeration members"},{"location":"api/enums/core.constants.ipcopcodes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.ipcopcodes/#dispatch","text":"\u2022 DISPATCH = 0","title":"DISPATCH"},{"location":"api/enums/core.constants.ipcopcodes/#error","text":"\u2022 ERROR = 6","title":"ERROR"},{"location":"api/enums/core.constants.ipcopcodes/#heartbeat","text":"\u2022 HEARTBEAT = 2","title":"HEARTBEAT"},{"location":"api/enums/core.constants.ipcopcodes/#hello","text":"\u2022 HELLO = 4","title":"HELLO"},{"location":"api/enums/core.constants.ipcopcodes/#identify","text":"\u2022 IDENTIFY = 1","title":"IDENTIFY"},{"location":"api/enums/core.constants.ipcopcodes/#invalid_session","text":"\u2022 INVALID_SESSION = 3","title":"INVALID_SESSION"},{"location":"api/enums/core.constants.ipcopcodes/#request_stats","text":"\u2022 REQUEST_STATS = 5","title":"REQUEST_STATS"},{"location":"api/enums/core.constants.partialshardingmodes/","text":"Discordoo / Modules / core / Constants / PartialShardingModes Enumeration: PartialShardingModes # core . Constants .PartialShardingModes Table of contents # Enumeration members # CLUSTERS PROCESSES WORKERS Enumeration members # CLUSTERS # \u2022 CLUSTERS = \"clusters\" Defined in # src/core/Constants.ts:42 PROCESSES # \u2022 PROCESSES = \"processes\" Defined in # src/core/Constants.ts:40 WORKERS # \u2022 WORKERS = \"workers\" Defined in # src/core/Constants.ts:41","title":"PartialShardingModes"},{"location":"api/enums/core.constants.partialshardingmodes/#enumeration-partialshardingmodes","text":"core . Constants .PartialShardingModes","title":"Enumeration: PartialShardingModes"},{"location":"api/enums/core.constants.partialshardingmodes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.partialshardingmodes/#enumeration-members","text":"CLUSTERS PROCESSES WORKERS","title":"Enumeration members"},{"location":"api/enums/core.constants.partialshardingmodes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.partialshardingmodes/#clusters","text":"\u2022 CLUSTERS = \"clusters\"","title":"CLUSTERS"},{"location":"api/enums/core.constants.partialshardingmodes/#processes","text":"\u2022 PROCESSES = \"processes\"","title":"PROCESSES"},{"location":"api/enums/core.constants.partialshardingmodes/#workers","text":"\u2022 WORKERS = \"workers\"","title":"WORKERS"},{"location":"api/enums/core.constants.shardingmanagertypes/","text":"Discordoo / Modules / core / Constants / ShardingManagerTypes Enumeration: ShardingManagerTypes # core . Constants .ShardingManagerTypes Table of contents # Enumeration members # CHILD PARENT STANDALONE_CHILD STANDALONE_PARENT Enumeration members # CHILD # \u2022 CHILD = 3 Defined in # src/core/Constants.ts:49 PARENT # \u2022 PARENT = 2 Defined in # src/core/Constants.ts:48 STANDALONE_CHILD # \u2022 STANDALONE_CHILD = 1 Defined in # src/core/Constants.ts:47 STANDALONE_PARENT # \u2022 STANDALONE_PARENT = 0 Defined in # src/core/Constants.ts:46","title":"ShardingManagerTypes"},{"location":"api/enums/core.constants.shardingmanagertypes/#enumeration-shardingmanagertypes","text":"core . Constants .ShardingManagerTypes","title":"Enumeration: ShardingManagerTypes"},{"location":"api/enums/core.constants.shardingmanagertypes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.shardingmanagertypes/#enumeration-members","text":"CHILD PARENT STANDALONE_CHILD STANDALONE_PARENT","title":"Enumeration members"},{"location":"api/enums/core.constants.shardingmanagertypes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.shardingmanagertypes/#child","text":"\u2022 CHILD = 3","title":"CHILD"},{"location":"api/enums/core.constants.shardingmanagertypes/#parent","text":"\u2022 PARENT = 2","title":"PARENT"},{"location":"api/enums/core.constants.shardingmanagertypes/#standalone_child","text":"\u2022 STANDALONE_CHILD = 1","title":"STANDALONE_CHILD"},{"location":"api/enums/core.constants.shardingmanagertypes/#standalone_parent","text":"\u2022 STANDALONE_PARENT = 0","title":"STANDALONE_PARENT"},{"location":"api/enums/core.constants.shardingmodes/","text":"Discordoo / Modules / core / Constants / ShardingModes Enumeration: ShardingModes # core . Constants .ShardingModes Table of contents # Enumeration members # CLUSTERS MACHINES PROCESSES WORKERS Enumeration members # CLUSTERS # \u2022 CLUSTERS = \"clusters\" Defined in # src/core/Constants.ts:35 MACHINES # \u2022 MACHINES = \"machines\" Defined in # src/core/Constants.ts:36 PROCESSES # \u2022 PROCESSES = \"processes\" Defined in # src/core/Constants.ts:33 WORKERS # \u2022 WORKERS = \"workers\" Defined in # src/core/Constants.ts:34","title":"ShardingModes"},{"location":"api/enums/core.constants.shardingmodes/#enumeration-shardingmodes","text":"core . Constants .ShardingModes","title":"Enumeration: ShardingModes"},{"location":"api/enums/core.constants.shardingmodes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.shardingmodes/#enumeration-members","text":"CLUSTERS MACHINES PROCESSES WORKERS","title":"Enumeration members"},{"location":"api/enums/core.constants.shardingmodes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.shardingmodes/#clusters","text":"\u2022 CLUSTERS = \"clusters\"","title":"CLUSTERS"},{"location":"api/enums/core.constants.shardingmodes/#machines","text":"\u2022 MACHINES = \"machines\"","title":"MACHINES"},{"location":"api/enums/core.constants.shardingmodes/#processes","text":"\u2022 PROCESSES = \"processes\"","title":"PROCESSES"},{"location":"api/enums/core.constants.shardingmodes/#workers","text":"\u2022 WORKERS = \"workers\"","title":"WORKERS"},{"location":"api/enums/core.constants.websocketclientevents/","text":"Discordoo / Modules / core / Constants / WebSocketClientEvents Enumeration: WebSocketClientEvents # core . Constants .WebSocketClientEvents Table of contents # Enumeration members # DESTROYED INVALID_SESSION READY RECONNECT_ME RESUMED WS_CLOSED WS_CLOSE_ERROR WS_ERROR WS_OPEN WS_OPEN_ERROR WS_SEND_ERROR Enumeration members # DESTROYED # \u2022 DESTROYED = \"destroyed\" Defined in # src/core/Constants.ts:150 INVALID_SESSION # \u2022 INVALID_SESSION = \"invalidSession\" Defined in # src/core/Constants.ts:151 READY # \u2022 READY = \"ready\" Defined in # src/core/Constants.ts:148 RECONNECT_ME # \u2022 RECONNECT_ME = \"RECONNECT_ME\" Defined in # src/core/Constants.ts:146 RESUMED # \u2022 RESUMED = \"resumed\" Defined in # src/core/Constants.ts:149 WS_CLOSED # \u2022 WS_CLOSED = \"WS_CLOSED\" Defined in # src/core/Constants.ts:144 WS_CLOSE_ERROR # \u2022 WS_CLOSE_ERROR = \"WS_CLOSE_ERROR\" Defined in # src/core/Constants.ts:140 WS_ERROR # \u2022 WS_ERROR = \"WS_ERROR\" Defined in # src/core/Constants.ts:142 WS_OPEN # \u2022 WS_OPEN = \"WS_OPEN\" Defined in # src/core/Constants.ts:143 WS_OPEN_ERROR # \u2022 WS_OPEN_ERROR = \"WS_OPEN_ERROR\" Defined in # src/core/Constants.ts:139 WS_SEND_ERROR # \u2022 WS_SEND_ERROR = \"WS_SEND_ERROR\" Defined in # src/core/Constants.ts:138","title":"WebSocketClientEvents"},{"location":"api/enums/core.constants.websocketclientevents/#enumeration-websocketclientevents","text":"core . Constants .WebSocketClientEvents","title":"Enumeration: WebSocketClientEvents"},{"location":"api/enums/core.constants.websocketclientevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketclientevents/#enumeration-members","text":"DESTROYED INVALID_SESSION READY RECONNECT_ME RESUMED WS_CLOSED WS_CLOSE_ERROR WS_ERROR WS_OPEN WS_OPEN_ERROR WS_SEND_ERROR","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketclientevents/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketclientevents/#destroyed","text":"\u2022 DESTROYED = \"destroyed\"","title":"DESTROYED"},{"location":"api/enums/core.constants.websocketclientevents/#invalid_session","text":"\u2022 INVALID_SESSION = \"invalidSession\"","title":"INVALID_SESSION"},{"location":"api/enums/core.constants.websocketclientevents/#ready","text":"\u2022 READY = \"ready\"","title":"READY"},{"location":"api/enums/core.constants.websocketclientevents/#reconnect_me","text":"\u2022 RECONNECT_ME = \"RECONNECT_ME\"","title":"RECONNECT_ME"},{"location":"api/enums/core.constants.websocketclientevents/#resumed","text":"\u2022 RESUMED = \"resumed\"","title":"RESUMED"},{"location":"api/enums/core.constants.websocketclientevents/#ws_closed","text":"\u2022 WS_CLOSED = \"WS_CLOSED\"","title":"WS_CLOSED"},{"location":"api/enums/core.constants.websocketclientevents/#ws_close_error","text":"\u2022 WS_CLOSE_ERROR = \"WS_CLOSE_ERROR\"","title":"WS_CLOSE_ERROR"},{"location":"api/enums/core.constants.websocketclientevents/#ws_error","text":"\u2022 WS_ERROR = \"WS_ERROR\"","title":"WS_ERROR"},{"location":"api/enums/core.constants.websocketclientevents/#ws_open","text":"\u2022 WS_OPEN = \"WS_OPEN\"","title":"WS_OPEN"},{"location":"api/enums/core.constants.websocketclientevents/#ws_open_error","text":"\u2022 WS_OPEN_ERROR = \"WS_OPEN_ERROR\"","title":"WS_OPEN_ERROR"},{"location":"api/enums/core.constants.websocketclientevents/#ws_send_error","text":"\u2022 WS_SEND_ERROR = \"WS_SEND_ERROR\"","title":"WS_SEND_ERROR"},{"location":"api/enums/core.constants.websocketclientstates/","text":"Discordoo / Modules / core / Constants / WebSocketClientStates Enumeration: WebSocketClientStates # core . Constants .WebSocketClientStates Table of contents # Enumeration members # CONNECTED CONNECTING CREATED DISCONNECTED IDENTIFYING READY RECONNECTING RESUMING WAITING_FOR_GUILDS Enumeration members # CONNECTED # \u2022 CONNECTED = 4 Defined in # src/core/Constants.ts:130 CONNECTING # \u2022 CONNECTING = 2 Defined in # src/core/Constants.ts:128 CREATED # \u2022 CREATED = 0 Defined in # src/core/Constants.ts:126 DISCONNECTED # \u2022 DISCONNECTED = 5 Defined in # src/core/Constants.ts:131 IDENTIFYING # \u2022 IDENTIFYING = 7 Defined in # src/core/Constants.ts:133 READY # \u2022 READY = 1 Defined in # src/core/Constants.ts:127 RECONNECTING # \u2022 RECONNECTING = 3 Defined in # src/core/Constants.ts:129 RESUMING # \u2022 RESUMING = 8 Defined in # src/core/Constants.ts:134 WAITING_FOR_GUILDS # \u2022 WAITING_FOR_GUILDS = 6 Defined in # src/core/Constants.ts:132","title":"WebSocketClientStates"},{"location":"api/enums/core.constants.websocketclientstates/#enumeration-websocketclientstates","text":"core . Constants .WebSocketClientStates","title":"Enumeration: WebSocketClientStates"},{"location":"api/enums/core.constants.websocketclientstates/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketclientstates/#enumeration-members","text":"CONNECTED CONNECTING CREATED DISCONNECTED IDENTIFYING READY RECONNECTING RESUMING WAITING_FOR_GUILDS","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketclientstates/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketclientstates/#connected","text":"\u2022 CONNECTED = 4","title":"CONNECTED"},{"location":"api/enums/core.constants.websocketclientstates/#connecting","text":"\u2022 CONNECTING = 2","title":"CONNECTING"},{"location":"api/enums/core.constants.websocketclientstates/#created","text":"\u2022 CREATED = 0","title":"CREATED"},{"location":"api/enums/core.constants.websocketclientstates/#disconnected","text":"\u2022 DISCONNECTED = 5","title":"DISCONNECTED"},{"location":"api/enums/core.constants.websocketclientstates/#identifying","text":"\u2022 IDENTIFYING = 7","title":"IDENTIFYING"},{"location":"api/enums/core.constants.websocketclientstates/#ready","text":"\u2022 READY = 1","title":"READY"},{"location":"api/enums/core.constants.websocketclientstates/#reconnecting","text":"\u2022 RECONNECTING = 3","title":"RECONNECTING"},{"location":"api/enums/core.constants.websocketclientstates/#resuming","text":"\u2022 RESUMING = 8","title":"RESUMING"},{"location":"api/enums/core.constants.websocketclientstates/#waiting_for_guilds","text":"\u2022 WAITING_FOR_GUILDS = 6","title":"WAITING_FOR_GUILDS"},{"location":"api/enums/core.constants.websocketevents/","text":"Discordoo / Modules / core / Constants / WebSocketEvents Enumeration: WebSocketEvents # core . Constants .WebSocketEvents Table of contents # Enumeration members # CHANNEL_CREATE CHANNEL_DELETE CHANNEL_PINS_UPDATE CHANNEL_UPDATE GUILD_BAN_ADD GUILD_BAN_REMOVE GUILD_CREATE GUILD_DELETE GUILD_EMOJIS_UPDATE GUILD_INTEGRATIONS_UPDATE GUILD_MEMBERS_CHUNK GUILD_MEMBER_ADD GUILD_MEMBER_REMOVE GUILD_MEMBER_UPDATE GUILD_ROLE_CREATE GUILD_ROLE_DELETE GUILD_ROLE_UPDATE GUILD_UPDATE INVITE_CREATE INVITE_DELETE MESSAGE_CREATE MESSAGE_DELETE MESSAGE_DELETE_BULK MESSAGE_REACTION_ADD MESSAGE_REACTION_REMOVE MESSAGE_REACTION_REMOVE_ALL MESSAGE_REACTION_REMOVE_EMOJI MESSAGE_UPDATE PRESENCE_UPDATE READY RESUMED TYPING_START USER_UPDATE VOICE_SERVER_UPDATE VOICE_STATE_UPDATE WEBHOOKS_UPDATE Enumeration members # CHANNEL_CREATE # \u2022 CHANNEL_CREATE = \"CHANNEL_CREATE\" Defined in # src/core/Constants.ts:86 CHANNEL_DELETE # \u2022 CHANNEL_DELETE = \"CHANNEL_DELETE\" Defined in # src/core/Constants.ts:87 CHANNEL_PINS_UPDATE # \u2022 CHANNEL_PINS_UPDATE = \"CHANNEL_PINS_UPDATE\" Defined in # src/core/Constants.ts:89 CHANNEL_UPDATE # \u2022 CHANNEL_UPDATE = \"CHANNEL_UPDATE\" Defined in # src/core/Constants.ts:88 GUILD_BAN_ADD # \u2022 GUILD_BAN_ADD = \"GUILD_BAN_ADD\" Defined in # src/core/Constants.ts:83 GUILD_BAN_REMOVE # \u2022 GUILD_BAN_REMOVE = \"GUILD_BAN_REMOVE\" Defined in # src/core/Constants.ts:84 GUILD_CREATE # \u2022 GUILD_CREATE = \"GUILD_CREATE\" Defined in # src/core/Constants.ts:70 GUILD_DELETE # \u2022 GUILD_DELETE = \"GUILD_DELETE\" Defined in # src/core/Constants.ts:71 GUILD_EMOJIS_UPDATE # \u2022 GUILD_EMOJIS_UPDATE = \"GUILD_EMOJIS_UPDATE\" Defined in # src/core/Constants.ts:85 GUILD_INTEGRATIONS_UPDATE # \u2022 GUILD_INTEGRATIONS_UPDATE = \"GUILD_INTEGRATIONS_UPDATE\" Defined in # src/core/Constants.ts:79 GUILD_MEMBERS_CHUNK # \u2022 GUILD_MEMBERS_CHUNK = \"GUILD_MEMBERS_CHUNK\" Defined in # src/core/Constants.ts:78 GUILD_MEMBER_ADD # \u2022 GUILD_MEMBER_ADD = \"GUILD_MEMBER_ADD\" Defined in # src/core/Constants.ts:75 GUILD_MEMBER_REMOVE # \u2022 GUILD_MEMBER_REMOVE = \"GUILD_MEMBER_REMOVE\" Defined in # src/core/Constants.ts:76 GUILD_MEMBER_UPDATE # \u2022 GUILD_MEMBER_UPDATE = \"GUILD_MEMBER_UPDATE\" Defined in # src/core/Constants.ts:77 GUILD_ROLE_CREATE # \u2022 GUILD_ROLE_CREATE = \"GUILD_ROLE_CREATE\" Defined in # src/core/Constants.ts:80 GUILD_ROLE_DELETE # \u2022 GUILD_ROLE_DELETE = \"GUILD_ROLE_DELETE\" Defined in # src/core/Constants.ts:81 GUILD_ROLE_UPDATE # \u2022 GUILD_ROLE_UPDATE = \"GUILD_ROLE_UPDATE\" Defined in # src/core/Constants.ts:82 GUILD_UPDATE # \u2022 GUILD_UPDATE = \"GUILD_UPDATE\" Defined in # src/core/Constants.ts:72 INVITE_CREATE # \u2022 INVITE_CREATE = \"INVITE_CREATE\" Defined in # src/core/Constants.ts:73 INVITE_DELETE # \u2022 INVITE_DELETE = \"INVITE_DELETE\" Defined in # src/core/Constants.ts:74 MESSAGE_CREATE # \u2022 MESSAGE_CREATE = \"MESSAGE_CREATE\" Defined in # src/core/Constants.ts:90 MESSAGE_DELETE # \u2022 MESSAGE_DELETE = \"MESSAGE_DELETE\" Defined in # src/core/Constants.ts:91 MESSAGE_DELETE_BULK # \u2022 MESSAGE_DELETE_BULK = \"MESSAGE_DELETE_BULK\" Defined in # src/core/Constants.ts:93 MESSAGE_REACTION_ADD # \u2022 MESSAGE_REACTION_ADD = \"MESSAGE_REACTION_ADD\" Defined in # src/core/Constants.ts:94 MESSAGE_REACTION_REMOVE # \u2022 MESSAGE_REACTION_REMOVE = \"MESSAGE_REACTION_REMOVE\" Defined in # src/core/Constants.ts:95 MESSAGE_REACTION_REMOVE_ALL # \u2022 MESSAGE_REACTION_REMOVE_ALL = \"MESSAGE_REACTION_REMOVE_ALL\" Defined in # src/core/Constants.ts:96 MESSAGE_REACTION_REMOVE_EMOJI # \u2022 MESSAGE_REACTION_REMOVE_EMOJI = \"MESSAGE_REACTION_REMOVE_EMOJI\" Defined in # src/core/Constants.ts:97 MESSAGE_UPDATE # \u2022 MESSAGE_UPDATE = \"MESSAGE_UPDATE\" Defined in # src/core/Constants.ts:92 PRESENCE_UPDATE # \u2022 PRESENCE_UPDATE = \"PRESENCE_UPDATE\" Defined in # src/core/Constants.ts:99 READY # \u2022 READY = \"READY\" Defined in # src/core/Constants.ts:68 RESUMED # \u2022 RESUMED = \"RESUMED\" Defined in # src/core/Constants.ts:69 TYPING_START # \u2022 TYPING_START = \"TYPING_START\" Defined in # src/core/Constants.ts:100 USER_UPDATE # \u2022 USER_UPDATE = \"USER_UPDATE\" Defined in # src/core/Constants.ts:98 VOICE_SERVER_UPDATE # \u2022 VOICE_SERVER_UPDATE = \"VOICE_SERVER_UPDATE\" Defined in # src/core/Constants.ts:102 VOICE_STATE_UPDATE # \u2022 VOICE_STATE_UPDATE = \"VOICE_STATE_UPDATE\" Defined in # src/core/Constants.ts:101 WEBHOOKS_UPDATE # \u2022 WEBHOOKS_UPDATE = \"WEBHOOKS_UPDATE\" Defined in # src/core/Constants.ts:103","title":"WebSocketEvents"},{"location":"api/enums/core.constants.websocketevents/#enumeration-websocketevents","text":"core . Constants .WebSocketEvents","title":"Enumeration: WebSocketEvents"},{"location":"api/enums/core.constants.websocketevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketevents/#enumeration-members","text":"CHANNEL_CREATE CHANNEL_DELETE CHANNEL_PINS_UPDATE CHANNEL_UPDATE GUILD_BAN_ADD GUILD_BAN_REMOVE GUILD_CREATE GUILD_DELETE GUILD_EMOJIS_UPDATE GUILD_INTEGRATIONS_UPDATE GUILD_MEMBERS_CHUNK GUILD_MEMBER_ADD GUILD_MEMBER_REMOVE GUILD_MEMBER_UPDATE GUILD_ROLE_CREATE GUILD_ROLE_DELETE GUILD_ROLE_UPDATE GUILD_UPDATE INVITE_CREATE INVITE_DELETE MESSAGE_CREATE MESSAGE_DELETE MESSAGE_DELETE_BULK MESSAGE_REACTION_ADD MESSAGE_REACTION_REMOVE MESSAGE_REACTION_REMOVE_ALL MESSAGE_REACTION_REMOVE_EMOJI MESSAGE_UPDATE PRESENCE_UPDATE READY RESUMED TYPING_START USER_UPDATE VOICE_SERVER_UPDATE VOICE_STATE_UPDATE WEBHOOKS_UPDATE","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketevents/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketevents/#channel_create","text":"\u2022 CHANNEL_CREATE = \"CHANNEL_CREATE\"","title":"CHANNEL_CREATE"},{"location":"api/enums/core.constants.websocketevents/#channel_delete","text":"\u2022 CHANNEL_DELETE = \"CHANNEL_DELETE\"","title":"CHANNEL_DELETE"},{"location":"api/enums/core.constants.websocketevents/#channel_pins_update","text":"\u2022 CHANNEL_PINS_UPDATE = \"CHANNEL_PINS_UPDATE\"","title":"CHANNEL_PINS_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#channel_update","text":"\u2022 CHANNEL_UPDATE = \"CHANNEL_UPDATE\"","title":"CHANNEL_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_ban_add","text":"\u2022 GUILD_BAN_ADD = \"GUILD_BAN_ADD\"","title":"GUILD_BAN_ADD"},{"location":"api/enums/core.constants.websocketevents/#guild_ban_remove","text":"\u2022 GUILD_BAN_REMOVE = \"GUILD_BAN_REMOVE\"","title":"GUILD_BAN_REMOVE"},{"location":"api/enums/core.constants.websocketevents/#guild_create","text":"\u2022 GUILD_CREATE = \"GUILD_CREATE\"","title":"GUILD_CREATE"},{"location":"api/enums/core.constants.websocketevents/#guild_delete","text":"\u2022 GUILD_DELETE = \"GUILD_DELETE\"","title":"GUILD_DELETE"},{"location":"api/enums/core.constants.websocketevents/#guild_emojis_update","text":"\u2022 GUILD_EMOJIS_UPDATE = \"GUILD_EMOJIS_UPDATE\"","title":"GUILD_EMOJIS_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_integrations_update","text":"\u2022 GUILD_INTEGRATIONS_UPDATE = \"GUILD_INTEGRATIONS_UPDATE\"","title":"GUILD_INTEGRATIONS_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_members_chunk","text":"\u2022 GUILD_MEMBERS_CHUNK = \"GUILD_MEMBERS_CHUNK\"","title":"GUILD_MEMBERS_CHUNK"},{"location":"api/enums/core.constants.websocketevents/#guild_member_add","text":"\u2022 GUILD_MEMBER_ADD = \"GUILD_MEMBER_ADD\"","title":"GUILD_MEMBER_ADD"},{"location":"api/enums/core.constants.websocketevents/#guild_member_remove","text":"\u2022 GUILD_MEMBER_REMOVE = \"GUILD_MEMBER_REMOVE\"","title":"GUILD_MEMBER_REMOVE"},{"location":"api/enums/core.constants.websocketevents/#guild_member_update","text":"\u2022 GUILD_MEMBER_UPDATE = \"GUILD_MEMBER_UPDATE\"","title":"GUILD_MEMBER_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_role_create","text":"\u2022 GUILD_ROLE_CREATE = \"GUILD_ROLE_CREATE\"","title":"GUILD_ROLE_CREATE"},{"location":"api/enums/core.constants.websocketevents/#guild_role_delete","text":"\u2022 GUILD_ROLE_DELETE = \"GUILD_ROLE_DELETE\"","title":"GUILD_ROLE_DELETE"},{"location":"api/enums/core.constants.websocketevents/#guild_role_update","text":"\u2022 GUILD_ROLE_UPDATE = \"GUILD_ROLE_UPDATE\"","title":"GUILD_ROLE_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#guild_update","text":"\u2022 GUILD_UPDATE = \"GUILD_UPDATE\"","title":"GUILD_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#invite_create","text":"\u2022 INVITE_CREATE = \"INVITE_CREATE\"","title":"INVITE_CREATE"},{"location":"api/enums/core.constants.websocketevents/#invite_delete","text":"\u2022 INVITE_DELETE = \"INVITE_DELETE\"","title":"INVITE_DELETE"},{"location":"api/enums/core.constants.websocketevents/#message_create","text":"\u2022 MESSAGE_CREATE = \"MESSAGE_CREATE\"","title":"MESSAGE_CREATE"},{"location":"api/enums/core.constants.websocketevents/#message_delete","text":"\u2022 MESSAGE_DELETE = \"MESSAGE_DELETE\"","title":"MESSAGE_DELETE"},{"location":"api/enums/core.constants.websocketevents/#message_delete_bulk","text":"\u2022 MESSAGE_DELETE_BULK = \"MESSAGE_DELETE_BULK\"","title":"MESSAGE_DELETE_BULK"},{"location":"api/enums/core.constants.websocketevents/#message_reaction_add","text":"\u2022 MESSAGE_REACTION_ADD = \"MESSAGE_REACTION_ADD\"","title":"MESSAGE_REACTION_ADD"},{"location":"api/enums/core.constants.websocketevents/#message_reaction_remove","text":"\u2022 MESSAGE_REACTION_REMOVE = \"MESSAGE_REACTION_REMOVE\"","title":"MESSAGE_REACTION_REMOVE"},{"location":"api/enums/core.constants.websocketevents/#message_reaction_remove_all","text":"\u2022 MESSAGE_REACTION_REMOVE_ALL = \"MESSAGE_REACTION_REMOVE_ALL\"","title":"MESSAGE_REACTION_REMOVE_ALL"},{"location":"api/enums/core.constants.websocketevents/#message_reaction_remove_emoji","text":"\u2022 MESSAGE_REACTION_REMOVE_EMOJI = \"MESSAGE_REACTION_REMOVE_EMOJI\"","title":"MESSAGE_REACTION_REMOVE_EMOJI"},{"location":"api/enums/core.constants.websocketevents/#message_update","text":"\u2022 MESSAGE_UPDATE = \"MESSAGE_UPDATE\"","title":"MESSAGE_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#presence_update","text":"\u2022 PRESENCE_UPDATE = \"PRESENCE_UPDATE\"","title":"PRESENCE_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#ready","text":"\u2022 READY = \"READY\"","title":"READY"},{"location":"api/enums/core.constants.websocketevents/#resumed","text":"\u2022 RESUMED = \"RESUMED\"","title":"RESUMED"},{"location":"api/enums/core.constants.websocketevents/#typing_start","text":"\u2022 TYPING_START = \"TYPING_START\"","title":"TYPING_START"},{"location":"api/enums/core.constants.websocketevents/#user_update","text":"\u2022 USER_UPDATE = \"USER_UPDATE\"","title":"USER_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#voice_server_update","text":"\u2022 VOICE_SERVER_UPDATE = \"VOICE_SERVER_UPDATE\"","title":"VOICE_SERVER_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#voice_state_update","text":"\u2022 VOICE_STATE_UPDATE = \"VOICE_STATE_UPDATE\"","title":"VOICE_STATE_UPDATE"},{"location":"api/enums/core.constants.websocketevents/#webhooks_update","text":"\u2022 WEBHOOKS_UPDATE = \"WEBHOOKS_UPDATE\"","title":"WEBHOOKS_UPDATE"},{"location":"api/enums/core.constants.websocketmanagerstates/","text":"Discordoo / Modules / core / Constants / WebSocketManagerStates Enumeration: WebSocketManagerStates # core . Constants .WebSocketManagerStates Table of contents # Enumeration members # CONNECTING CREATED DISCONNECTED READY Enumeration members # CONNECTING # \u2022 CONNECTING = 1 Defined in # src/core/Constants.ts:156 CREATED # \u2022 CREATED = 0 Defined in # src/core/Constants.ts:155 DISCONNECTED # \u2022 DISCONNECTED = 3 Defined in # src/core/Constants.ts:158 READY # \u2022 READY = 2 Defined in # src/core/Constants.ts:157","title":"WebSocketManagerStates"},{"location":"api/enums/core.constants.websocketmanagerstates/#enumeration-websocketmanagerstates","text":"core . Constants .WebSocketManagerStates","title":"Enumeration: WebSocketManagerStates"},{"location":"api/enums/core.constants.websocketmanagerstates/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketmanagerstates/#enumeration-members","text":"CONNECTING CREATED DISCONNECTED READY","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketmanagerstates/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketmanagerstates/#connecting","text":"\u2022 CONNECTING = 1","title":"CONNECTING"},{"location":"api/enums/core.constants.websocketmanagerstates/#created","text":"\u2022 CREATED = 0","title":"CREATED"},{"location":"api/enums/core.constants.websocketmanagerstates/#disconnected","text":"\u2022 DISCONNECTED = 3","title":"DISCONNECTED"},{"location":"api/enums/core.constants.websocketmanagerstates/#ready","text":"\u2022 READY = 2","title":"READY"},{"location":"api/enums/core.constants.websocketopcodes/","text":"Discordoo / Modules / core / Constants / WebSocketOPCodes Enumeration: WebSocketOPCodes # core . Constants .WebSocketOPCodes Table of contents # Enumeration members # DISPATCH HEARTBEAT HEARTBEAT_ACK HELLO IDENTIFY INVALID_SESSION RECONNECT REQUEST_GUILD_MEMBERS RESUME STATUS_UPDATE VOICE_GUILD_PING VOICE_STATE_UPDATE Enumeration members # DISPATCH # \u2022 DISPATCH = 0 Defined in # src/core/Constants.ts:53 HEARTBEAT # \u2022 HEARTBEAT = 1 Defined in # src/core/Constants.ts:54 HEARTBEAT_ACK # \u2022 HEARTBEAT_ACK = 11 Defined in # src/core/Constants.ts:64 HELLO # \u2022 HELLO = 10 Defined in # src/core/Constants.ts:63 IDENTIFY # \u2022 IDENTIFY = 2 Defined in # src/core/Constants.ts:55 INVALID_SESSION # \u2022 INVALID_SESSION = 9 Defined in # src/core/Constants.ts:62 RECONNECT # \u2022 RECONNECT = 7 Defined in # src/core/Constants.ts:60 REQUEST_GUILD_MEMBERS # \u2022 REQUEST_GUILD_MEMBERS = 8 Defined in # src/core/Constants.ts:61 RESUME # \u2022 RESUME = 6 Defined in # src/core/Constants.ts:59 STATUS_UPDATE # \u2022 STATUS_UPDATE = 3 Defined in # src/core/Constants.ts:56 VOICE_GUILD_PING # \u2022 VOICE_GUILD_PING = 5 Defined in # src/core/Constants.ts:58 VOICE_STATE_UPDATE # \u2022 VOICE_STATE_UPDATE = 4 Defined in # src/core/Constants.ts:57","title":"WebSocketOPCodes"},{"location":"api/enums/core.constants.websocketopcodes/#enumeration-websocketopcodes","text":"core . Constants .WebSocketOPCodes","title":"Enumeration: WebSocketOPCodes"},{"location":"api/enums/core.constants.websocketopcodes/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketopcodes/#enumeration-members","text":"DISPATCH HEARTBEAT HEARTBEAT_ACK HELLO IDENTIFY INVALID_SESSION RECONNECT REQUEST_GUILD_MEMBERS RESUME STATUS_UPDATE VOICE_GUILD_PING VOICE_STATE_UPDATE","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketopcodes/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketopcodes/#dispatch","text":"\u2022 DISPATCH = 0","title":"DISPATCH"},{"location":"api/enums/core.constants.websocketopcodes/#heartbeat","text":"\u2022 HEARTBEAT = 1","title":"HEARTBEAT"},{"location":"api/enums/core.constants.websocketopcodes/#heartbeat_ack","text":"\u2022 HEARTBEAT_ACK = 11","title":"HEARTBEAT_ACK"},{"location":"api/enums/core.constants.websocketopcodes/#hello","text":"\u2022 HELLO = 10","title":"HELLO"},{"location":"api/enums/core.constants.websocketopcodes/#identify","text":"\u2022 IDENTIFY = 2","title":"IDENTIFY"},{"location":"api/enums/core.constants.websocketopcodes/#invalid_session","text":"\u2022 INVALID_SESSION = 9","title":"INVALID_SESSION"},{"location":"api/enums/core.constants.websocketopcodes/#reconnect","text":"\u2022 RECONNECT = 7","title":"RECONNECT"},{"location":"api/enums/core.constants.websocketopcodes/#request_guild_members","text":"\u2022 REQUEST_GUILD_MEMBERS = 8","title":"REQUEST_GUILD_MEMBERS"},{"location":"api/enums/core.constants.websocketopcodes/#resume","text":"\u2022 RESUME = 6","title":"RESUME"},{"location":"api/enums/core.constants.websocketopcodes/#status_update","text":"\u2022 STATUS_UPDATE = 3","title":"STATUS_UPDATE"},{"location":"api/enums/core.constants.websocketopcodes/#voice_guild_ping","text":"\u2022 VOICE_GUILD_PING = 5","title":"VOICE_GUILD_PING"},{"location":"api/enums/core.constants.websocketopcodes/#voice_state_update","text":"\u2022 VOICE_STATE_UPDATE = 4","title":"VOICE_STATE_UPDATE"},{"location":"api/enums/core.constants.websocketshardstatus/","text":"Discordoo / Modules / core / Constants / WebSocketShardStatus Enumeration: WebSocketShardStatus # core . Constants .WebSocketShardStatus Table of contents # Enumeration members # CONNECTED CONNECTING CREATED DISCONNECTED IDENTIFYING READY RECONNECTING RESUMING WAITING_FOR_GUILDS Enumeration members # CONNECTED # \u2022 CONNECTED = 4 Defined in # src/core/Constants.ts:118 CONNECTING # \u2022 CONNECTING = 2 Defined in # src/core/Constants.ts:116 CREATED # \u2022 CREATED = 0 Defined in # src/core/Constants.ts:114 DISCONNECTED # \u2022 DISCONNECTED = 5 Defined in # src/core/Constants.ts:119 IDENTIFYING # \u2022 IDENTIFYING = 7 Defined in # src/core/Constants.ts:121 READY # \u2022 READY = 1 Defined in # src/core/Constants.ts:115 RECONNECTING # \u2022 RECONNECTING = 3 Defined in # src/core/Constants.ts:117 RESUMING # \u2022 RESUMING = 8 Defined in # src/core/Constants.ts:122 WAITING_FOR_GUILDS # \u2022 WAITING_FOR_GUILDS = 6 Defined in # src/core/Constants.ts:120","title":"WebSocketShardStatus"},{"location":"api/enums/core.constants.websocketshardstatus/#enumeration-websocketshardstatus","text":"core . Constants .WebSocketShardStatus","title":"Enumeration: WebSocketShardStatus"},{"location":"api/enums/core.constants.websocketshardstatus/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketshardstatus/#enumeration-members","text":"CONNECTED CONNECTING CREATED DISCONNECTED IDENTIFYING READY RECONNECTING RESUMING WAITING_FOR_GUILDS","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketshardstatus/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketshardstatus/#connected","text":"\u2022 CONNECTED = 4","title":"CONNECTED"},{"location":"api/enums/core.constants.websocketshardstatus/#connecting","text":"\u2022 CONNECTING = 2","title":"CONNECTING"},{"location":"api/enums/core.constants.websocketshardstatus/#created","text":"\u2022 CREATED = 0","title":"CREATED"},{"location":"api/enums/core.constants.websocketshardstatus/#disconnected","text":"\u2022 DISCONNECTED = 5","title":"DISCONNECTED"},{"location":"api/enums/core.constants.websocketshardstatus/#identifying","text":"\u2022 IDENTIFYING = 7","title":"IDENTIFYING"},{"location":"api/enums/core.constants.websocketshardstatus/#ready","text":"\u2022 READY = 1","title":"READY"},{"location":"api/enums/core.constants.websocketshardstatus/#reconnecting","text":"\u2022 RECONNECTING = 3","title":"RECONNECTING"},{"location":"api/enums/core.constants.websocketshardstatus/#resuming","text":"\u2022 RESUMING = 8","title":"RESUMING"},{"location":"api/enums/core.constants.websocketshardstatus/#waiting_for_guilds","text":"\u2022 WAITING_FOR_GUILDS = 6","title":"WAITING_FOR_GUILDS"},{"location":"api/enums/core.constants.websocketstates/","text":"Discordoo / Modules / core / Constants / WebSocketStates Enumeration: WebSocketStates # core . Constants .WebSocketStates Table of contents # Enumeration members # CLOSED CLOSING CONNECTING OPEN Enumeration members # CLOSED # \u2022 CLOSED = 3 Defined in # src/core/Constants.ts:110 CLOSING # \u2022 CLOSING = 2 Defined in # src/core/Constants.ts:109 CONNECTING # \u2022 CONNECTING = 0 Defined in # src/core/Constants.ts:107 OPEN # \u2022 OPEN = 1 Defined in # src/core/Constants.ts:108","title":"WebSocketStates"},{"location":"api/enums/core.constants.websocketstates/#enumeration-websocketstates","text":"core . Constants .WebSocketStates","title":"Enumeration: WebSocketStates"},{"location":"api/enums/core.constants.websocketstates/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/enums/core.constants.websocketstates/#enumeration-members","text":"CLOSED CLOSING CONNECTING OPEN","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketstates/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/core.constants.websocketstates/#closed","text":"\u2022 CLOSED = 3","title":"CLOSED"},{"location":"api/enums/core.constants.websocketstates/#closing","text":"\u2022 CLOSING = 2","title":"CLOSING"},{"location":"api/enums/core.constants.websocketstates/#connecting","text":"\u2022 CONNECTING = 0","title":"CONNECTING"},{"location":"api/enums/core.constants.websocketstates/#open","text":"\u2022 OPEN = 1","title":"OPEN"},{"location":"api/interfaces/collection.collectionequaloptions/","text":"Discordoo / Modules / collection / CollectionEqualOptions Interface: CollectionEqualOptions # collection .CollectionEqualOptions Table of contents # Properties # deep Properties # deep # \u2022 Optional deep : boolean Defined in # src/collection/interfaces/CollectionEqualOptions.ts:2","title":"CollectionEqualOptions"},{"location":"api/interfaces/collection.collectionequaloptions/#interface-collectionequaloptions","text":"collection .CollectionEqualOptions","title":"Interface: CollectionEqualOptions"},{"location":"api/interfaces/collection.collectionequaloptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/collection.collectionequaloptions/#properties","text":"deep","title":"Properties"},{"location":"api/interfaces/collection.collectionequaloptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/collection.collectionequaloptions/#deep","text":"\u2022 Optional deep : boolean","title":"deep"},{"location":"api/interfaces/collection.collectionfilteroptions/","text":"Discordoo / Modules / collection / CollectionFilterOptions Interface: CollectionFilterOptions # collection .CollectionFilterOptions Table of contents # Properties # return Properties # return # \u2022 Optional return : \"collection\" | \"map\" | \"array\" Defined in # src/collection/interfaces/CollectionFilterOptions.ts:2","title":"CollectionFilterOptions"},{"location":"api/interfaces/collection.collectionfilteroptions/#interface-collectionfilteroptions","text":"collection .CollectionFilterOptions","title":"Interface: CollectionFilterOptions"},{"location":"api/interfaces/collection.collectionfilteroptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/collection.collectionfilteroptions/#properties","text":"return","title":"Properties"},{"location":"api/interfaces/collection.collectionfilteroptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/collection.collectionfilteroptions/#return","text":"\u2022 Optional return : \"collection\" | \"map\" | \"array\"","title":"return"},{"location":"api/interfaces/collection.collectionrandomoptions/","text":"Discordoo / Modules / collection / CollectionRandomOptions Interface: CollectionRandomOptions # collection .CollectionRandomOptions Table of contents # Properties # unique Properties # unique # \u2022 Optional unique : boolean Defined in # src/collection/interfaces/CollectionRandomOptions.ts:2","title":"CollectionRandomOptions"},{"location":"api/interfaces/collection.collectionrandomoptions/#interface-collectionrandomoptions","text":"collection .CollectionRandomOptions","title":"Interface: CollectionRandomOptions"},{"location":"api/interfaces/collection.collectionrandomoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/collection.collectionrandomoptions/#properties","text":"unique","title":"Properties"},{"location":"api/interfaces/collection.collectionrandomoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/collection.collectionrandomoptions/#unique","text":"\u2022 Optional unique : boolean","title":"unique"},{"location":"api/interfaces/core.cacheprovider/","text":"Discordoo / Modules / core / CacheProvider Interface: CacheProvider<K, V> # core .CacheProvider Represents a cache provider. Custom caching modules must implement it note Some implementations may use remote cache, e.g. Redis, so all the methods are async Type parameters # Name Type K unknown V unknown Table of contents # Methods # delete get has set size Methods # delete # \u25b8 delete ( keyspace , key , options? ): Promise < boolean > Delete a key from cache Parameters # Name Type Description keyspace string keyspace in which to delete key K cache to delete options? CacheProviderDeleteOptions deleting options Returns # Promise < boolean > Defined in # src/core/providers/cache/CacheProvider.ts:36 get # \u25b8 get ( keyspace , key , options? ): Promise < null | V > Get value from key Parameters # Name Type Description keyspace string keyspace in which to search key K key to get value options? CacheProviderGetOptions getting options Returns # Promise < null | V > Defined in # src/core/providers/cache/CacheProvider.ts:19 has # \u25b8 has ( keyspace , key , options? ): Promise < boolean > Check if key exists in cache Parameters # Name Type Description keyspace string keyspace in which to search key K key to check options? CacheProviderHasOptions checking options Returns # Promise < boolean > Defined in # src/core/providers/cache/CacheProvider.ts:44 set # \u25b8 set ( keyspace , key , value , options? ): Promise < CacheProvider < K , V >> Set a key to given value Parameters # Name Type Description keyspace string keyspace in which to set key K key to use value V value to set options? CacheProviderSetOptions setting options Returns # Promise < CacheProvider < K , V >> Defined in # src/core/providers/cache/CacheProvider.ts:28 size # \u25b8 size ( keyspace? , options? ): Promise < number > Get size of cache in keyspace or in all cache Parameters # Name Type Description keyspace? string keyspace in which to search options? CacheProviderSizeOptions calculating options Returns # Promise < number > Defined in # src/core/providers/cache/CacheProvider.ts:51","title":"CacheProvider"},{"location":"api/interfaces/core.cacheprovider/#interface-cacheproviderk-v","text":"core .CacheProvider Represents a cache provider. Custom caching modules must implement it note Some implementations may use remote cache, e.g. Redis, so all the methods are async","title":"Interface: CacheProvider&lt;K, V>"},{"location":"api/interfaces/core.cacheprovider/#type-parameters","text":"Name Type K unknown V unknown","title":"Type parameters"},{"location":"api/interfaces/core.cacheprovider/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.cacheprovider/#methods","text":"delete get has set size","title":"Methods"},{"location":"api/interfaces/core.cacheprovider/#methods_1","text":"","title":"Methods"},{"location":"api/interfaces/core.cacheprovider/#delete","text":"\u25b8 delete ( keyspace , key , options? ): Promise < boolean > Delete a key from cache","title":"delete"},{"location":"api/interfaces/core.cacheprovider/#get","text":"\u25b8 get ( keyspace , key , options? ): Promise < null | V > Get value from key","title":"get"},{"location":"api/interfaces/core.cacheprovider/#has","text":"\u25b8 has ( keyspace , key , options? ): Promise < boolean > Check if key exists in cache","title":"has"},{"location":"api/interfaces/core.cacheprovider/#set","text":"\u25b8 set ( keyspace , key , value , options? ): Promise < CacheProvider < K , V >> Set a key to given value","title":"set"},{"location":"api/interfaces/core.cacheprovider/#size","text":"\u25b8 size ( keyspace? , options? ): Promise < number > Get size of cache in keyspace or in all cache","title":"size"},{"location":"api/interfaces/core.clienteventshandlers/","text":"Discordoo / Modules / core / ClientEventsHandlers Interface: ClientEventsHandlers # core .ClientEventsHandlers Client events Table of contents # Properties # ready Properties # ready # \u2022 ready : () => unknown Type declaration # \u25b8 (): unknown Emitted once the client is ready Returns # unknown Defined in # src/core/client/ClientEventsHandlers.ts:5","title":"ClientEventsHandlers"},{"location":"api/interfaces/core.clienteventshandlers/#interface-clienteventshandlers","text":"core .ClientEventsHandlers Client events","title":"Interface: ClientEventsHandlers"},{"location":"api/interfaces/core.clienteventshandlers/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.clienteventshandlers/#properties","text":"ready","title":"Properties"},{"location":"api/interfaces/core.clienteventshandlers/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.clienteventshandlers/#ready","text":"\u2022 ready : () => unknown","title":"ready"},{"location":"api/interfaces/core.defaultclientstack/","text":"Discordoo / Modules / core / DefaultClientStack Interface: DefaultClientStack # core .DefaultClientStack Table of contents # Properties # cache events gateway ipc rest Properties # cache # \u2022 cache : CacheProvider < unknown , unknown > Defined in # src/core/client/DefaultClientStack.ts:8 events # \u2022 events : ClientEventsHandlers Defined in # src/core/client/DefaultClientStack.ts:10 gateway # \u2022 gateway : GatewayProviderAPI Defined in # src/core/client/DefaultClientStack.ts:11 ipc # \u2022 ipc : IpcServer Defined in # src/core/client/DefaultClientStack.ts:12 rest # \u2022 rest : RequestBuilder Defined in # src/core/client/DefaultClientStack.ts:9","title":"DefaultClientStack"},{"location":"api/interfaces/core.defaultclientstack/#interface-defaultclientstack","text":"core .DefaultClientStack","title":"Interface: DefaultClientStack"},{"location":"api/interfaces/core.defaultclientstack/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.defaultclientstack/#properties","text":"cache events gateway ipc rest","title":"Properties"},{"location":"api/interfaces/core.defaultclientstack/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.defaultclientstack/#cache","text":"\u2022 cache : CacheProvider < unknown , unknown >","title":"cache"},{"location":"api/interfaces/core.defaultclientstack/#events","text":"\u2022 events : ClientEventsHandlers","title":"events"},{"location":"api/interfaces/core.defaultclientstack/#gateway","text":"\u2022 gateway : GatewayProviderAPI","title":"gateway"},{"location":"api/interfaces/core.defaultclientstack/#ipc","text":"\u2022 ipc : IpcServer","title":"ipc"},{"location":"api/interfaces/core.defaultclientstack/#rest","text":"\u2022 rest : RequestBuilder","title":"rest"},{"location":"api/interfaces/core.gatewayproviderapi/","text":"Discordoo / Modules / core / GatewayProviderAPI Interface: GatewayProviderAPI # core .GatewayProviderAPI Hierarchy # TypedEmitter < GatewayProviderEvents > \u21b3 GatewayProviderAPI Table of contents # Methods # addListener connect disconnect emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners Methods # addListener # \u25b8 addListener < U >( event , listener ): GatewayProviderAPI Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener GatewayProviderEvents [ U ] Returns # GatewayProviderAPI Inherited from # TypedEmitter.addListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:11 connect # \u25b8 connect ( options? ): Promise < void > Parameters # Name Type options? GatewayConnectOptions Returns # Promise < void > Defined in # src/core/providers/gateway/GatewayProviderAPI.ts:6 disconnect # \u25b8 disconnect (): Promise < void > Returns # Promise < void > Defined in # src/core/providers/gateway/GatewayProviderAPI.ts:7 emit # \u25b8 emit < U >( event , ... args ): boolean Type parameters # Name Type U extends \"message\" Parameters # Name Type event U ...args Parameters < GatewayProviderEvents [ U ]> Returns # boolean Inherited from # TypedEmitter.emit Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:19 eventNames # \u25b8 eventNames < U >(): U [] Type parameters # Name Type U extends \"message\" Returns # U [] Inherited from # TypedEmitter.eventNames Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:20 getMaxListeners # \u25b8 getMaxListeners (): number Returns # number Inherited from # TypedEmitter.getMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:24 listenerCount # \u25b8 listenerCount ( type ): number Parameters # Name Type type \"message\" Returns # number Inherited from # TypedEmitter.listenerCount Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:21 listeners # \u25b8 listeners < U >( type ): GatewayProviderEvents [ U ][] Type parameters # Name Type U extends \"message\" Parameters # Name Type type U Returns # GatewayProviderEvents [ U ][] Inherited from # TypedEmitter.listeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:22 off # \u25b8 off < U >( event , listener ): GatewayProviderAPI Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener GatewayProviderEvents [ U ] Returns # GatewayProviderAPI Inherited from # TypedEmitter.off Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:18 on # \u25b8 on < U >( event , listener ): GatewayProviderAPI Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener GatewayProviderEvents [ U ] Returns # GatewayProviderAPI Inherited from # TypedEmitter.on Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:17 once # \u25b8 once < U >( event , listener ): GatewayProviderAPI Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener GatewayProviderEvents [ U ] Returns # GatewayProviderAPI Inherited from # TypedEmitter.once Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:16 prependListener # \u25b8 prependListener < U >( event , listener ): GatewayProviderAPI Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener GatewayProviderEvents [ U ] Returns # GatewayProviderAPI Inherited from # TypedEmitter.prependListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:12 prependOnceListener # \u25b8 prependOnceListener < U >( event , listener ): GatewayProviderAPI Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener GatewayProviderEvents [ U ] Returns # GatewayProviderAPI Inherited from # TypedEmitter.prependOnceListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:13 rawListeners # \u25b8 rawListeners < U >( type ): GatewayProviderEvents [ U ][] Type parameters # Name Type U extends \"message\" Parameters # Name Type type U Returns # GatewayProviderEvents [ U ][] Inherited from # TypedEmitter.rawListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:23 removeAllListeners # \u25b8 removeAllListeners ( event? ): GatewayProviderAPI Parameters # Name Type event? \"message\" Returns # GatewayProviderAPI Inherited from # TypedEmitter.removeAllListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:15 removeListener # \u25b8 removeListener < U >( event , listener ): GatewayProviderAPI Type parameters # Name Type U extends \"message\" Parameters # Name Type event U listener GatewayProviderEvents [ U ] Returns # GatewayProviderAPI Inherited from # TypedEmitter.removeListener Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:14 setMaxListeners # \u25b8 setMaxListeners ( n ): GatewayProviderAPI Parameters # Name Type n number Returns # GatewayProviderAPI Inherited from # TypedEmitter.setMaxListeners Defined in # node_modules/tiny-typed-emitter/lib/index.d.ts:25","title":"GatewayProviderAPI"},{"location":"api/interfaces/core.gatewayproviderapi/#interface-gatewayproviderapi","text":"core .GatewayProviderAPI","title":"Interface: GatewayProviderAPI"},{"location":"api/interfaces/core.gatewayproviderapi/#hierarchy","text":"TypedEmitter < GatewayProviderEvents > \u21b3 GatewayProviderAPI","title":"Hierarchy"},{"location":"api/interfaces/core.gatewayproviderapi/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.gatewayproviderapi/#methods","text":"addListener connect disconnect emit eventNames getMaxListeners listenerCount listeners off on once prependListener prependOnceListener rawListeners removeAllListeners removeListener setMaxListeners","title":"Methods"},{"location":"api/interfaces/core.gatewayproviderapi/#methods_1","text":"","title":"Methods"},{"location":"api/interfaces/core.gatewayproviderapi/#addlistener","text":"\u25b8 addListener < U >( event , listener ): GatewayProviderAPI","title":"addListener"},{"location":"api/interfaces/core.gatewayproviderapi/#connect","text":"\u25b8 connect ( options? ): Promise < void >","title":"connect"},{"location":"api/interfaces/core.gatewayproviderapi/#disconnect","text":"\u25b8 disconnect (): Promise < void >","title":"disconnect"},{"location":"api/interfaces/core.gatewayproviderapi/#emit","text":"\u25b8 emit < U >( event , ... args ): boolean","title":"emit"},{"location":"api/interfaces/core.gatewayproviderapi/#eventnames","text":"\u25b8 eventNames < U >(): U []","title":"eventNames"},{"location":"api/interfaces/core.gatewayproviderapi/#getmaxlisteners","text":"\u25b8 getMaxListeners (): number","title":"getMaxListeners"},{"location":"api/interfaces/core.gatewayproviderapi/#listenercount","text":"\u25b8 listenerCount ( type ): number","title":"listenerCount"},{"location":"api/interfaces/core.gatewayproviderapi/#listeners","text":"\u25b8 listeners < U >( type ): GatewayProviderEvents [ U ][]","title":"listeners"},{"location":"api/interfaces/core.gatewayproviderapi/#off","text":"\u25b8 off < U >( event , listener ): GatewayProviderAPI","title":"off"},{"location":"api/interfaces/core.gatewayproviderapi/#on","text":"\u25b8 on < U >( event , listener ): GatewayProviderAPI","title":"on"},{"location":"api/interfaces/core.gatewayproviderapi/#once","text":"\u25b8 once < U >( event , listener ): GatewayProviderAPI","title":"once"},{"location":"api/interfaces/core.gatewayproviderapi/#prependlistener","text":"\u25b8 prependListener < U >( event , listener ): GatewayProviderAPI","title":"prependListener"},{"location":"api/interfaces/core.gatewayproviderapi/#prependoncelistener","text":"\u25b8 prependOnceListener < U >( event , listener ): GatewayProviderAPI","title":"prependOnceListener"},{"location":"api/interfaces/core.gatewayproviderapi/#rawlisteners","text":"\u25b8 rawListeners < U >( type ): GatewayProviderEvents [ U ][]","title":"rawListeners"},{"location":"api/interfaces/core.gatewayproviderapi/#removealllisteners","text":"\u25b8 removeAllListeners ( event? ): GatewayProviderAPI","title":"removeAllListeners"},{"location":"api/interfaces/core.gatewayproviderapi/#removelistener","text":"\u25b8 removeListener < U >( event , listener ): GatewayProviderAPI","title":"removeListener"},{"location":"api/interfaces/core.gatewayproviderapi/#setmaxlisteners","text":"\u25b8 setMaxListeners ( n ): GatewayProviderAPI","title":"setMaxListeners"},{"location":"api/interfaces/core.gatewayproviderevents/","text":"Discordoo / Modules / core / GatewayProviderEvents Interface: GatewayProviderEvents # core .GatewayProviderEvents Table of contents # Properties # message Properties # message # \u2022 message : ( data : GatewayReceivePayload ) => any Type declaration # \u25b8 ( data ): any Parameters # Name Type data GatewayReceivePayload Returns # any Defined in # src/core/providers/gateway/GatewayProviderEvents.ts:4","title":"GatewayProviderEvents"},{"location":"api/interfaces/core.gatewayproviderevents/#interface-gatewayproviderevents","text":"core .GatewayProviderEvents","title":"Interface: GatewayProviderEvents"},{"location":"api/interfaces/core.gatewayproviderevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.gatewayproviderevents/#properties","text":"message","title":"Properties"},{"location":"api/interfaces/core.gatewayproviderevents/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.gatewayproviderevents/#message","text":"\u2022 message : ( data : GatewayReceivePayload ) => any","title":"message"},{"location":"api/interfaces/core.requestbuilder/","text":"Discordoo / Modules / core / RequestBuilder Interface: RequestBuilder # core .RequestBuilder Represents a request builder Implemented by # RESTRequestBuilder Table of contents # Methods # delete get patch post put query url Methods # delete # \u25b8 delete < T >( options? ): Promise < RESTResponse < T >> Create DELETE request Type parameters # Name T Parameters # Name Type Description options? RequestOptions options Returns # Promise < RESTResponse < T >> Defined in # src/core/providers/rest/RequestBuilder.ts:35 get # \u25b8 get < T >( options? ): Promise < RESTResponse < T >> Create GET request Type parameters # Name T Parameters # Name Type Description options? RequestOptions options Returns # Promise < RESTResponse < T >> Defined in # src/core/providers/rest/RequestBuilder.ts:23 patch # \u25b8 patch < T >( options? ): Promise < RESTResponse < T >> Create PATCH request Type parameters # Name T Parameters # Name Type Description options? RequestOptions options Returns # Promise < RESTResponse < T >> Defined in # src/core/providers/rest/RequestBuilder.ts:47 post # \u25b8 post < T >( options? ): Promise < RESTResponse < T >> Create POST request Type parameters # Name T Parameters # Name Type Description options? RequestOptions options Returns # Promise < RESTResponse < T >> Defined in # src/core/providers/rest/RequestBuilder.ts:29 put # \u25b8 put < T >( options? ): Promise < RESTResponse < T >> Create PUT request Type parameters # Name T Parameters # Name Type Description options? RequestOptions options Returns # Promise < RESTResponse < T >> Defined in # src/core/providers/rest/RequestBuilder.ts:41 query # \u25b8 query ( k , v ): RequestBuilder Add query data Parameters # Name Type Description k string key v string value Returns # RequestBuilder Defined in # src/core/providers/rest/RequestBuilder.ts:17 url # \u25b8 url (... paths ): RequestBuilder Add part(s) to the URI Parameters # Name Type Description ...paths string [] paths Returns # RequestBuilder Defined in # src/core/providers/rest/RequestBuilder.ts:10","title":"RequestBuilder"},{"location":"api/interfaces/core.requestbuilder/#interface-requestbuilder","text":"core .RequestBuilder Represents a request builder","title":"Interface: RequestBuilder"},{"location":"api/interfaces/core.requestbuilder/#implemented-by","text":"RESTRequestBuilder","title":"Implemented by"},{"location":"api/interfaces/core.requestbuilder/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.requestbuilder/#methods","text":"delete get patch post put query url","title":"Methods"},{"location":"api/interfaces/core.requestbuilder/#methods_1","text":"","title":"Methods"},{"location":"api/interfaces/core.requestbuilder/#delete","text":"\u25b8 delete < T >( options? ): Promise < RESTResponse < T >> Create DELETE request","title":"delete"},{"location":"api/interfaces/core.requestbuilder/#get","text":"\u25b8 get < T >( options? ): Promise < RESTResponse < T >> Create GET request","title":"get"},{"location":"api/interfaces/core.requestbuilder/#patch","text":"\u25b8 patch < T >( options? ): Promise < RESTResponse < T >> Create PATCH request","title":"patch"},{"location":"api/interfaces/core.requestbuilder/#post","text":"\u25b8 post < T >( options? ): Promise < RESTResponse < T >> Create POST request","title":"post"},{"location":"api/interfaces/core.requestbuilder/#put","text":"\u25b8 put < T >( options? ): Promise < RESTResponse < T >> Create PUT request","title":"put"},{"location":"api/interfaces/core.requestbuilder/#query","text":"\u25b8 query ( k , v ): RequestBuilder Add query data","title":"query"},{"location":"api/interfaces/core.requestbuilder/#url","text":"\u25b8 url (... paths ): RequestBuilder Add part(s) to the URI","title":"url"},{"location":"api/interfaces/core.requestoptions/","text":"Discordoo / Modules / core / RequestOptions Interface: RequestOptions # core .RequestOptions Request options Table of contents # Properties # body headers Properties # body # \u2022 Optional body : Record < string , any > Body Defined in # src/core/providers/rest/RequestOptions.ts:6 headers # \u2022 Optional headers : Record < string , any > Headers Defined in # src/core/providers/rest/RequestOptions.ts:4","title":"RequestOptions"},{"location":"api/interfaces/core.requestoptions/#interface-requestoptions","text":"core .RequestOptions Request options","title":"Interface: RequestOptions"},{"location":"api/interfaces/core.requestoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.requestoptions/#properties","text":"body headers","title":"Properties"},{"location":"api/interfaces/core.requestoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.requestoptions/#body","text":"\u2022 Optional body : Record < string , any > Body","title":"body"},{"location":"api/interfaces/core.requestoptions/#headers","text":"\u2022 Optional headers : Record < string , any > Headers","title":"headers"},{"location":"api/interfaces/core.restresponse/","text":"Discordoo / Modules / core / RESTResponse Interface: RESTResponse<T> # core .RESTResponse Data fetched from REST Type parameters # Name Type Description T Record < string , any > body type Table of contents # Properties # body headers statusCode Properties # body # \u2022 body : T Body Defined in # src/core/providers/rest/RESTResponse.ts:7 headers # \u2022 headers : Record < string , any > Headers Defined in # src/core/providers/rest/RESTResponse.ts:11 statusCode # \u2022 statusCode : number Status code Defined in # src/core/providers/rest/RESTResponse.ts:9","title":"RESTResponse"},{"location":"api/interfaces/core.restresponse/#interface-restresponset","text":"core .RESTResponse Data fetched from REST","title":"Interface: RESTResponse&lt;T>"},{"location":"api/interfaces/core.restresponse/#type-parameters","text":"Name Type Description T Record < string , any > body type","title":"Type parameters"},{"location":"api/interfaces/core.restresponse/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/core.restresponse/#properties","text":"body headers statusCode","title":"Properties"},{"location":"api/interfaces/core.restresponse/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/core.restresponse/#body","text":"\u2022 body : T Body","title":"body"},{"location":"api/interfaces/core.restresponse/#headers","text":"\u2022 headers : Record < string , any > Headers","title":"headers"},{"location":"api/interfaces/core.restresponse/#statuscode","text":"\u2022 statusCode : number Status code","title":"statusCode"},{"location":"api/interfaces/gateway.gatewayoptions/","text":"Discordoo / Modules / gateway / GatewayOptions Interface: GatewayOptions # gateway .GatewayOptions Table of contents # Properties # compress encoding eventPeaksSmoothingMultiplier intents largeThreshold maxEventsPerSecond maxShards presence properties shards smoothEventsPeaks spawnDelay token totalShards url useReconnectOnly version Properties # compress # \u2022 Optional compress : boolean Whether this connection supports compression of packets. default false Defined in # src/gateway/interfaces/GatewayOptions.ts:19 encoding # \u2022 Optional encoding : \"json\" | \"etf\" Encoding to use in WebSocket connection. Detected automatically (etf when found erlpack, else json), but can be overwritten using this option. default json Defined in # src/gateway/interfaces/GatewayOptions.ts:89 eventPeaksSmoothingMultiplier # \u2022 Optional eventPeaksSmoothingMultiplier : number Use custom multiplier for smoothing events peaks. When multiplier is 2 (default), library will double the number of events allowed per second every smooth: from 100 to 200, from 200 to 400, 800, 1600 etc. When multiplier is 1.5 for example, library will increase the number of events allowed per second by 1.5: from 100 to 150, from 150 to 225, from 225 to 337.5 (338), 507, 760.5 (761) etc. default 2 Defined in # src/gateway/interfaces/GatewayOptions.ts:120 intents # \u2022 intents : number The Gateway Intents you wish to receive see https://discord.com/developers/docs/topics/gateway#gateway-intents default 32509, all intents expect privileged Defined in # src/gateway/interfaces/GatewayOptions.ts:41 largeThreshold # \u2022 Optional largeThreshold : number Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list. default 50 Defined in # src/gateway/interfaces/GatewayOptions.ts:27 maxEventsPerSecond # \u2022 Optional maxEventsPerSecond : number Number of events which library can emit in 1 second. If limit is reached, library will add events to queue and will emit them later. default Infinity Defined in # src/gateway/interfaces/GatewayOptions.ts:128 maxShards # \u2022 Optional maxShards : number Maximum amount of shards that can be spawned by the WebSocketManager . Defined in # src/gateway/interfaces/GatewayOptions.ts:54 presence # \u2022 Optional presence : GatewayPresenceUpdateData Presence structure for initial presence information. see https://discord.com/developers/docs/topics/gateway#update-status Defined in # src/gateway/interfaces/GatewayOptions.ts:34 properties # \u2022 properties : GatewayIdentifyProperties Connection properties. see https://discord.com/developers/docs/topics/gateway#identify-identify-connection-properties Defined in # src/gateway/interfaces/GatewayOptions.ts:12 shards # \u2022 Optional shards : number | number [] | \"auto\" If number is provided - WS will create X shards from 0 to X-1 (3 = 0, 1, 2). If auto is provided, shards amount will be fetched from Discord. If array of numbers is provided, the library will interpret it as IDs of shards to create. default auto Defined in # src/gateway/interfaces/GatewayOptions.ts:50 smoothEventsPeaks # \u2022 Optional smoothEventsPeaks : boolean Smooth events peaks. When we usually receive 100 events per second, and suddenly we got 10000 events per second, library will emit these events gradual: from 100 events/s, to 200, then to 400, 800, 1600 etc. This may be helpful to smooth out the load on the server and on the rate limits. default false Defined in # src/gateway/interfaces/GatewayOptions.ts:109 spawnDelay # \u2022 Optional spawnDelay : number Waiting time between shards launches, in ms. default calculates from 5000 / session_start_limit.max_concurrency Defined in # src/gateway/interfaces/GatewayOptions.ts:81 token # \u2022 token : string Authentication token. Defined in # src/gateway/interfaces/GatewayOptions.ts:6 totalShards # \u2022 Optional totalShards : number Used by the library internals for correct interprocess sharding. Can be used for client clustering. Defined in # src/gateway/interfaces/GatewayOptions.ts:60 url # \u2022 Optional url : string Gateway URL. default wss://gateway.discord.gg/ Defined in # src/gateway/interfaces/GatewayOptions.ts:74 useReconnectOnly # \u2022 Optional useReconnectOnly : boolean Use reconnect instead of resume, because when client resumed Discord will send a ton of missed events in one second and this may lead to violations of the rate limits. see https://discord.com/developers/docs/topics/gateway#resuming default false Defined in # src/gateway/interfaces/GatewayOptions.ts:99 version # \u2022 Optional version : number Version of gateway to use. default 9 Defined in # src/gateway/interfaces/GatewayOptions.ts:67","title":"GatewayOptions"},{"location":"api/interfaces/gateway.gatewayoptions/#interface-gatewayoptions","text":"gateway .GatewayOptions","title":"Interface: GatewayOptions"},{"location":"api/interfaces/gateway.gatewayoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.gatewayoptions/#properties","text":"compress encoding eventPeaksSmoothingMultiplier intents largeThreshold maxEventsPerSecond maxShards presence properties shards smoothEventsPeaks spawnDelay token totalShards url useReconnectOnly version","title":"Properties"},{"location":"api/interfaces/gateway.gatewayoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.gatewayoptions/#compress","text":"\u2022 Optional compress : boolean Whether this connection supports compression of packets. default false","title":"compress"},{"location":"api/interfaces/gateway.gatewayoptions/#encoding","text":"\u2022 Optional encoding : \"json\" | \"etf\" Encoding to use in WebSocket connection. Detected automatically (etf when found erlpack, else json), but can be overwritten using this option. default json","title":"encoding"},{"location":"api/interfaces/gateway.gatewayoptions/#eventpeakssmoothingmultiplier","text":"\u2022 Optional eventPeaksSmoothingMultiplier : number Use custom multiplier for smoothing events peaks. When multiplier is 2 (default), library will double the number of events allowed per second every smooth: from 100 to 200, from 200 to 400, 800, 1600 etc. When multiplier is 1.5 for example, library will increase the number of events allowed per second by 1.5: from 100 to 150, from 150 to 225, from 225 to 337.5 (338), 507, 760.5 (761) etc. default 2","title":"eventPeaksSmoothingMultiplier"},{"location":"api/interfaces/gateway.gatewayoptions/#intents","text":"\u2022 intents : number The Gateway Intents you wish to receive see https://discord.com/developers/docs/topics/gateway#gateway-intents default 32509, all intents expect privileged","title":"intents"},{"location":"api/interfaces/gateway.gatewayoptions/#largethreshold","text":"\u2022 Optional largeThreshold : number Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list. default 50","title":"largeThreshold"},{"location":"api/interfaces/gateway.gatewayoptions/#maxeventspersecond","text":"\u2022 Optional maxEventsPerSecond : number Number of events which library can emit in 1 second. If limit is reached, library will add events to queue and will emit them later. default Infinity","title":"maxEventsPerSecond"},{"location":"api/interfaces/gateway.gatewayoptions/#maxshards","text":"\u2022 Optional maxShards : number Maximum amount of shards that can be spawned by the WebSocketManager .","title":"maxShards"},{"location":"api/interfaces/gateway.gatewayoptions/#presence","text":"\u2022 Optional presence : GatewayPresenceUpdateData Presence structure for initial presence information. see https://discord.com/developers/docs/topics/gateway#update-status","title":"presence"},{"location":"api/interfaces/gateway.gatewayoptions/#properties_2","text":"\u2022 properties : GatewayIdentifyProperties Connection properties. see https://discord.com/developers/docs/topics/gateway#identify-identify-connection-properties","title":"properties"},{"location":"api/interfaces/gateway.gatewayoptions/#shards","text":"\u2022 Optional shards : number | number [] | \"auto\" If number is provided - WS will create X shards from 0 to X-1 (3 = 0, 1, 2). If auto is provided, shards amount will be fetched from Discord. If array of numbers is provided, the library will interpret it as IDs of shards to create. default auto","title":"shards"},{"location":"api/interfaces/gateway.gatewayoptions/#smootheventspeaks","text":"\u2022 Optional smoothEventsPeaks : boolean Smooth events peaks. When we usually receive 100 events per second, and suddenly we got 10000 events per second, library will emit these events gradual: from 100 events/s, to 200, then to 400, 800, 1600 etc. This may be helpful to smooth out the load on the server and on the rate limits. default false","title":"smoothEventsPeaks"},{"location":"api/interfaces/gateway.gatewayoptions/#spawndelay","text":"\u2022 Optional spawnDelay : number Waiting time between shards launches, in ms. default calculates from 5000 / session_start_limit.max_concurrency","title":"spawnDelay"},{"location":"api/interfaces/gateway.gatewayoptions/#token","text":"\u2022 token : string Authentication token.","title":"token"},{"location":"api/interfaces/gateway.gatewayoptions/#totalshards","text":"\u2022 Optional totalShards : number Used by the library internals for correct interprocess sharding. Can be used for client clustering.","title":"totalShards"},{"location":"api/interfaces/gateway.gatewayoptions/#url","text":"\u2022 Optional url : string Gateway URL. default wss://gateway.discord.gg/","title":"url"},{"location":"api/interfaces/gateway.gatewayoptions/#usereconnectonly","text":"\u2022 Optional useReconnectOnly : boolean Use reconnect instead of resume, because when client resumed Discord will send a ton of missed events in one second and this may lead to violations of the rate limits. see https://discord.com/developers/docs/topics/gateway#resuming default false","title":"useReconnectOnly"},{"location":"api/interfaces/gateway.gatewayoptions/#version","text":"\u2022 Optional version : number Version of gateway to use. default 9","title":"version"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/","text":"Discordoo / Modules / gateway / WebSocketClientDestroyOptions Interface: WebSocketClientDestroyOptions # gateway .WebSocketClientDestroyOptions Table of contents # Properties # code reconnect Properties # code # \u2022 Optional code : number Defined in # src/gateway/interfaces/WebSocketClientDestroyOptions.ts:2 reconnect # \u2022 Optional reconnect : boolean Defined in # src/gateway/interfaces/WebSocketClientDestroyOptions.ts:3","title":"WebSocketClientDestroyOptions"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#interface-websocketclientdestroyoptions","text":"gateway .WebSocketClientDestroyOptions","title":"Interface: WebSocketClientDestroyOptions"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#properties","text":"code reconnect","title":"Properties"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#code","text":"\u2022 Optional code : number","title":"code"},{"location":"api/interfaces/gateway.websocketclientdestroyoptions/#reconnect","text":"\u2022 Optional reconnect : boolean","title":"reconnect"},{"location":"api/interfaces/gateway.websocketclientevents/","text":"Discordoo / Modules / gateway / WebSocketClientEvents Interface: WebSocketClientEvents # gateway .WebSocketClientEvents Table of contents # Properties # RECONNECT_ME WS_CLOSED WS_CLOSE_ERROR WS_ERROR WS_OPEN WS_OPEN_ERROR WS_SEND_ERROR destroyed invalidSession ready resumed Properties # RECONNECT_ME # \u2022 RECONNECT_ME : ( destroyed? : boolean ) => unknown Type declaration # \u25b8 ( destroyed? ): unknown Parameters # Name Type destroyed? boolean Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:13 WS_CLOSED # \u2022 WS_CLOSED : ( code : CloseEvent ) => unknown Type declaration # \u25b8 ( code ): unknown Parameters # Name Type code CloseEvent Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:11 WS_CLOSE_ERROR # \u2022 WS_CLOSE_ERROR : ( error : Error ) => unknown Type declaration # \u25b8 ( error ): unknown Parameters # Name Type error Error Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:7 WS_ERROR # \u2022 WS_ERROR : ( error : ErrorEvent ) => unknown Type declaration # \u25b8 ( error ): unknown Parameters # Name Type error ErrorEvent Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:9 WS_OPEN # \u2022 WS_OPEN : ( event : OpenEvent ) => unknown Type declaration # \u25b8 ( event ): unknown Parameters # Name Type event OpenEvent Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:10 WS_OPEN_ERROR # \u2022 WS_OPEN_ERROR : ( error : Error ) => unknown Type declaration # \u25b8 ( error ): unknown Parameters # Name Type error Error Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:6 WS_SEND_ERROR # \u2022 WS_SEND_ERROR : ( error : Error , data : WebSocketSendPayload ) => unknown Type declaration # \u25b8 ( error , data ): unknown Parameters # Name Type error Error data WebSocketSendPayload Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:5 destroyed # \u2022 destroyed : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:17 invalidSession # \u2022 invalidSession : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:18 ready # \u2022 ready : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:15 resumed # \u2022 resumed : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/gateway/interfaces/WebSocketClientEventsI.ts:16","title":"WebSocketClientEvents"},{"location":"api/interfaces/gateway.websocketclientevents/#interface-websocketclientevents","text":"gateway .WebSocketClientEvents","title":"Interface: WebSocketClientEvents"},{"location":"api/interfaces/gateway.websocketclientevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.websocketclientevents/#properties","text":"RECONNECT_ME WS_CLOSED WS_CLOSE_ERROR WS_ERROR WS_OPEN WS_OPEN_ERROR WS_SEND_ERROR destroyed invalidSession ready resumed","title":"Properties"},{"location":"api/interfaces/gateway.websocketclientevents/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.websocketclientevents/#reconnect_me","text":"\u2022 RECONNECT_ME : ( destroyed? : boolean ) => unknown","title":"RECONNECT_ME"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_closed","text":"\u2022 WS_CLOSED : ( code : CloseEvent ) => unknown","title":"WS_CLOSED"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_close_error","text":"\u2022 WS_CLOSE_ERROR : ( error : Error ) => unknown","title":"WS_CLOSE_ERROR"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_error","text":"\u2022 WS_ERROR : ( error : ErrorEvent ) => unknown","title":"WS_ERROR"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_open","text":"\u2022 WS_OPEN : ( event : OpenEvent ) => unknown","title":"WS_OPEN"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_open_error","text":"\u2022 WS_OPEN_ERROR : ( error : Error ) => unknown","title":"WS_OPEN_ERROR"},{"location":"api/interfaces/gateway.websocketclientevents/#ws_send_error","text":"\u2022 WS_SEND_ERROR : ( error : Error , data : WebSocketSendPayload ) => unknown","title":"WS_SEND_ERROR"},{"location":"api/interfaces/gateway.websocketclientevents/#destroyed","text":"\u2022 destroyed : () => unknown","title":"destroyed"},{"location":"api/interfaces/gateway.websocketclientevents/#invalidsession","text":"\u2022 invalidSession : () => unknown","title":"invalidSession"},{"location":"api/interfaces/gateway.websocketclientevents/#ready","text":"\u2022 ready : () => unknown","title":"ready"},{"location":"api/interfaces/gateway.websocketclientevents/#resumed","text":"\u2022 resumed : () => unknown","title":"resumed"},{"location":"api/interfaces/gateway.websocketmanagerevents/","text":"Discordoo / Modules / gateway / WebSocketManagerEvents Interface: WebSocketManagerEvents # gateway .WebSocketManagerEvents Table of contents # Properties # connected disconnected message shardSpawn Properties # connected # \u2022 connected : ( id : number ) => void Type declaration # \u25b8 ( id ): void Parameters # Name Type id number Returns # void Defined in # src/gateway/interfaces/WebSocketManagerEvents.ts:5 disconnected # \u2022 disconnected : ( id : number ) => void Type declaration # \u25b8 ( id ): void Parameters # Name Type id number Returns # void Defined in # src/gateway/interfaces/WebSocketManagerEvents.ts:6 message # \u2022 message : ( msg : GatewayReceivePayload , id : number ) => void Type declaration # \u25b8 ( msg , id ): void Parameters # Name Type msg GatewayReceivePayload id number Returns # void Defined in # src/gateway/interfaces/WebSocketManagerEvents.ts:4 shardSpawn # \u2022 shardSpawn : ( id : number ) => void Type declaration # \u25b8 ( id ): void Parameters # Name Type id number Returns # void Defined in # src/gateway/interfaces/WebSocketManagerEvents.ts:7","title":"WebSocketManagerEvents"},{"location":"api/interfaces/gateway.websocketmanagerevents/#interface-websocketmanagerevents","text":"gateway .WebSocketManagerEvents","title":"Interface: WebSocketManagerEvents"},{"location":"api/interfaces/gateway.websocketmanagerevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/gateway.websocketmanagerevents/#properties","text":"connected disconnected message shardSpawn","title":"Properties"},{"location":"api/interfaces/gateway.websocketmanagerevents/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/gateway.websocketmanagerevents/#connected","text":"\u2022 connected : ( id : number ) => void","title":"connected"},{"location":"api/interfaces/gateway.websocketmanagerevents/#disconnected","text":"\u2022 disconnected : ( id : number ) => void","title":"disconnected"},{"location":"api/interfaces/gateway.websocketmanagerevents/#message","text":"\u2022 message : ( msg : GatewayReceivePayload , id : number ) => void","title":"message"},{"location":"api/interfaces/gateway.websocketmanagerevents/#shardspawn","text":"\u2022 shardSpawn : ( id : number ) => void","title":"shardSpawn"},{"location":"api/interfaces/rest.restoptions/","text":"Discordoo / Modules / rest / RESTOptions Interface: RESTOptions # rest .RESTOptions Options for rest Table of contents # Properties # maxRetries useragent v Properties # maxRetries # \u2022 maxRetries : number Times, REST will try to perform the request with 5xx error code Defined in # src/rest/RESTOptions.ts:11 useragent # \u2022 useragent : string UserAgent to use Shouldn't be used, since Discord requires it to contain library name and it's version Defined in # src/rest/RESTOptions.ts:9 v # \u2022 v : number API version to use Defined in # src/rest/RESTOptions.ts:4","title":"RESTOptions"},{"location":"api/interfaces/rest.restoptions/#interface-restoptions","text":"rest .RESTOptions Options for rest","title":"Interface: RESTOptions"},{"location":"api/interfaces/rest.restoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/rest.restoptions/#properties","text":"maxRetries useragent v","title":"Properties"},{"location":"api/interfaces/rest.restoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/rest.restoptions/#maxretries","text":"\u2022 maxRetries : number Times, REST will try to perform the request with 5xx error code","title":"maxRetries"},{"location":"api/interfaces/rest.restoptions/#useragent","text":"\u2022 useragent : string UserAgent to use Shouldn't be used, since Discord requires it to contain library name and it's version","title":"useragent"},{"location":"api/interfaces/rest.restoptions/#v","text":"\u2022 v : number API version to use","title":"v"},{"location":"api/interfaces/sharding.clustersshardingoptions/","text":"Discordoo / Modules / sharding / ClustersShardingOptions Interface: ClustersShardingOptions # sharding .ClustersShardingOptions Table of contents # Properties # env shardsPerCluster Properties # env # \u2022 Optional env : Record < string , string > Defined in # src/sharding/interfaces/manager/options/ClustersShardingOptions.ts:3 shardsPerCluster # \u2022 Optional shardsPerCluster : number Defined in # src/sharding/interfaces/manager/options/ClustersShardingOptions.ts:2","title":"ClustersShardingOptions"},{"location":"api/interfaces/sharding.clustersshardingoptions/#interface-clustersshardingoptions","text":"sharding .ClustersShardingOptions","title":"Interface: ClustersShardingOptions"},{"location":"api/interfaces/sharding.clustersshardingoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.clustersshardingoptions/#properties","text":"env shardsPerCluster","title":"Properties"},{"location":"api/interfaces/sharding.clustersshardingoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.clustersshardingoptions/#env","text":"\u2022 Optional env : Record < string , string >","title":"env"},{"location":"api/interfaces/sharding.clustersshardingoptions/#shardspercluster","text":"\u2022 Optional shardsPerCluster : number","title":"shardsPerCluster"},{"location":"api/interfaces/sharding.ipcpacket/","text":"Discordoo / Modules / sharding / IpcPacket Interface: IpcPacket # sharding .IpcPacket Table of contents # Properties # d op t Properties # d # \u2022 d : any Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:5 op # \u2022 op : IpcOPCodes Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:4 t # \u2022 Optional t : IpcEvents Defined in # src/sharding/interfaces/ipc/IpcPacket.ts:6","title":"IpcPacket"},{"location":"api/interfaces/sharding.ipcpacket/#interface-ipcpacket","text":"sharding .IpcPacket","title":"Interface: IpcPacket"},{"location":"api/interfaces/sharding.ipcpacket/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipcpacket/#properties","text":"d op t","title":"Properties"},{"location":"api/interfaces/sharding.ipcpacket/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipcpacket/#d","text":"\u2022 d : any","title":"d"},{"location":"api/interfaces/sharding.ipcpacket/#op","text":"\u2022 op : IpcOPCodes","title":"op"},{"location":"api/interfaces/sharding.ipcpacket/#t","text":"\u2022 Optional t : IpcEvents","title":"t"},{"location":"api/interfaces/sharding.ipctlsoptions/","text":"Discordoo / Modules / sharding / IpcTlsOptions Interface: IpcTlsOptions # sharding .IpcTlsOptions Table of contents # Properties # dhparam private public rejectUnauthorized requestCert trustedConnections Properties # dhparam # \u2022 Optional dhparam : string Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:4 private # \u2022 Optional private : string Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:3 public # \u2022 Optional public : string Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:2 rejectUnauthorized # \u2022 Optional rejectUnauthorized : boolean Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:6 requestCert # \u2022 Optional requestCert : boolean Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:5 trustedConnections # \u2022 Optional trustedConnections : string [] Defined in # src/sharding/interfaces/ipc/IpcTlsOptions.ts:7","title":"IpcTlsOptions"},{"location":"api/interfaces/sharding.ipctlsoptions/#interface-ipctlsoptions","text":"sharding .IpcTlsOptions","title":"Interface: IpcTlsOptions"},{"location":"api/interfaces/sharding.ipctlsoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.ipctlsoptions/#properties","text":"dhparam private public rejectUnauthorized requestCert trustedConnections","title":"Properties"},{"location":"api/interfaces/sharding.ipctlsoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.ipctlsoptions/#dhparam","text":"\u2022 Optional dhparam : string","title":"dhparam"},{"location":"api/interfaces/sharding.ipctlsoptions/#private","text":"\u2022 Optional private : string","title":"private"},{"location":"api/interfaces/sharding.ipctlsoptions/#public","text":"\u2022 Optional public : string","title":"public"},{"location":"api/interfaces/sharding.ipctlsoptions/#rejectunauthorized","text":"\u2022 Optional rejectUnauthorized : boolean","title":"rejectUnauthorized"},{"location":"api/interfaces/sharding.ipctlsoptions/#requestcert","text":"\u2022 Optional requestCert : boolean","title":"requestCert"},{"location":"api/interfaces/sharding.ipctlsoptions/#trustedconnections","text":"\u2022 Optional trustedConnections : string []","title":"trustedConnections"},{"location":"api/interfaces/sharding.machinesshardingoptions/","text":"Discordoo / Modules / sharding / MachinesShardingOptions Interface: MachinesShardingOptions # sharding .MachinesShardingOptions Table of contents # Properties # me points tls Properties # me # \u2022 me : \"parent\" | \"child\" Defined in # src/sharding/interfaces/manager/options/MachinesShardingOptions.ts:5 points # \u2022 Optional points : ShardingMachineOptions [] Defined in # src/sharding/interfaces/manager/options/MachinesShardingOptions.ts:6 tls # \u2022 Optional tls : IpcTlsOptions Defined in # src/sharding/interfaces/manager/options/MachinesShardingOptions.ts:7","title":"MachinesShardingOptions"},{"location":"api/interfaces/sharding.machinesshardingoptions/#interface-machinesshardingoptions","text":"sharding .MachinesShardingOptions","title":"Interface: MachinesShardingOptions"},{"location":"api/interfaces/sharding.machinesshardingoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.machinesshardingoptions/#properties","text":"me points tls","title":"Properties"},{"location":"api/interfaces/sharding.machinesshardingoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.machinesshardingoptions/#me","text":"\u2022 me : \"parent\" | \"child\"","title":"me"},{"location":"api/interfaces/sharding.machinesshardingoptions/#points","text":"\u2022 Optional points : ShardingMachineOptions []","title":"points"},{"location":"api/interfaces/sharding.machinesshardingoptions/#tls","text":"\u2022 Optional tls : IpcTlsOptions","title":"tls"},{"location":"api/interfaces/sharding.processesshardingoptions/","text":"Discordoo / Modules / sharding / ProcessesShardingOptions Interface: ProcessesShardingOptions # sharding .ProcessesShardingOptions Table of contents # Properties # env forkOptions shardsPerProcess Properties # env # \u2022 Optional env : Record < string , string > Defined in # src/sharding/interfaces/manager/options/ProcessesShardingOptions.ts:5 forkOptions # \u2022 Optional forkOptions : Omit < ForkOptions , \"env\" > Defined in # src/sharding/interfaces/manager/options/ProcessesShardingOptions.ts:6 shardsPerProcess # \u2022 Optional shardsPerProcess : number Defined in # src/sharding/interfaces/manager/options/ProcessesShardingOptions.ts:4","title":"ProcessesShardingOptions"},{"location":"api/interfaces/sharding.processesshardingoptions/#interface-processesshardingoptions","text":"sharding .ProcessesShardingOptions","title":"Interface: ProcessesShardingOptions"},{"location":"api/interfaces/sharding.processesshardingoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.processesshardingoptions/#properties","text":"env forkOptions shardsPerProcess","title":"Properties"},{"location":"api/interfaces/sharding.processesshardingoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.processesshardingoptions/#env","text":"\u2022 Optional env : Record < string , string >","title":"env"},{"location":"api/interfaces/sharding.processesshardingoptions/#forkoptions","text":"\u2022 Optional forkOptions : Omit < ForkOptions , \"env\" >","title":"forkOptions"},{"location":"api/interfaces/sharding.processesshardingoptions/#shardsperprocess","text":"\u2022 Optional shardsPerProcess : number","title":"shardsPerProcess"},{"location":"api/interfaces/sharding.shardingmachineoptions/","text":"Discordoo / Modules / sharding / ShardingMachineOptions Interface: ShardingMachineOptions # sharding .ShardingMachineOptions Table of contents # Properties # childManagerOptions host port shards tls udp Properties # childManagerOptions # \u2022 childManagerOptions : ChildShardingManagerOptions Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:11 host # \u2022 host : string Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:7 port # \u2022 Optional port : number Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:6 shards # \u2022 shards : ShardListResolvable Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:9 tls # \u2022 Optional tls : IpcClientTlsOptions Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:10 udp # \u2022 Optional udp : \"udp4\" | \"udp6\" Defined in # src/sharding/interfaces/machine/ShardingMachineOptions.ts:8","title":"ShardingMachineOptions"},{"location":"api/interfaces/sharding.shardingmachineoptions/#interface-shardingmachineoptions","text":"sharding .ShardingMachineOptions","title":"Interface: ShardingMachineOptions"},{"location":"api/interfaces/sharding.shardingmachineoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingmachineoptions/#properties","text":"childManagerOptions host port shards tls udp","title":"Properties"},{"location":"api/interfaces/sharding.shardingmachineoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingmachineoptions/#childmanageroptions","text":"\u2022 childManagerOptions : ChildShardingManagerOptions","title":"childManagerOptions"},{"location":"api/interfaces/sharding.shardingmachineoptions/#host","text":"\u2022 host : string","title":"host"},{"location":"api/interfaces/sharding.shardingmachineoptions/#port","text":"\u2022 Optional port : number","title":"port"},{"location":"api/interfaces/sharding.shardingmachineoptions/#shards","text":"\u2022 shards : ShardListResolvable","title":"shards"},{"location":"api/interfaces/sharding.shardingmachineoptions/#tls","text":"\u2022 Optional tls : IpcClientTlsOptions","title":"tls"},{"location":"api/interfaces/sharding.shardingmachineoptions/#udp","text":"\u2022 Optional udp : \"udp4\" | \"udp6\"","title":"udp"},{"location":"api/interfaces/sharding.shardingmanagerevents/","text":"Discordoo / Modules / sharding / ShardingManagerEvents Interface: ShardingManagerEvents # sharding .ShardingManagerEvents Table of contents # Properties # message Properties # message # \u2022 message : () => unknown Type declaration # \u25b8 (): unknown Returns # unknown Defined in # src/sharding/interfaces/manager/ShardingManagerEvents.ts:2","title":"ShardingManagerEvents"},{"location":"api/interfaces/sharding.shardingmanagerevents/#interface-shardingmanagerevents","text":"sharding .ShardingManagerEvents","title":"Interface: ShardingManagerEvents"},{"location":"api/interfaces/sharding.shardingmanagerevents/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingmanagerevents/#properties","text":"message","title":"Properties"},{"location":"api/interfaces/sharding.shardingmanagerevents/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingmanagerevents/#message","text":"\u2022 message : () => unknown","title":"message"},{"location":"api/interfaces/sharding.shardingmanageroptions/","text":"Discordoo / Modules / sharding / ShardingManagerOptions Interface: ShardingManagerOptions # sharding .ShardingManagerOptions Table of contents # Properties # clusters file machines mode processes shards type workers Properties # clusters # \u2022 Optional clusters : ClustersShardingOptions Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:17 file # \u2022 file : string Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:12 machines # \u2022 Optional machines : MachinesShardingOptions Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:14 mode # \u2022 mode : ShardingModes Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:9 processes # \u2022 Optional processes : ProcessesShardingOptions Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:15 shards # \u2022 shards : ShardListResolvable Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:11 type # \u2022 Optional type : ShardingManagerTypes Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:10 workers # \u2022 Optional workers : WorkersShardingOptions Defined in # src/sharding/interfaces/manager/options/ShardingManagerOptions.ts:16","title":"ShardingManagerOptions"},{"location":"api/interfaces/sharding.shardingmanageroptions/#interface-shardingmanageroptions","text":"sharding .ShardingManagerOptions","title":"Interface: ShardingManagerOptions"},{"location":"api/interfaces/sharding.shardingmanageroptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.shardingmanageroptions/#properties","text":"clusters file machines mode processes shards type workers","title":"Properties"},{"location":"api/interfaces/sharding.shardingmanageroptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.shardingmanageroptions/#clusters","text":"\u2022 Optional clusters : ClustersShardingOptions","title":"clusters"},{"location":"api/interfaces/sharding.shardingmanageroptions/#file","text":"\u2022 file : string","title":"file"},{"location":"api/interfaces/sharding.shardingmanageroptions/#machines","text":"\u2022 Optional machines : MachinesShardingOptions","title":"machines"},{"location":"api/interfaces/sharding.shardingmanageroptions/#mode","text":"\u2022 mode : ShardingModes","title":"mode"},{"location":"api/interfaces/sharding.shardingmanageroptions/#processes","text":"\u2022 Optional processes : ProcessesShardingOptions","title":"processes"},{"location":"api/interfaces/sharding.shardingmanageroptions/#shards","text":"\u2022 shards : ShardListResolvable","title":"shards"},{"location":"api/interfaces/sharding.shardingmanageroptions/#type","text":"\u2022 Optional type : ShardingManagerTypes","title":"type"},{"location":"api/interfaces/sharding.shardingmanageroptions/#workers","text":"\u2022 Optional workers : WorkersShardingOptions","title":"workers"},{"location":"api/interfaces/sharding.workersshardingoptions/","text":"Discordoo / Modules / sharding / WorkersShardingOptions Interface: WorkersShardingOptions # sharding .WorkersShardingOptions Table of contents # Properties # env shardsPerWorker spawnOptions Properties # env # \u2022 Optional env : Record < string , string > Defined in # src/sharding/interfaces/manager/options/WorkersShardingOptions.ts:5 shardsPerWorker # \u2022 Optional shardsPerWorker : number Defined in # src/sharding/interfaces/manager/options/WorkersShardingOptions.ts:4 spawnOptions # \u2022 Optional spawnOptions : Omit < WorkerOptions , \"env\" > Defined in # src/sharding/interfaces/manager/options/WorkersShardingOptions.ts:6","title":"WorkersShardingOptions"},{"location":"api/interfaces/sharding.workersshardingoptions/#interface-workersshardingoptions","text":"sharding .WorkersShardingOptions","title":"Interface: WorkersShardingOptions"},{"location":"api/interfaces/sharding.workersshardingoptions/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/interfaces/sharding.workersshardingoptions/#properties","text":"env shardsPerWorker spawnOptions","title":"Properties"},{"location":"api/interfaces/sharding.workersshardingoptions/#properties_1","text":"","title":"Properties"},{"location":"api/interfaces/sharding.workersshardingoptions/#env","text":"\u2022 Optional env : Record < string , string >","title":"env"},{"location":"api/interfaces/sharding.workersshardingoptions/#shardsperworker","text":"\u2022 Optional shardsPerWorker : number","title":"shardsPerWorker"},{"location":"api/interfaces/sharding.workersshardingoptions/#spawnoptions","text":"\u2022 Optional spawnOptions : Omit < WorkerOptions , \"env\" >","title":"spawnOptions"},{"location":"api/modules/collection/","text":"Discordoo / Modules / collection Module: collection # Table of contents # Classes # Collection Interfaces # CollectionEqualOptions CollectionFilterOptions CollectionRandomOptions","title":"Collection"},{"location":"api/modules/collection/#module-collection","text":"","title":"Module: collection"},{"location":"api/modules/collection/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/collection/#classes","text":"Collection","title":"Classes"},{"location":"api/modules/collection/#interfaces","text":"CollectionEqualOptions CollectionFilterOptions CollectionRandomOptions","title":"Interfaces"},{"location":"api/modules/core.constants/","text":"Discordoo / Modules / core / Constants Namespace: Constants # core .Constants Table of contents # Enumerations # DiscordooProviders IpcEvents IpcOPCodes PartialShardingModes ShardingManagerTypes ShardingModes WebSocketClientEvents WebSocketClientStates WebSocketEvents WebSocketManagerStates WebSocketOPCodes WebSocketShardStatus WebSocketStates Variables # API_ENDPOINT DEFAULT_REST_OPTIONS DEFAULT_WS_OPTIONS RAW_IPC_EVENT WS_HANDSHAKE_TIMEOUT Variables # API_ENDPOINT # \u2022 Const API_ENDPOINT : \"https://discord.com/api\" Defined in # src/core/Constants.ts:163 DEFAULT_REST_OPTIONS # \u2022 Const DEFAULT_REST_OPTIONS : RESTOptions Defined in # src/core/Constants.ts:185 DEFAULT_WS_OPTIONS # \u2022 Const DEFAULT_WS_OPTIONS : Omit < GatewayOptions , \"token\" > Defined in # src/core/Constants.ts:165 RAW_IPC_EVENT # \u2022 Const RAW_IPC_EVENT : \"__DDOO__.MESSAGE\" Defined in # src/core/Constants.ts:6 WS_HANDSHAKE_TIMEOUT # \u2022 Const WS_HANDSHAKE_TIMEOUT : 30000 Defined in # src/core/Constants.ts:161","title":"Constants"},{"location":"api/modules/core.constants/#namespace-constants","text":"core .Constants","title":"Namespace: Constants"},{"location":"api/modules/core.constants/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/core.constants/#enumerations","text":"DiscordooProviders IpcEvents IpcOPCodes PartialShardingModes ShardingManagerTypes ShardingModes WebSocketClientEvents WebSocketClientStates WebSocketEvents WebSocketManagerStates WebSocketOPCodes WebSocketShardStatus WebSocketStates","title":"Enumerations"},{"location":"api/modules/core.constants/#variables","text":"API_ENDPOINT DEFAULT_REST_OPTIONS DEFAULT_WS_OPTIONS RAW_IPC_EVENT WS_HANDSHAKE_TIMEOUT","title":"Variables"},{"location":"api/modules/core.constants/#variables_1","text":"","title":"Variables"},{"location":"api/modules/core.constants/#api_endpoint","text":"\u2022 Const API_ENDPOINT : \"https://discord.com/api\"","title":"API_ENDPOINT"},{"location":"api/modules/core.constants/#default_rest_options","text":"\u2022 Const DEFAULT_REST_OPTIONS : RESTOptions","title":"DEFAULT_REST_OPTIONS"},{"location":"api/modules/core.constants/#default_ws_options","text":"\u2022 Const DEFAULT_WS_OPTIONS : Omit < GatewayOptions , \"token\" >","title":"DEFAULT_WS_OPTIONS"},{"location":"api/modules/core.constants/#raw_ipc_event","text":"\u2022 Const RAW_IPC_EVENT : \"__DDOO__.MESSAGE\"","title":"RAW_IPC_EVENT"},{"location":"api/modules/core.constants/#ws_handshake_timeout","text":"\u2022 Const WS_HANDSHAKE_TIMEOUT : 30000","title":"WS_HANDSHAKE_TIMEOUT"},{"location":"api/modules/core/","text":"Discordoo / Modules / core Module: core # Table of contents # Namespaces # Constants Classes # Client Interfaces # CacheProvider ClientEventsHandlers DefaultClientStack GatewayProviderAPI GatewayProviderEvents RESTResponse RequestBuilder RequestOptions Type aliases # GatewayProvider RESTProvider Type aliases # GatewayProvider # \u01ac GatewayProvider < T >: () => T Type parameters # Name Type T extends GatewayProviderAPI GatewayProviderAPI Type declaration # \u25b8 (): T Returns # T Defined in # src/core/providers/gateway/GatewayProvider.ts:3 RESTProvider # \u01ac RESTProvider < T >: () => T Type parameters # Name Type T extends RequestBuilder RequestBuilder Type declaration # \u25b8 (): T Represents a RESTProvider. Bound to Client context Returns # T Defined in # src/core/providers/rest/RESTProvider.ts:4","title":"Core"},{"location":"api/modules/core/#module-core","text":"","title":"Module: core"},{"location":"api/modules/core/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/core/#namespaces","text":"Constants","title":"Namespaces"},{"location":"api/modules/core/#classes","text":"Client","title":"Classes"},{"location":"api/modules/core/#interfaces","text":"CacheProvider ClientEventsHandlers DefaultClientStack GatewayProviderAPI GatewayProviderEvents RESTResponse RequestBuilder RequestOptions","title":"Interfaces"},{"location":"api/modules/core/#type-aliases","text":"GatewayProvider RESTProvider","title":"Type aliases"},{"location":"api/modules/core/#type-aliases_1","text":"","title":"Type aliases"},{"location":"api/modules/core/#gatewayprovider","text":"\u01ac GatewayProvider < T >: () => T","title":"GatewayProvider"},{"location":"api/modules/core/#restprovider","text":"\u01ac RESTProvider < T >: () => T","title":"RESTProvider"},{"location":"api/modules/gateway/","text":"Discordoo / Modules / gateway Module: gateway # Table of contents # Classes # WebSocketClient WebSocketManager Interfaces # GatewayOptions WebSocketClientDestroyOptions WebSocketClientEvents WebSocketManagerEvents","title":"Gateway"},{"location":"api/modules/gateway/#module-gateway","text":"","title":"Module: gateway"},{"location":"api/modules/gateway/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/gateway/#classes","text":"WebSocketClient WebSocketManager","title":"Classes"},{"location":"api/modules/gateway/#interfaces","text":"GatewayOptions WebSocketClientDestroyOptions WebSocketClientEvents WebSocketManagerEvents","title":"Interfaces"},{"location":"api/modules/rest/","text":"Discordoo / Modules / rest Module: rest # Table of contents # Classes # RESTClient RESTProviderBuilder RESTRequestBuilder Interfaces # RESTOptions","title":"Rest"},{"location":"api/modules/rest/#module-rest","text":"","title":"Module: rest"},{"location":"api/modules/rest/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/rest/#classes","text":"RESTClient RESTProviderBuilder RESTRequestBuilder","title":"Classes"},{"location":"api/modules/rest/#interfaces","text":"RESTOptions","title":"Interfaces"},{"location":"api/modules/sharding/","text":"Discordoo / Modules / sharding Module: sharding # Table of contents # Classes # IpcClient IpcServer ShardingClient ShardingManager Interfaces # ClustersShardingOptions IpcPacket IpcTlsOptions MachinesShardingOptions ProcessesShardingOptions ShardingMachineOptions ShardingManagerEvents ShardingManagerOptions WorkersShardingOptions","title":"Sharding"},{"location":"api/modules/sharding/#module-sharding","text":"","title":"Module: sharding"},{"location":"api/modules/sharding/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/sharding/#classes","text":"IpcClient IpcServer ShardingClient ShardingManager","title":"Classes"},{"location":"api/modules/sharding/#interfaces","text":"ClustersShardingOptions IpcPacket IpcTlsOptions MachinesShardingOptions ProcessesShardingOptions ShardingMachineOptions ShardingManagerEvents ShardingManagerOptions WorkersShardingOptions","title":"Interfaces"},{"location":"api/modules/utils/","text":"Discordoo / Modules / utils Module: utils # Table of contents # Classes # DiscordooError DiscordooSnowflake WebSocketUtils Type aliases # NonOptional Optional Functions # getGateway idToDate range wait Type aliases # NonOptional # \u01ac NonOptional < T , K >: Omit < T , K > & Required < Pick < T , K >> Makes specified interface field non optional Type parameters # Name Type T T K extends keyof T Defined in # src/utils/NonOptional.ts:2 Optional # \u01ac Optional < T , K >: Omit < T , K > & { [P in K]?: T[P]} Makes specified interface field optional Type parameters # Name Type T T K extends keyof T Defined in # src/utils/Optional.ts:2 Functions # getGateway # \u25b8 getGateway ( token ): Promise < APIGatewayBotInfo > Parameters # Name Type token string Returns # Promise < APIGatewayBotInfo > Defined in # src/utils/getGateway.ts:5 idToDate # \u25b8 idToDate ( id ): Date Converts snowflake to date Parameters # Name Type id string Returns # Date Defined in # src/utils/idToDate.ts:2 range # \u25b8 range ( x , y? ): number [] Creates a range of numbers to x Parameters # Name Type x number y? number Returns # number [] Defined in # src/utils/range.ts:2 wait # \u25b8 Const wait ( ms ): Promise < void > Parameters # Name Type ms number Returns # Promise < void > Defined in # src/utils/wait.ts:3","title":"Utils"},{"location":"api/modules/utils/#module-utils","text":"","title":"Module: utils"},{"location":"api/modules/utils/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/utils/#classes","text":"DiscordooError DiscordooSnowflake WebSocketUtils","title":"Classes"},{"location":"api/modules/utils/#type-aliases","text":"NonOptional Optional","title":"Type aliases"},{"location":"api/modules/utils/#functions","text":"getGateway idToDate range wait","title":"Functions"},{"location":"api/modules/utils/#type-aliases_1","text":"","title":"Type aliases"},{"location":"api/modules/utils/#nonoptional","text":"\u01ac NonOptional < T , K >: Omit < T , K > & Required < Pick < T , K >> Makes specified interface field non optional","title":"NonOptional"},{"location":"api/modules/utils/#optional","text":"\u01ac Optional < T , K >: Omit < T , K > & { [P in K]?: T[P]} Makes specified interface field optional","title":"Optional"},{"location":"api/modules/utils/#functions_1","text":"","title":"Functions"},{"location":"api/modules/utils/#getgateway","text":"\u25b8 getGateway ( token ): Promise < APIGatewayBotInfo >","title":"getGateway"},{"location":"api/modules/utils/#idtodate","text":"\u25b8 idToDate ( id ): Date Converts snowflake to date","title":"idToDate"},{"location":"api/modules/utils/#range","text":"\u25b8 range ( x , y? ): number [] Creates a range of numbers to x","title":"range"},{"location":"api/modules/utils/#wait","text":"\u25b8 Const wait ( ms ): Promise < void >","title":"wait"},{"location":"api/modules/wrapper/","text":"Discordoo / Modules / wrapper Module: wrapper # Table of contents # Classes # ClientBuilder Functions # createApp Functions # createApp # \u25b8 createApp < Stack >( token , options? ): ClientBuilder < Stack > Type parameters # Name Type Stack extends DefaultClientStack DefaultClientStack Parameters # Name Type token string options? ClientOptions Returns # ClientBuilder < Stack > Defined in # src/wrapper/createApp.ts:5","title":"Wrapper"},{"location":"api/modules/wrapper/#module-wrapper","text":"","title":"Module: wrapper"},{"location":"api/modules/wrapper/#table-of-contents","text":"","title":"Table of contents"},{"location":"api/modules/wrapper/#classes","text":"ClientBuilder","title":"Classes"},{"location":"api/modules/wrapper/#functions","text":"createApp","title":"Functions"},{"location":"api/modules/wrapper/#functions_1","text":"","title":"Functions"},{"location":"api/modules/wrapper/#createapp","text":"\u25b8 createApp < Stack >( token , options? ): ClientBuilder < Stack >","title":"createApp"},{"location":"base-guide/","text":"The Discordoo guide # Hi there! This is the Discordoo Guide(or the Guide in short). Here, you will learn all the basics and internals of Discordoo. On the left you can see steps. Each step introduces a new concept about the library. If you do 2-3 steps a day, I bet that you will know Discordoo in less than a month. Important notice # This guide is intended to be read by people, who know TypeScript and Node.js on beginner's level. We will not help you if you don't know how to use Node.js or write basic TypeScript code.","title":"The Discordoo guide"},{"location":"base-guide/#the-discordoo-guide","text":"Hi there! This is the Discordoo Guide(or the Guide in short). Here, you will learn all the basics and internals of Discordoo. On the left you can see steps. Each step introduces a new concept about the library. If you do 2-3 steps a day, I bet that you will know Discordoo in less than a month.","title":"The Discordoo guide"},{"location":"base-guide/#important-notice","text":"This guide is intended to be read by people, who know TypeScript and Node.js on beginner's level. We will not help you if you don't know how to use Node.js or write basic TypeScript code.","title":"Important notice"},{"location":"base-guide/installing/","text":"Step 1 - Installing Discordoo # In this step, you will know how to install Discordoo. Discordoo is hosted on npm and located under discordoo package. It contains the core of the library. However, it is highly recommended creating a new project from zero. To do it, execute the following script in a new directory: npm init @discordoo It will ask you some questions. After a few seconds of waiting you are done! You have Discordoo installed on your PC. Existing project # In case you have an existing project, you can install Discordoo separately. npm install discordoo Congratulations! You have done step 1! More adventures are coming","title":"Step 1 - Installing Discordoo"},{"location":"base-guide/installing/#step-1-installing-discordoo","text":"In this step, you will know how to install Discordoo. Discordoo is hosted on npm and located under discordoo package. It contains the core of the library. However, it is highly recommended creating a new project from zero. To do it, execute the following script in a new directory: npm init @discordoo It will ask you some questions. After a few seconds of waiting you are done! You have Discordoo installed on your PC.","title":"Step 1 - Installing Discordoo"},{"location":"base-guide/installing/#existing-project","text":"In case you have an existing project, you can install Discordoo separately. npm install discordoo Congratulations! You have done step 1! More adventures are coming","title":"Existing project"},{"location":"base-guide/starting/","text":"Step 2 - Starting your bot # You can use built-in createApp function to create a client, setup providers and client options: TS import { createApp } from 'discordoo/wrapper' const client = createApp('some-discord-bot-token') .cacheProvider(/* some cache provider */) .gateway(/* some gateway options */) .build() client.start() .then(() => console.log('online!')) or, if you want to extend from the client: TS import { Client as DiscordooClient } from 'discordoo/core' class Client extends DiscordooClient { constructor(...props) { super(...props) console.log('hello from client constructor') } } const client = new Client(/* some client options */) client.useCacheProvider(/* some cache provider */) client.start() .then(() => console.log('online!'))","title":"Step 2 - Starting your bot"},{"location":"base-guide/starting/#step-2-starting-your-bot","text":"You can use built-in createApp function to create a client, setup providers and client options: TS import { createApp } from 'discordoo/wrapper' const client = createApp('some-discord-bot-token') .cacheProvider(/* some cache provider */) .gateway(/* some gateway options */) .build() client.start() .then(() => console.log('online!')) or, if you want to extend from the client: TS import { Client as DiscordooClient } from 'discordoo/core' class Client extends DiscordooClient { constructor(...props) { super(...props) console.log('hello from client constructor') } } const client = new Client(/* some client options */) client.useCacheProvider(/* some cache provider */) client.start() .then(() => console.log('online!'))","title":"Step 2 - Starting your bot"}]}